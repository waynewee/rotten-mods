{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/EditProfileModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Modal, Button, Form, Input, Select } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport { message } from \"antd\";\nimport userApi from \"../api/user\";\nimport schoolApi from \"../api/school\";\nimport courseApi from \"../api/course\";\n\nvar EditProfileModal = function EditProfileModal(_ref) {\n  _s();\n\n  var user = _ref.user,\n      toggleEditProfileModal = _ref.toggleEditProfileModal;\n\n  var _useState = useState([{\n    schoolId: \"\",\n    schoolName: \"\"\n  }]),\n      inputSchoolValues = _useState[0],\n      setSchoolInputValues = _useState[1];\n\n  var _useState2 = useState([{\n    courseId: \"\",\n    courseName: \"\"\n  }]),\n      inputCourseValues = _useState2[0],\n      setInputCourseValues = _useState2[1];\n\n  useEffect(function () {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  var populateSchools = function populateSchools() {\n    schoolApi.getAllSchools().then(function (response) {\n      console.log(\"got school\");\n      console.log(response);\n      var schoolsInDatabase = response.data.map(function (obj) {\n        var universityValue = {\n          schoolId: \"\",\n          schoolName: \"\"\n        };\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setSchoolInputValues(schoolsInDatabase);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n\n  var populateCourses = function populateCourses() {\n    courseApi.getAllCourses().then(function (response) {\n      var coursesInDatabase = response.data.map(function (obj) {\n        var course = {\n          courseId: \"\",\n          courseName: \"\"\n        };\n        course.courseId = obj._id;\n        course.courseName = obj.name;\n        return course;\n      });\n      setInputCourseValues(coursesInDatabase);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n\n  var onFormFinish = function onFormFinish(profileValues) {\n    var newUserDetails = {// \"name\" : profileValues.name,\n      // \"email\": user.email,\n      // \"password\": user.\n      // \"schoolId\": profileValues.s\n      // \"courseId\": \n      // \"currentYear\": 4\n    };\n    userApi.updateUser(newUserDetails).then(function (response) {\n      message.success(\"Your profile has been updated successfully\");\n    })[\"catch\"](function (error) {\n      message.error(error);\n    });\n  };\n\n  return __jsx(Modal, {\n    visible: true,\n    title: __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }\n    }, \" SIGNUP \"),\n    centered: true,\n    onCancel: toggleEditProfileModal,\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    initialValues: {},\n    onFinish: onFormFinish,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    name: \"fullname\",\n    label: \"Full Name\",\n    initialValue: user.fullName,\n    rules: [{\n      required: true,\n      message: \"Please enter your full name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    name: \"newYearOfStudy\",\n    label: \"Year of Study\",\n    initialValue: user.yearOfStudy,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    name: \"newCourseName\",\n    label: \"Your Course\",\n    initialValue: user.courseName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    name: \"newSchoolName\",\n    label: \"Your University\",\n    initialValue: user.schoolName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, inputSchoolValues.map(function (item) {\n    return __jsx(Select.Option, {\n      key: item.schoolName,\n      value: item.schoolId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, item.schoolName);\n  }))), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"SAVE PROFILE\"))));\n};\n\n_s(EditProfileModal, \"8gVc9MU2MLVCU4HELMHmkTzcFvw=\");\n\n_c = EditProfileModal;\nvar styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\"\n  }\n};\nexport default EditProfileModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileModal\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/EditProfileModal.tsx"],"names":["Modal","Button","Form","Input","Select","useState","useEffect","message","userApi","schoolApi","courseApi","EditProfileModal","user","toggleEditProfileModal","schoolId","schoolName","inputSchoolValues","setSchoolInputValues","courseId","courseName","inputCourseValues","setInputCourseValues","populateSchools","populateCourses","getAllSchools","then","response","console","log","schoolsInDatabase","data","map","obj","universityValue","_id","name","error","getAllCourses","coursesInDatabase","course","onFormFinish","profileValues","newUserDetails","updateUser","success","textAlign","fullName","required","yearOfStudy","item","styles","loginFormButton","width","backgroundColor"],"mappings":"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","sourcesContent":["import { Modal, Button, Form, Input, Select } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { User } from \"../types\";\nimport { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\n\nimport { message } from \"antd\";\nimport userApi from \"../api/user\";\nimport schoolApi from \"../api/school\";\nimport courseApi from \"../api/course\";\n\n\n\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { ModalState } from \"../types\";\nimport school from \"../api/school\";\n\n\n\ninterface EditProfileModalProps {\n  user: User,\n  toggleEditProfileModal: () => void\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({\n  user,\n  toggleEditProfileModal,\n}) => {\n\n  const [inputSchoolValues, setSchoolInputValues] = useState([\n    { schoolId: \"\", schoolName: \"\" },\n  ]);\n  const [inputCourseValues, setInputCourseValues] = useState([\n    { courseId: \"\", courseName: \"\" },\n  ]);\n\n  useEffect(() => {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  const populateSchools = () => {\n    schoolApi.getAllSchools()\n      .then((response) => {\n        console.log(\"got school\");\n        console.log(response);\n        const schoolsInDatabase = response.data.map((obj) => {\n          const universityValue = { schoolId: \"\", schoolName: \"\" };\n          universityValue.schoolId = obj._id;\n          universityValue.schoolName = obj.name;\n          return universityValue;\n        });\n        setSchoolInputValues(schoolsInDatabase);\n      })\n      .catch(error => console.log(error));\n  }\n  const populateCourses = () => {\n    courseApi.getAllCourses()\n      .then((response) => {\n        const coursesInDatabase = response.data.map((obj) => {\n          const course = { courseId: \"\", courseName: \"\" };\n          course.courseId = obj._id;\n          course.courseName = obj.name;\n          return course;\n        });\n        setInputCourseValues(coursesInDatabase);\n      })\n      .catch(error => console.log(error));\n  }\n\n\n  const onFormFinish = (profileValues) => {\n\n    const newUserDetails = {\n      // \"name\" : profileValues.name,\n      // \"email\": user.email,\n      // \"password\": user.\n      // \"schoolId\": profileValues.s\n      // \"courseId\": \n      // \"currentYear\": 4\n    }\n\n\n    userApi.updateUser(newUserDetails)\n      .then((response) => {\n        message.success(`Your profile has been updated successfully`);\n      })\n      .catch((error) => {\n        message.error(error);\n      })\n  };\n\n  return (\n    <Modal\n      visible={true}\n      title={<div style={{ textAlign: \"center\" }}> SIGNUP </div>}\n      centered\n      onCancel={toggleEditProfileModal}\n      footer={null}\n    >\n      <Form\n        name=\"normal_login\"\n        className=\"login-form\"\n        initialValues={{}}\n        onFinish={onFormFinish}\n      >\n        <Form.Item\n          name=\"fullname\"\n          label=\"Full Name\"\n          initialValue={user.fullName}\n          rules={[\n            { required: true, message: \"Please enter your full name!\" },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          name=\"newYearOfStudy\"\n          label=\"Year of Study\"\n          initialValue={user.yearOfStudy}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"newCourseName\"\n          label=\"Your Course\"\n          initialValue={user.courseName}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"newSchoolName\"\n          label=\"Your University\"\n          initialValue={user.schoolName}\n        >\n          <Select>\n            {inputSchoolValues.map((item) => (\n              <Select.Option key={item.schoolName} value={item.schoolId}>\n                {item.schoolName}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            style={styles.loginFormButton}\n          >\n            SAVE PROFILE\n           </Button>\n        </Form.Item>\n      </Form>\n\n    </Modal>\n  );\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\",\n  },\n};\n\nexport default EditProfileModal;\n"]},"metadata":{},"sourceType":"module"}