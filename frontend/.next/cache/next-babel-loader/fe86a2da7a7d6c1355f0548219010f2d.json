{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport modApi from \"../api/module\";\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\nimport { descriptionGreen } from \"../styles/colors\";\n\nvar Search = function Search(_ref) {\n  var _ref$initialSearchRes = _ref.initialSearchResults,\n      initialSearchResults = _ref$initialSearchRes === void 0 ? [] : _ref$initialSearchRes;\n\n  var _useState = useState(initialSearchResults),\n      searchResults = _useState[0],\n      setSearchResults = _useState[1];\n\n  var _useState2 = useState(11),\n      numberOfResults = _useState2[0],\n      setNumberOfResults = _useState2[1]; // the presence of that 11th result is an indicator that there are more than 10 results\n\n\n  var searchTerm = useSelector(function (state) {\n    return state.search.searchTerm;\n  });\n  useEffect(function () {\n    setNumberOfResults(10);\n  }, [searchTerm]);\n  useEffect(function () {\n    setSearchResults(initialSearchResults);\n  }, [initialSearchResults]);\n\n  var fetchMoreSearchResults = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return modApi.searchModule(searchTerm, numberOfResults + 10);\n\n            case 2:\n              results = _context.sent;\n              setSearchResults(results);\n              setNumberOfResults(numberOfResults + 10);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchMoreSearchResults() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n    title: \"Search results for \\\"\".concat(searchTerm, \"\\\"\")\n  }), __jsx(SearchModuleList, {\n    modules: searchResults.slice(0, numberOfResults - 1)\n  }), searchResults.length == numberOfResults && __jsx(SeeMoreButton, {\n    fetchMoreData: fetchMoreSearchResults,\n    style: {\n      backgroundColor: descriptionGreen\n    }\n  }), __jsx(SectionTitle, {\n    title: \"Similar results to \\\"\".concat(searchTerm, \"\\\"\")\n  }), __jsx(SearchModuleList, {\n    modules: []\n  }), __jsx(ModuleCompareModal, null));\n};\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var query, searchTerm, initialSearchResults;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = _ref3.query;\n            searchTerm = query.s;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return modApi.searchModule(searchTerm);\n\n          case 5:\n            initialSearchResults = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              initialSearchResults: initialSearchResults\n            });\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            return _context2.abrupt(\"return\", {\n              initialSearchResults: []\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}