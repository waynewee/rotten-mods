{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/AddReviewModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport reviewApi from \"../api/review\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue } from \"../styles/colors\";\n\nvar AddReviewModal = function AddReviewModal(_ref) {\n  _s();\n\n  var code = _ref.code,\n      modId = _ref.modId,\n      updateReviews = _ref.updateReviews,\n      isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility;\n  var userId = \"5f93fe299a31d12bf74a3101\"; // const userId = useSelector(state => state.auth.id) // TODO: wait for implementation of user redux state\n\n  var today = new Date();\n  var currentYear = today.getFullYear();\n  var currentMonth = today.getMonth();\n  var yearShortform = currentYear % 2000; // eg. 2020 => 20\n\n  var currentSemester = currentMonth < 6 ? 2 : 1;\n  var currentAYSecondYear = currentSemester === 1 ? yearShortform + 1 : yearShortform;\n  var yearMinusOne = currentAYSecondYear - 1;\n\n  var _useState = useState(\"\"),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useState2 = useState(1),\n      difficulty = _useState2[0],\n      setDifficulty = _useState2[1];\n\n  var _useState3 = useState(1),\n      ratings = _useState3[0],\n      setRatings = _useState3[1];\n\n  var _useState4 = useState(10),\n      workload = _useState4[0],\n      setWorkload = _useState4[1];\n\n  var _useState5 = useState(1),\n      semester = _useState5[0],\n      setSemester = _useState5[1];\n\n  var _useState6 = useState(\"\".concat(yearMinusOne, \"/\").concat(currentAYSecondYear)),\n      year = _useState6[0],\n      setYear = _useState6[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var reviewToSubmit, reviewPromise, difficultyPromise, starPromise;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              reviewToSubmit = {\n                text: text,\n                semesterTaken: semester,\n                acadYearTaken: year,\n                workload: workload\n              };\n              reviewPromise = reviewApi.addReviewOfModule(reviewToSubmit, modId, userId);\n              difficultyPromise = reviewApi.addRatingOfModule(difficulty, \"difficulty\", userId, modId, \"mod\");\n              starPromise = reviewApi.addRatingOfModule(ratings, \"star\", userId, modId, \"mod\");\n              _context.next = 6;\n              return Promise.all([reviewPromise, difficultyPromise, starPromise]);\n\n            case 6:\n              setModalVisibility(false);\n              updateReviews();\n              resetState();\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var resetState = function resetState() {\n    setText(\"\");\n    setDifficulty(1);\n    setRatings(1);\n    setWorkload(10);\n    setSemester(1);\n    setYear(\"\".concat(yearMinusOne, \"/\").concat(currentAYSecondYear));\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: reviewBlue,\n    submitColor: \"#3E59B9\",\n    title: \"Add Review\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: setModalVisibility,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"text\",\n    value: code,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Review\",\n    type: \"textarea\",\n    value: text,\n    setValue: setText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Year Taken\",\n    type: \"year\",\n    value: year,\n    setValue: setYear,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Semester Taken\",\n    type: \"semester\",\n    value: semester,\n    setValue: setSemester,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Difficulty\",\n    type: \"difficulty\",\n    value: difficulty,\n    setValue: setDifficulty,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Ratings\",\n    type: \"rate\",\n    value: ratings,\n    setValue: setRatings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddReviewModal, \"G9bcHzPt2q60UgSRvO+yfh2mAhg=\");\n\n_c = AddReviewModal;\nexport default AddReviewModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReviewModal\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/AddReviewModal.tsx"],"names":["useState","reviewApi","FormModal","FormModalItem","reviewBlue","AddReviewModal","code","modId","updateReviews","isModalVisible","setModalVisibility","userId","today","Date","currentYear","getFullYear","currentMonth","getMonth","yearShortform","currentSemester","currentAYSecondYear","yearMinusOne","text","setText","difficulty","setDifficulty","ratings","setRatings","workload","setWorkload","semester","setSemester","year","setYear","onSubmit","reviewToSubmit","semesterTaken","acadYearTaken","reviewPromise","addReviewOfModule","difficultyPromise","addRatingOfModule","starPromise","Promise","all","resetState"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { ModalState } from \"../types\";\nimport reviewApi from \"../api/review\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue } from \"../styles/colors\";\n\ninterface AddReviewModalProps extends ModalState {\n  code: string;\n  modId: string;\n  updateReviews: () => void;\n}\n\nconst AddReviewModal: React.FC<AddReviewModalProps> = ({ code, modId, updateReviews, isModalVisible, setModalVisibility }) => {\n  const userId = \"5f93fe299a31d12bf74a3101\";\n  // const userId = useSelector(state => state.auth.id) // TODO: wait for implementation of user redux state\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const currentMonth = today.getMonth();\n  const yearShortform = currentYear % 2000; // eg. 2020 => 20\n  const currentSemester = currentMonth < 6 ? 2 : 1;\n  const currentAYSecondYear = currentSemester === 1 ? yearShortform + 1 : yearShortform;\n  const yearMinusOne = currentAYSecondYear - 1;\n\n  const [text, setText] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(1);\n  const [ratings, setRatings] = useState(1);\n  const [workload, setWorkload] = useState(10);\n  const [semester, setSemester] = useState(1);\n  const [year, setYear] = useState(`${yearMinusOne}/${currentAYSecondYear}`);\n\n  const onSubmit = async () => {\n    const reviewToSubmit = {\n      text,\n      semesterTaken: semester,\n      acadYearTaken: year,\n      workload\n    }\n\n    const reviewPromise = reviewApi.addReviewOfModule(reviewToSubmit, modId, userId);\n    const difficultyPromise = reviewApi.addRatingOfModule(difficulty, \"difficulty\", userId, modId, \"mod\");\n    const starPromise = reviewApi.addRatingOfModule(ratings, \"star\", userId, modId, \"mod\");\n\n    await Promise.all([reviewPromise, difficultyPromise, starPromise]);\n    setModalVisibility(false);\n    updateReviews();\n    resetState();\n  }\n\n  const resetState = () => {\n    setText(\"\");\n    setDifficulty(1);\n    setRatings(1);\n    setWorkload(10);\n    setSemester(1);\n    setYear(`${yearMinusOne}/${currentAYSecondYear}`);\n  }\n\n  return (\n    <FormModal\n      backgroundColor={reviewBlue}\n      submitColor=\"#3E59B9\"\n      title=\"Add Review\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={setModalVisibility}\n      onSubmit={onSubmit}\n    >\n      <FormModalItem label=\"Module Code\" type=\"text\" value={code} />\n      <FormModalItem label=\"Review\" type=\"textarea\" value={text} setValue={setText} />\n      <FormModalItem label=\"Year Taken\" type=\"year\" value={year} setValue={setYear} />\n      <FormModalItem label=\"Semester Taken\" type=\"semester\" value={semester} setValue={setSemester} />\n      <FormModalItem label=\"Difficulty\" type=\"difficulty\" value={difficulty} setValue={setDifficulty} />\n      <FormModalItem label=\"Ratings\" type=\"rate\" value={ratings} setValue={setRatings} />\n      {/* <FormModalItem label=\"Expected Hours\" type=\"hours\" value={workload} setValue={setWorkload} /> */}\n    </FormModal>\n  )\n}\n\nexport default AddReviewModal;"]},"metadata":{},"sourceType":"module"}