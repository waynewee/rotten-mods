{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar baseUrl = \"http://localhost:8080/api/bookmark\";\n\nvar getBookmarks = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(baseUrl, \"/user/\").concat(userId), {\n              withCredentials: true\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getBookmarks(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar addBookmark = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId, modId) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.post(\"\".concat(baseUrl), {\n              userId: userId,\n              modId: modId\n            }, {\n              withCredentials: true\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addBookmark(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar deleteBookmark = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(bookmarkId) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios[\"delete\"](\"\".concat(baseUrl, \"/\").concat(bookmarkId), {\n              withCredentials: true\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteBookmark(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getBookmarks: getBookmarks,\n  addBookmark: addBookmark,\n  deleteBookmark: deleteBookmark\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/bookmark.ts"],"names":["axios","baseUrl","getBookmarks","userId","get","withCredentials","response","data","addBookmark","modId","post","deleteBookmark","bookmarkId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAG,oCAAhB;;AAEA,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIH,KAAK,CAACI,GAAN,WAAaH,OAAb,mBAA6BE,MAA7B,GAAuC;AAC5DE,cAAAA,eAAe,EAAE;AAD2C,aAAvC,CADJ;;AAAA;AACbC,YAAAA,QADa;AAAA,6CAIZA,QAAQ,CAACC,IAJG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZL,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAOA,IAAMM,WAAW;AAAA,uEAAG,kBAAOL,MAAP,EAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZT,KAAK,CAACU,IAAN,WACDT,OADC,GAEJ;AACEE,cAAAA,MAAM,EAANA,MADF;AAEEM,cAAAA,KAAK,EAALA;AAFF,aAFI,EAMJ;AACEJ,cAAAA,eAAe,EAAE;AADnB,aANI,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXG,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAaA,IAAMG,cAAc;AAAA,uEAAG,kBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfZ,KAAK,UAAL,WAAgBC,OAAhB,cAA2BW,UAA3B,GAAyC;AAC7CP,cAAAA,eAAe,EAAE;AAD4B,aAAzC,CADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdM,cAAc;AAAA;AAAA;AAAA,GAApB;;AAMA,eAAe;AACbT,EAAAA,YAAY,EAAZA,YADa;AAEbM,EAAAA,WAAW,EAAXA,WAFa;AAGbG,EAAAA,cAAc,EAAdA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:8080/api/bookmark\";\n\nconst getBookmarks = async (userId) => {\n  const response = await axios.get(`${baseUrl}/user/${userId}`, {\n    withCredentials: true,\n  });\n  return response.data;\n};\n\nconst addBookmark = async (userId, modId) => {\n  await axios.post(\n    `${baseUrl}`,\n    {\n      userId,\n      modId,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n};\n\nconst deleteBookmark = async (bookmarkId) => {\n  await axios.delete(`${baseUrl}/${bookmarkId}`, {\n    withCredentials: true,\n  });\n};\n\nexport default {\n  getBookmarks,\n  addBookmark,\n  deleteBookmark,\n};\n"]},"metadata":{},"sourceType":"module"}