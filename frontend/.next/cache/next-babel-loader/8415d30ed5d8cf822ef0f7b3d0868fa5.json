{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddCommentModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport commentApi from \"../api/comment\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { submitBlue, crossRed, commentBlue } from \"../styles/colors\";\n\nvar AddCommentModal = function AddCommentModal(_ref) {\n  _s();\n\n  var isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility,\n      reviewId = _ref.reviewId,\n      fetchComments = _ref.fetchComments;\n\n  var _useState = useState(\"\"),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useState2 = useState(\"Submit\"),\n      submitText = _useState2[0],\n      setSubmitText = _useState2[1];\n\n  var _useState3 = useState(submitBlue),\n      submitColor = _useState3[0],\n      setSubmitColor = _useState3[1];\n\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateForm()) {\n                _context.next = 4;\n                break;\n              }\n\n              setSubmitText(\"You did not comment anything. Once done click this button!\");\n              setSubmitColor(crossRed);\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.next = 6;\n              return commentApi.addComment(userId, comment, reviewId);\n\n            case 6:\n              setComment(\"\");\n              setSubmitText(\"Submit\");\n              setSubmitColor(submitBlue);\n              setModalVisibility(false);\n              fetchComments();\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateForm = function validateForm() {\n    return comment !== \"\";\n  };\n\n  var closeModal = function closeModal(isToClose) {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  };\n\n  return __jsx(FormModal, {\n    title: \"Add Comment\",\n    backgroundColor: commentBlue,\n    isModalVisible: isModalVisible,\n    setModalVisibility: closeModal,\n    submitColor: submitColor,\n    onSubmit: onSubmit,\n    submitText: submitText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Comment\",\n    type: \"textarea\",\n    value: comment,\n    setValue: setComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddCommentModal, \"6v8NVhY7cB1bXtKpQioS5sHzZtI=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddCommentModal;\nexport default AddCommentModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCommentModal\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddCommentModal.tsx"],"names":["useState","useSelector","commentApi","FormModal","FormModalItem","submitBlue","crossRed","commentBlue","AddCommentModal","isModalVisible","setModalVisibility","reviewId","fetchComments","comment","setComment","submitText","setSubmitText","submitColor","setSubmitColor","userId","state","auth","user","_id","onSubmit","validateForm","addComment","closeModal","isToClose"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,WAA/B,QAAkD,kBAAlD;;AAOA,IAAMC,eAA+C,GAAG,SAAlDA,eAAkD,OAAqE;AAAA;;AAAA,MAAlEC,cAAkE,QAAlEA,cAAkE;AAAA,MAAlDC,kBAAkD,QAAlDA,kBAAkD;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AAAA,kBAC7FZ,QAAQ,CAAC,EAAD,CADqF;AAAA,MACpHa,OADoH;AAAA,MAC3GC,UAD2G;;AAAA,mBAEvFd,QAAQ,CAAC,QAAD,CAF+E;AAAA,MAEpHe,UAFoH;AAAA,MAExGC,aAFwG;;AAAA,mBAGrFhB,QAAQ,CAACK,UAAD,CAH6E;AAAA,MAGpHY,WAHoH;AAAA,MAGvGC,cAHuG;;AAI3H,MAAMC,MAAM,GAAGlB,WAAW,CAAC,UAAAmB,KAAK;AAAA;;AAAA,+BAAIA,KAAK,CAACC,IAAN,CAAWC,IAAf,qDAAI,iBAAiBC,GAArB;AAAA,GAAN,CAA1B;;AAEA,MAAMC,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,kBACVC,YAAY,EADF;AAAA;AAAA;AAAA;;AAEbT,cAAAA,aAAa,CAAC,4DAAD,CAAb;AACAE,cAAAA,cAAc,CAACZ,QAAD,CAAd;AAHa;;AAAA;AAAA;AAAA,qBAOTJ,UAAU,CAACwB,UAAX,CAAsBP,MAAtB,EAA8BN,OAA9B,EAAuCF,QAAvC,CAPS;;AAAA;AAQfG,cAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,cAAAA,aAAa,CAAC,QAAD,CAAb;AACAE,cAAAA,cAAc,CAACb,UAAD,CAAd;AACAK,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAE,cAAAA,aAAa;;AAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARY,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAeA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMZ,OAAO,KAAK,EAAlB;AAAA,GAArB;;AAEA,MAAMc,UAAU,GAAG,SAAbA,UAAa,CAAAC,SAAS,EAAI;AAC9BlB,IAAAA,kBAAkB,CAACkB,SAAD,CAAlB;AACAV,IAAAA,cAAc,CAACb,UAAD,CAAd;AACAW,IAAAA,aAAa,CAAC,QAAD,CAAb;AACD,GAJD;;AAMA,SACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,eAAe,EAAET,WAFnB;AAGE,IAAA,cAAc,EAAEE,cAHlB;AAIE,IAAA,kBAAkB,EAAEkB,UAJtB;AAKE,IAAA,WAAW,EAAEV,WALf;AAME,IAAA,QAAQ,EAAEO,QANZ;AAOE,IAAA,UAAU,EAAET,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,SAArB;AAA+B,IAAA,IAAI,EAAC,UAApC;AAA+C,IAAA,KAAK,EAAEF,OAAtD;AAA+D,IAAA,QAAQ,EAAEC,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA1CD;;GAAMN,e;UAIWP,W;;;KAJXO,e;AA4CN,eAAeA,eAAf","sourcesContent":["import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalState } from \"../types\";\nimport commentApi from \"../api/comment\";\n\nimport FormModal from \"./FormModal\"\nimport FormModalItem from \"./FormModalItem\";\nimport { submitBlue, crossRed, commentBlue } from \"../styles/colors\";\n\ninterface AddCommentModalProps extends ModalState {\n  reviewId: string;\n  fetchComments: () => void;\n}\n\nconst AddCommentModal: React.FC<AddCommentModalProps> = ({ isModalVisible, setModalVisibility, reviewId, fetchComments }) => {\n  const [comment, setComment] = useState(\"\");\n  const [submitText, setSubmitText] = useState(\"Submit\");\n  const [submitColor, setSubmitColor] = useState(submitBlue);\n  const userId = useSelector(state => state.auth.user?._id);\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      setSubmitText(\"You did not comment anything. Once done click this button!\");\n      setSubmitColor(crossRed);\n      return;\n    }\n\n    await commentApi.addComment(userId, comment, reviewId);\n    setComment(\"\");\n    setSubmitText(\"Submit\");\n    setSubmitColor(submitBlue);\n    setModalVisibility(false);\n    fetchComments();\n  }\n\n  const validateForm = () => comment !== \"\";\n\n  const closeModal = isToClose => {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  }\n\n  return (\n    <FormModal\n      title=\"Add Comment\"\n      backgroundColor={commentBlue}\n      isModalVisible={isModalVisible}\n      setModalVisibility={closeModal}\n      submitColor={submitColor}\n      onSubmit={onSubmit}\n      submitText={submitText}\n    >\n      <FormModalItem label=\"Comment\" type=\"textarea\" value={comment} setValue={setComment} />\n    </FormModal>\n  )\n}\n\nexport default AddCommentModal;"]},"metadata":{},"sourceType":"module"}