{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from \"antd\";\nimport \"../styles/antd.less\";\nimport { useSelector, useRouter } from \"react-redux\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\n\nconst ProfileButton = ({\n  isAuthenticated\n}) => {\n  const {\n    0: loginModalVisible,\n    1: setLoginModalVisible\n  } = useState(false);\n  const {\n    0: signupModalVisible,\n    1: setSignupModalVisible\n  } = useState(false);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(state => state.auth.user);\n  const router = useRouter();\n  useEffect(() => {\n    isLoggedIn ? setLoginModalVisible(false) : null; // console.log(\"the user is \");\n    // console.log(user);\n  });\n\n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const navigateToModuleReviewPage = () => {\n    router.push({\n      pathname: \"/module-review\",\n      query: {\n        id: _id\n      }\n    });\n  }; // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n\n\n  return __jsx(React.Fragment, null, isLoggedIn ? __jsx(\"div\", {\n    style: styles.container,\n    onClick: navigateToProfilePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"text\",\n    icon: __jsx(UserOutlined, {\n      style: {\n        fontSize: 25,\n        color: \"#B9B9B9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 39\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    style: styles.userName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, user.fullName)) : __jsx(Button, {\n    type: \"primary\",\n    onClick: toggleLoginModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Log In\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 43\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }) : null);\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  userName: {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15\n  }\n};\nexport default ProfileButton;\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n  // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n}","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["Button","useSelector","useRouter","UserOutlined","useEffect","useState","LoginModal","SignupModal","ProfileButton","isAuthenticated","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","isLoggedIn","state","auth","user","router","toggleLoginModal","toggleSignupModal","switchModals","navigateToModuleReviewPage","push","pathname","query","id","_id","styles","container","navigateToProfilePage","fontSize","color","userName","fullName","display","alignItems","paddingLeft","margin"],"mappings":"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","sourcesContent":["import { Button } from \"antd\";\nimport \"../styles/antd.less\";\n\nimport { useSelector,useRouter } from \"react-redux\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { codeBlue } from \"../styles/colors\";\nimport { User } from \"../types\";\n\n\ninterface Props {\n  isAuthenticated: boolean;\n}\n\n\nconst ProfileButton: React.FC<Props> = ({ isAuthenticated }) => {\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const [signupModalVisible, setSignupModalVisible] = useState(false);\n  const isLoggedIn: boolean = useSelector(state => state.auth.isLoggedIn);\n  const user: User = useSelector(state => state.auth.user);\n\n  const router = useRouter();\n\n\n  useEffect(()=> {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n    // console.log(\"the user is \");\n    // console.log(user);\n  })\n  \n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  }\n  \n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  }\n  \n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }\n\n  const navigateToModuleReviewPage = () => {\n    router.push({\n      pathname: \"/module-review\",\n      query: { id: _id }\n    })\n  }\n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return (\n    <>\n      {\n        isLoggedIn \n        ? <div style= {styles.container} onClick={navigateToProfilePage}> \n            <Button type=\"text\" icon={<UserOutlined style={{ fontSize: 25, color: \"#B9B9B9\" }} />} />  \n            <p style={styles.userName}>{user.fullName}</p>\n          </div>\n      \n        : <Button type=\"primary\" onClick={toggleLoginModal}>\n            Log In\n          </Button>\n      }\n\n      {loginModalVisible && !isLoggedIn ? <LoginModal toggles={{ toggleLoginModal, switchModals }} /> : null}\n      {signupModalVisible ? <SignupModal toggles={{ toggleSignupModal, switchModals }} /> : null}\n    </>\n    \n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  userName : {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15\n  }\n}\n\nexport default ProfileButton;\n\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n              // style={{\n      //   position: \"relative\",\n      //   top: -1.5,\n      //   fontSize: 19,\n      //   borderWidth: 0,\n      //   marginLeft: 10,\n      //   backgroundColor: \"#fff\",\n      // }}\n}\n"]},"metadata":{},"sourceType":"module"}