{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddSchoolModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { message } from \"antd\";\nimport schoolApi from \"../api/school\";\nimport { useState } from \"react\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\n\nvar AddSchoolModal = function AddSchoolModal(_ref) {\n  _s();\n\n  var isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility;\n\n  var _useState = useState(\"\"),\n      school = _useState[0],\n      setSchool = _useState[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!validateForm()) {\n                school;\n              }\n\n              _context.next = 3;\n              return schoolApi.addSchool(school);\n\n            case 3:\n              setModalVisibility(false);\n              message.success(\"The school \".concat(school, \" has been added successfully!\"));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateForm = function validateForm() {\n    return school !== \"\";\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: codeBlue,\n    submitColor: \"#3E59B9\",\n    title: \"Add School\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: setModalVisibility,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"School Name\",\n    type: \"input\",\n    value: school,\n    setValue: setSchool,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddSchoolModal, \"/7lFBCOqXqTa9gWpLgWdwY3oJQM=\");\n\n_c = AddSchoolModal;\nvar styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\"\n  }\n};\nexport default AddSchoolModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSchoolModal\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddSchoolModal.tsx"],"names":["message","schoolApi","useState","FormModal","FormModalItem","codeBlue","AddSchoolModal","isModalVisible","setModalVisibility","school","setSchool","onSubmit","validateForm","addSchool","success","styles","loginFormButton","width","backgroundColor"],"mappings":";;;;;;;;;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAGA,IAAMC,cAAoC,GAAG,SAAvCA,cAAuC,OAGvC;AAAA;;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,kBACI,QADJA,kBACI;;AAAA,kBACwBN,QAAQ,CAAC,EAAD,CADhC;AAAA,MACGO,MADH;AAAA,MACWC,SADX;;AAGJ,MAAMC,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AACf,kBAAI,CAACC,YAAY,EAAjB,EAAqB;AACnBH,gBAAAA,MAAM;AACP;;AAHc;AAAA,qBAITR,SAAS,CAACY,SAAV,CAAoBJ,MAApB,CAJS;;AAAA;AAKfD,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAR,cAAAA,OAAO,CAACc,OAAR,sBAA8BL,MAA9B;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARE,QAAQ;AAAA;AAAA;AAAA,KAAd;;AASA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOH,MAAM,KAAK,EAAlB;AACD,GAFD;;AAIA,SACE,MAAC,SAAD;AACE,IAAA,eAAe,EAAEJ,QADnB;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAC,YAHR;AAIE,IAAA,cAAc,EAAEE,cAJlB;AAKE,IAAA,kBAAkB,EAAEC,kBALtB;AAME,IAAA,QAAQ,EAAEG,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,MAHT;AAIE,IAAA,QAAQ,EAAEC,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CApCD;;GAAMJ,c;;KAAAA,c;AAsCN,IAAMS,MAAM,GAAG;AACbC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE,MADQ;AAEfC,IAAAA,eAAe,EAAE;AAFF;AADJ,CAAf;AAOA,eAAeZ,cAAf","sourcesContent":["import { message } from \"antd\";\nimport schoolApi from \"../api/school\";\nimport { useState } from \"react\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { ModalState } from \"../types\";\n\nconst AddSchoolModal: React.FC<ModalState> = ({\n  isModalVisible,\n  setModalVisibility,\n}) => {\n  const [school, setSchool] = useState(\"\");\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      school\n    }\n    await schoolApi.addSchool(school);\n    setModalVisibility(false);\n    message.success(`The school ${school} has been added successfully!`);\n  };\n\n  const validateForm = () => {\n    return school !== \"\";\n  };\n\n  return (\n    <FormModal\n      backgroundColor={codeBlue}\n      submitColor=\"#3E59B9\"\n      title=\"Add School\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={setModalVisibility}\n      onSubmit={onSubmit}\n    >\n      <FormModalItem\n        label=\"School Name\"\n        type=\"input\"\n        value={school}\n        setValue={setSchool}\n      />\n    </FormModal>\n  );\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\",\n  },\n};\n\nexport default AddSchoolModal;\n"]},"metadata":{},"sourceType":"module"}