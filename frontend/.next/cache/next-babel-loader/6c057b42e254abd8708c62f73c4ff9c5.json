{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/AddRatingsModal.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport reviewApi from \"../api/review\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue, crossRed } from \"../styles/colors\";\n\nconst AddRatingsModal = ({\n  code,\n  modId,\n  ratingsByUser: ratingByUser,\n  isModalVisible,\n  setModalVisibility\n}) => {\n  var _ratingByUser$value;\n\n  const userId = useSelector(state => {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  const {\n    0: ratings,\n    1: setRatings\n  } = useState((_ratingByUser$value = ratingByUser === null || ratingByUser === void 0 ? void 0 : ratingByUser.value) !== null && _ratingByUser$value !== void 0 ? _ratingByUser$value : 0);\n  const {\n    0: submitText,\n    1: setSubmitText\n  } = useState(\"Submit\");\n  const {\n    0: submitColor,\n    1: setSubmitColor\n  } = useState(submitBlue);\n  useEffect(() => {\n    var _ratingByUser$value2;\n\n    setRatings((_ratingByUser$value2 = ratingByUser === null || ratingByUser === void 0 ? void 0 : ratingByUser.value) !== null && _ratingByUser$value2 !== void 0 ? _ratingByUser$value2 : 0);\n  }, [ratingByUser]);\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      setSubmitText(\"You did not rate the module. Once done click this button!\");\n      setSubmitColor(crossRed);\n      return;\n    }\n\n    if (ratingByUser) {\n      await reviewApi.updateRating(ratings, \"star\", userId, modId, \"mod\", ratingByUser._id);\n    } else {\n      await reviewApi.addRating(ratings, \"star\", userId, modId, \"mod\");\n    }\n\n    setModalVisibility(false);\n  };\n\n  const validateForm = () => ratings !== 0;\n\n  const closeModal = isToClose => {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: reviewBlue,\n    submitColor: submitColor,\n    title: \"Rate the Module\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: closeModal,\n    onSubmit: onSubmit,\n    submitText: submitText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"text\",\n    value: code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Ratings\",\n    type: \"rate\",\n    value: ratings,\n    setValue: setRatings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AddRatingsModal;","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/AddRatingsModal.tsx"],"names":["useState","useEffect","useSelector","reviewApi","FormModal","FormModalItem","reviewBlue","submitBlue","crossRed","AddRatingsModal","code","modId","ratingsByUser","ratingByUser","isModalVisible","setModalVisibility","userId","state","auth","user","_id","ratings","setRatings","value","submitText","setSubmitText","submitColor","setSubmitColor","onSubmit","validateForm","updateRating","addRating","closeModal","isToClose"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalState } from \"../types\";\nimport reviewApi from \"../api/review\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue, crossRed } from \"../styles/colors\";\n\ninterface AddRatingsModalProps extends ModalState {\n  code: string;\n  modId: string;\n  ratingsByUser?: { value: number, _id: string };\n}\n\nconst AddRatingsModal: React.FC<AddRatingsModalProps> = ({ code, modId, ratingsByUser: ratingByUser, isModalVisible, setModalVisibility }) => {\n  const userId = useSelector(state => state.auth.user?._id);\n  const [ratings, setRatings] = useState(ratingByUser?.value ?? 0);\n  const [submitText, setSubmitText] = useState(\"Submit\");\n  const [submitColor, setSubmitColor] = useState(submitBlue);\n\n  useEffect(() => {\n    setRatings(ratingByUser?.value ?? 0)\n  }, [ratingByUser]);\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      setSubmitText(\"You did not rate the module. Once done click this button!\");\n      setSubmitColor(crossRed);\n      return;\n    }\n\n    if (ratingByUser) {\n      await reviewApi.updateRating(ratings, \"star\", userId, modId, \"mod\", ratingByUser._id);\n    } else {\n      await reviewApi.addRating(ratings, \"star\", userId, modId, \"mod\");\n    }\n    setModalVisibility(false);\n  }\n\n  const validateForm = (): boolean => ratings !== 0;\n\n  const closeModal = isToClose => {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  }\n\n  return (\n    <FormModal\n      backgroundColor={reviewBlue}\n      submitColor={submitColor}\n      title=\"Rate the Module\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={closeModal}\n      onSubmit={onSubmit}\n      submitText={submitText}\n    >\n      <FormModalItem label=\"Module Code\" type=\"text\" value={code} />\n      <FormModalItem label=\"Ratings\" type=\"rate\" value={ratings} setValue={setRatings} />\n    </FormModal>\n  )\n}\n\nexport default AddRatingsModal;"]},"metadata":{},"sourceType":"module"}