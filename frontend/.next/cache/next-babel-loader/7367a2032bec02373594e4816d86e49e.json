{"ast":null,"code":"import { LOG_USER_IN, LOG_USER_OUT } from \"../redux/constants\";\nimport authApi from \"../api/auth\";\nimport courseApi from \"../api/course\";\nimport { message } from 'antd';\n\nasync function signUp(values) {\n  console.log(\"Sign Up Service received\");\n  console.log(values);\n  const {\n    fullname,\n    emailaddress,\n    userpassword,\n    university,\n    course,\n    yearofstudy\n  } = values; // let createUserConfig = {\n  //     method: 'post',\n  //     url: 'http://localhost:8080/api/user',\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     data: {\n  //         \"name\": values.fullname,\n  //         \"email\": values.emailaddress,\n  //         \"password\": values.userpassword,\n  //         \"schoolId\": values.university,\n  //         \"courseId\": values.course,\n  //         \"currentYear\": values.yearofstudy\n  //     }\n  // };\n  // let createSchoolConfig = {\n  //     method: 'post',\n  //     url: 'http://localhost:8080/api/school',\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     data: {\n  //         \"name\": values.fullname,\n  //     }\n  // };\n  // let createCourseConfig = {\n  //     method: 'post',\n  //     url: 'http://localhost:8080/api/course',\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     data: {\n  //         \"name\": values.fullname,\n  //     }\n  // };\n  // if schoolId is user created, then create a new school in the system\n\n  if (course !== \"userCreated\" && university !== \"userCreated\") {\n    const data = await authApi.signUp(fullname, emailaddress, userpassword, university, course, yearofstudy).catch(error => {\n      throw error;\n    });\n  }\n}\n\nasync function logIn(values, dispatch) {\n  const {\n    emailaddress,\n    password\n  } = values;\n  const data = await authApi.logIn(emailaddress, password).catch(error => {\n    throw error;\n  });\n\n  if (data) {\n    const {\n      name,\n      currentYear,\n      courseId,\n      _id\n    } = data;\n    const courseData = await courseApi.getCourse(courseId);\n    console.log(courseData);\n    const user = {\n      fullName: name,\n      yearOfStudy: currentYear,\n      studyCourse: courseData.name,\n      _id\n    };\n    window.localStorage.setItem(\"ROTTENMODS_EMAIL\", emailaddress);\n    window.localStorage.setItem(\"ROTTENMODS_PASSWORD\", password);\n    dispatch({\n      type: LOG_USER_IN,\n      payload: user\n    });\n  }\n}\n\nfunction logOut(dispatch) {\n  window.localStorage.removeItem(\"ROTTENMODS_EMAIL\");\n  window.localStorage.removeItem(\"ROTTENMODS_PASSWORD\");\n  message.success(\"Successfully Logged Out\");\n  dispatch({\n    type: LOG_USER_OUT\n  });\n}\n\nexport default {\n  signUp,\n  logIn,\n  logOut\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/services/authentication.tsx"],"names":["LOG_USER_IN","LOG_USER_OUT","authApi","courseApi","message","signUp","values","console","log","fullname","emailaddress","userpassword","university","course","yearofstudy","data","catch","error","logIn","dispatch","password","name","currentYear","courseId","_id","courseData","getCourse","user","fullName","yearOfStudy","studyCourse","window","localStorage","setItem","type","payload","logOut","removeItem","success"],"mappings":"AACA,SAASA,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,SAASC,OAAT,QAAwB,MAAxB;;AAEA,eAAeC,MAAf,CAAsBC,MAAtB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAGA,QAAM;AAACG,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,YAAzB;AAAuCC,IAAAA,UAAvC;AAAmDC,IAAAA,MAAnD;AAA2DC,IAAAA;AAA3D,MAA0ER,MAAhF,CAL0B,CAO1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,MAAIO,MAAM,KAAK,aAAX,IAA4BD,UAAU,KAAK,aAA/C,EAA8D;AAE1D,UAAMG,IAAI,GAAG,MAAMb,OAAO,CAACG,MAAR,CAAeI,QAAf,EAAyBC,YAAzB,EAAuCC,YAAvC,EAAqDC,UAArD,EAAiEC,MAAjE,EAAyEC,WAAzE,EAAsFE,KAAtF,CAA6FC,KAAD,IAAW;AACtH,YAAMA,KAAN;AACH,KAFkB,CAAnB;AAIH;AAEJ;;AAGD,eAAeC,KAAf,CAAqBZ,MAArB,EAA6Ba,QAA7B,EAAuC;AACnC,QAAM;AAAET,IAAAA,YAAF;AAAgBU,IAAAA;AAAhB,MAA6Bd,MAAnC;AACA,QAAMS,IAAI,GAAG,MAAMb,OAAO,CAACgB,KAAR,CAAcR,YAAd,EAA4BU,QAA5B,EAAsCJ,KAAtC,CAA6CC,KAAD,IAAU;AACrE,UAAMA,KAAN;AACH,GAFkB,CAAnB;;AAGA,MAAIF,IAAJ,EAAU;AACN,UAAM;AAAEM,MAAAA,IAAF;AAAQC,MAAAA,WAAR;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA;AAA/B,QAAuCT,IAA7C;AACA,UAAMU,UAAU,GAAG,MAAMtB,SAAS,CAACuB,SAAV,CAAoBH,QAApB,CAAzB;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,UAAZ;AACA,UAAME,IAAU,GAAG;AACfC,MAAAA,QAAQ,EAAEP,IADK;AAEfQ,MAAAA,WAAW,EAAEP,WAFE;AAGfQ,MAAAA,WAAW,EAAEL,UAAU,CAACJ,IAHT;AAIfG,MAAAA;AAJe,KAAnB;AAOAO,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,EAAgDvB,YAAhD;AACAqB,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,qBAA5B,EAAmDb,QAAnD;AAEAD,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAElC,WADD;AAELmC,MAAAA,OAAO,EAAER;AAFJ,KAAD,CAAR;AAKH;AAEJ;;AAED,SAASS,MAAT,CAAgBjB,QAAhB,EAA0B;AACtBY,EAAAA,MAAM,CAACC,YAAP,CAAoBK,UAApB,CAA+B,kBAA/B;AACAN,EAAAA,MAAM,CAACC,YAAP,CAAoBK,UAApB,CAA+B,qBAA/B;AACAjC,EAAAA,OAAO,CAACkC,OAAR,CAAgB,yBAAhB;AAEAnB,EAAAA,QAAQ,CAAC;AACLe,IAAAA,IAAI,EAAEjC;AADD,GAAD,CAAR;AAIH;;AAED,eAAe;AACXI,EAAAA,MADW;AAEXa,EAAAA,KAFW;AAGXkB,EAAAA;AAHW,CAAf","sourcesContent":["import axios from 'axios';\nimport { LOG_USER_IN, LOG_USER_OUT } from \"../redux/constants\";\nimport { User } from \"../types\";\nimport authApi from \"../api/auth\";\nimport courseApi from \"../api/course\";\n\nimport { message } from 'antd';\n\nasync function signUp(values) {\n    console.log(\"Sign Up Service received\");\n    console.log(values);\n\n\n    const {fullname, emailaddress, userpassword, university, course, yearofstudy} = values;\n\n    // let createUserConfig = {\n    //     method: 'post',\n    //     url: 'http://localhost:8080/api/user',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     data: {\n    //         \"name\": values.fullname,\n    //         \"email\": values.emailaddress,\n    //         \"password\": values.userpassword,\n    //         \"schoolId\": values.university,\n    //         \"courseId\": values.course,\n    //         \"currentYear\": values.yearofstudy\n    //     }\n    // };\n\n    // let createSchoolConfig = {\n    //     method: 'post',\n    //     url: 'http://localhost:8080/api/school',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     data: {\n    //         \"name\": values.fullname,\n    //     }\n    // };\n\n    // let createCourseConfig = {\n    //     method: 'post',\n    //     url: 'http://localhost:8080/api/course',\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     data: {\n    //         \"name\": values.fullname,\n    //     }\n    // };\n\n\n    // if schoolId is user created, then create a new school in the system\n\n    if (course !== \"userCreated\" && university !== \"userCreated\") {\n        \n        const data = await authApi.signUp(fullname, emailaddress, userpassword, university, course, yearofstudy).catch((error) => {\n            throw error;\n        })\n\n    }\n\n}\n\n\nasync function logIn(values, dispatch) {\n    const { emailaddress, password } = values;\n    const data = await authApi.logIn(emailaddress, password).catch((error)=> {\n        throw error;\n    })\n    if (data) {\n        const { name, currentYear, courseId, _id } = data;\n        const courseData = await courseApi.getCourse(courseId);\n        console.log(courseData);\n        const user: User = {\n            fullName: name,\n            yearOfStudy: currentYear,\n            studyCourse: courseData.name,\n            _id\n        }\n\n        window.localStorage.setItem(\"ROTTENMODS_EMAIL\", emailaddress);\n        window.localStorage.setItem(\"ROTTENMODS_PASSWORD\", password);\n\n        dispatch({\n            type: LOG_USER_IN,\n            payload: user\n        });\n\n    }\n\n}\n\nfunction logOut(dispatch) {\n    window.localStorage.removeItem(\"ROTTENMODS_EMAIL\");\n    window.localStorage.removeItem(\"ROTTENMODS_PASSWORD\");\n    message.success(\"Successfully Logged Out\")\n\n    dispatch({\n        type: LOG_USER_OUT,\n    })\n\n}\n\nexport default {\n    signUp,\n    logIn,\n    logOut\n}"]},"metadata":{},"sourceType":"module"}