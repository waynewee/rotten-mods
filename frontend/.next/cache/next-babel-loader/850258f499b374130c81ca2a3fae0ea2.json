{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { logInAction, logOutAction } from './../redux/actions/auth';\nimport authApi from \"../api/auth\";\nimport courseApi from \"../api/course\";\nimport { store } from \"../redux/store\";\nimport { message } from \"antd\";\n\nfunction signUp(_x) {\n  return _signUp.apply(this, arguments);\n}\n\nfunction _signUp() {\n  _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n    var fullname, emailaddress, userpassword, university, course, yearofstudy, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fullname = values.fullname, emailaddress = values.emailaddress, userpassword = values.userpassword, university = values.university, course = values.course, yearofstudy = values.yearofstudy; // let createUserConfig = {\n            //     method: 'post',\n            //     url: 'http://localhost:8080/api/user',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     data: {\n            //         \"name\": values.fullname,\n            //         \"email\": values.emailaddress,\n            //         \"password\": values.userpassword,\n            //         \"schoolId\": values.university,\n            //         \"courseId\": values.course,\n            //         \"currentYear\": values.yearofstudy\n            //     }\n            // };\n            // let createSchoolConfig = {\n            //     method: 'post',\n            //     url: 'http://localhost:8080/api/school',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     data: {\n            //         \"name\": values.fullname,\n            //     }\n            // };\n            // let createCourseConfig = {\n            //     method: 'post',\n            //     url: 'http://localhost:8080/api/course',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     data: {\n            //         \"name\": values.fullname,\n            //     }\n            // };\n            // if schoolId is user created, then create a new school in the system\n\n            if (!(course !== \"userCreated\" && university !== \"userCreated\")) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return authApi.signUp(fullname, emailaddress, userpassword)[\"catch\"](function (error) {\n              throw error;\n            });\n\n          case 4:\n            data = _context.sent;\n\n            if (data) {\n              console.log(\"sign up success\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _signUp.apply(this, arguments);\n}\n\nfunction logIn(_x2) {\n  return _logIn.apply(this, arguments);\n}\n\nfunction _logIn() {\n  _logIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n    var emailaddress, password, data, name, currentYear, courseId, _id, courseData, user;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            emailaddress = values.emailaddress, password = values.password;\n            _context2.next = 3;\n            return authApi.logIn(emailaddress, password)[\"catch\"](function (error) {\n              throw error;\n            });\n\n          case 3:\n            data = _context2.sent;\n\n            if (!data) {\n              _context2.next = 15;\n              break;\n            }\n\n            name = data.name, currentYear = data.currentYear, courseId = data.courseId, _id = data._id;\n            courseData = null;\n\n            if (!courseId) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 10;\n            return courseApi.getCourse(courseId);\n\n          case 10:\n            courseData = _context2.sent;\n\n          case 11:\n            user = {\n              fullName: name,\n              yearOfStudy: currentYear ? currentYear : null,\n              studyCourse: courseData ? courseData.name : null,\n              _id: _id\n            };\n            window.localStorage.setItem(\"ROTTENMODS_EMAIL\", emailaddress);\n            window.localStorage.setItem(\"ROTTENMODS_PASSWORD\", password);\n            store.dispatch(logInAction(user));\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _logIn.apply(this, arguments);\n}\n\nfunction logOut() {\n  return _logOut.apply(this, arguments);\n}\n\nfunction _logOut() {\n  _logOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return authApi.logOut()[\"catch\"](function (error) {\n              throw error;\n            });\n\n          case 2:\n            response = _context3.sent;\n            window.localStorage.removeItem(\"ROTTENMODS_EMAIL\");\n            window.localStorage.removeItem(\"ROTTENMODS_PASSWORD\");\n            message.success(\"Successfully Logged Out!\");\n            store.dispatch(logOutAction());\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _logOut.apply(this, arguments);\n}\n\n;\nexport default {\n  signUp: signUp,\n  logIn: logIn,\n  logOut: logOut\n};","map":null,"metadata":{},"sourceType":"module"}