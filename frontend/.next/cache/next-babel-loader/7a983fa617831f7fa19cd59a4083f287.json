{"ast":null,"code":"import axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\nconst reviewBaseUrl = `${serverDomain}/api/review`;\nconst ratingBaseUrl = `${serverDomain}/api/rating`;\n\nconst getReviewsOfModule = async (modId, limit = 10, page = 1) => {\n  const query = queryString.stringify({\n    modId\n  });\n  const response = await axios.get(`${reviewBaseUrl}/?${query}`);\n  return response.data;\n};\n\nconst getReviewsOfUser = async userId => {\n  const query = queryString.stringify({\n    userId\n  });\n  const response = await axios.get(`${reviewBaseUrl}/?${query}`, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nconst addReviewOfModule = async body => {\n  const response = await axios.post(reviewBaseUrl, body, {\n    withCredentials: true\n  });\n  return response.status;\n};\n\nconst updateReviewOfModule = async (body, reviewId) => {\n  const response = await axios.put(`${reviewBaseUrl}/${reviewId}`, body, {\n    withCredentials: true\n  });\n  return response.status;\n};\n\nconst addRating = async (value, type, userId, subId, sub) => {\n  const response = await axios.post(ratingBaseUrl, {\n    type,\n    userId,\n    subId,\n    value,\n    sub\n  }, {\n    withCredentials: true\n  });\n  return response.status;\n};\n\nconst getRatingById = async id => {\n  const response = await axios.get(`${ratingBaseUrl}/${id}`);\n  return response;\n};\n\nconst getRating = async (subscriberType, subscriberId, userId, ratingType) => {\n  const query = queryString.stringify({\n    sub: subscriberType,\n    subId: subscriberId,\n    userId,\n    type: ratingType\n  });\n  const response = await axios.get(`${ratingBaseUrl}/?${query}`);\n  return response.data;\n};\n\nconst updateRating = async (value, type, userId, subId, sub, ratingId) => {\n  const response = await axios.put(`${ratingBaseUrl}/${ratingId}`, {\n    sub,\n    subId,\n    userId,\n    type,\n    value\n  }, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nexport default {\n  getReviewsOfModule,\n  getReviewsOfUser,\n  addReviewOfModule,\n  addRating,\n  getRating,\n  updateRating,\n  updateReviewOfModule\n};","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/api/review.ts"],"names":["axios","queryString","serverDomain","reviewBaseUrl","ratingBaseUrl","getReviewsOfModule","modId","limit","page","query","stringify","response","get","data","getReviewsOfUser","userId","withCredentials","addReviewOfModule","body","post","status","updateReviewOfModule","reviewId","put","addRating","value","type","subId","sub","getRatingById","id","getRating","subscriberType","subscriberId","ratingType","updateRating","ratingId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\nimport { Rating } from \"../types\";\n\nconst reviewBaseUrl = `${serverDomain}/api/review`;\nconst ratingBaseUrl = `${serverDomain}/api/rating`;\n\ninterface RatingInReview {\n  type: string;\n  value: number;\n}\n\ninterface ReviewToSubmit {\n  text: string;\n  semesterTaken: number;\n  acadYearTaken: string;\n  modId: string;\n  userId: string;\n  ratings: RatingInReview[];\n}\n\nconst getReviewsOfModule = async (\n  modId: string,\n  limit: number = 10,\n  page: number = 1\n) => {\n  const query = queryString.stringify({ modId });\n  const response = await axios.get(`${reviewBaseUrl}/?${query}`);\n  return response.data;\n};\n\nconst getReviewsOfUser = async (userId: string) => {\n  const query = queryString.stringify({ userId });\n  const response = await axios.get(`${reviewBaseUrl}/?${query}`, {\n    withCredentials: true,\n  });\n  return response.data;\n};\n\nconst addReviewOfModule = async (body: ReviewToSubmit) => {\n  const response = await axios.post(reviewBaseUrl, body, {\n    withCredentials: true,\n  });\n\n  return response.status;\n};\n\nconst updateReviewOfModule = async (body: ReviewToSubmit, reviewId: string) => {\n  const response = await axios.put(`${reviewBaseUrl}/${reviewId}`, body, {\n    withCredentials: true,\n  });\n\n  return response.status;\n};\n\nconst addRating = async (\n  value: number,\n  type: \"difficulty\" | \"star\",\n  userId: string,\n  subId: string,\n  sub: \"mod\" | \"school\" | \"course\"\n) => {\n  const response = await axios.post(\n    ratingBaseUrl,\n    {\n      type,\n      userId,\n      subId,\n      value,\n      sub,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n\n  return response.status;\n};\n\nconst getRatingById = async (id: string) => {\n  const response = await axios.get(`${ratingBaseUrl}/${id}`);\n  return response;\n};\n\nconst getRating = async (subscriberType, subscriberId, userId, ratingType) => {\n  const query = queryString.stringify({\n    sub: subscriberType,\n    subId: subscriberId,\n    userId,\n    type: ratingType,\n  });\n  const response = await axios.get(`${ratingBaseUrl}/?${query}`);\n  return response.data;\n};\n\nconst updateRating = async (\n  value: number,\n  type: \"difficulty\" | \"star\",\n  userId: string,\n  subId: string,\n  sub: \"mod\" | \"school\" | \"course\",\n  ratingId: string\n) => {\n  const response = await axios.put(\n    `${ratingBaseUrl}/${ratingId}`,\n    {\n      sub,\n      subId,\n      userId,\n      type,\n      value,\n    },\n    { withCredentials: true }\n  );\n  return response.data;\n};\n\nexport default {\n  getReviewsOfModule,\n  getReviewsOfUser,\n  addReviewOfModule,\n  addRating,\n  getRating,\n  updateRating,\n  updateReviewOfModule,\n};\n"]},"metadata":{},"sourceType":"module"}