{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport bookmarkApi from \"../api/bookmark\";\nimport plannedModApi from \"../api/planned-mod\";\nimport reviewApi from \"../api/review\";\nimport { store } from \"../redux/store\";\nimport { message } from \"antd\";\nimport { fetchBookmarksAction, fetchPlannedModsAction, fetchPersonalReviewsAction } from \"../redux/actions/personal-modules\";\nexport var updatePersonalBookmarks = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userId) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return bookmarkApi.getBookmarks(userId);\n\n          case 4:\n            data = _context.sent;\n            store.dispatch(fetchBookmarksAction(data));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function updatePersonalBookmarks(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var updatedPersonalPlannedModules = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (userId) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            _context2.next = 4;\n            return plannedModApi.fetchPlannedMods(userId);\n\n          case 4:\n            data = _context2.sent;\n            store.dispatch(fetchPlannedModsAction(data));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function updatedPersonalPlannedModules(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var updatePersonalReviews = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(userId) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (userId) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 2:\n            _context3.next = 4;\n            return reviewApi.getReviewsOfUser(userId);\n\n          case 4:\n            data = _context3.sent;\n            store.dispatch(fetchPersonalReviewsAction(data));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function updatePersonalReviews(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var triggerRequireLoginMessage = function triggerRequireLoginMessage() {\n  message.warning(\"You need to login first!\");\n};\nexport var fetchRatings = function fetchRatings(ratingIds, setStar, setDifficulty) {\n  ratingIds.forEach( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n      var rating;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return reviewApi.getRatingById(id);\n\n            case 2:\n              rating = _context4.sent;\n\n              if (rating.type == \"star\") {\n                setStar(rating.value);\n              } else if (rating.type == \"difficulty\") {\n                setDifficulty(rating.value);\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n};","map":null,"metadata":{},"sourceType":"module"}