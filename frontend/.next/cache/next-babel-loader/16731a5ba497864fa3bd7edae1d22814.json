{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { logInAction, logOutAction } from './../redux/actions/auth';\nimport authApi from \"../api/auth\";\nimport courseApi from \"../api/course\";\nimport { store } from \"../redux/store\";\nimport { message } from \"antd\";\n\nfunction signUp(_x) {\n  return _signUp.apply(this, arguments);\n}\n\nfunction _signUp() {\n  _signUp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n    var fullname, emailaddress, userpassword, university, course, yearofstudy, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fullname = values.fullname, emailaddress = values.emailaddress, userpassword = values.userpassword, university = values.university, course = values.course, yearofstudy = values.yearofstudy; // let createUserConfig = {\n            //     method: 'post',\n            //     url: 'http://localhost:8080/api/user',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     data: {\n            //         \"name\": values.fullname,\n            //         \"email\": values.emailaddress,\n            //         \"password\": values.userpassword,\n            //         \"schoolId\": values.university,\n            //         \"courseId\": values.course,\n            //         \"currentYear\": values.yearofstudy\n            //     }\n            // };\n            // let createSchoolConfig = {\n            //     method: 'post',\n            //     url: 'http://localhost:8080/api/school',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     data: {\n            //         \"name\": values.fullname,\n            //     }\n            // };\n            // let createCourseConfig = {\n            //     method: 'post',\n            //     url: 'http://localhost:8080/api/course',\n            //     headers: {\n            //         'Content-Type': 'application/json'\n            //     },\n            //     data: {\n            //         \"name\": values.fullname,\n            //     }\n            // };\n            // if schoolId is user created, then create a new school in the system\n\n            if (!(course !== \"userCreated\" && university !== \"userCreated\")) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 4;\n            return authApi.signUp(fullname, emailaddress, userpassword)[\"catch\"](function (error) {\n              throw error;\n            });\n\n          case 4:\n            data = _context.sent;\n\n            if (data) {\n              console.log(\"sign up success\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _signUp.apply(this, arguments);\n}\n\nfunction logIn(_x2) {\n  return _logIn.apply(this, arguments);\n}\n\nfunction _logIn() {\n  _logIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values) {\n    var emailaddress, password, data, name, currentYear, courseId, _id, courseData, user;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            emailaddress = values.emailaddress, password = values.password;\n            _context2.next = 3;\n            return authApi.logIn(emailaddress, password)[\"catch\"](function (error) {\n              throw error;\n            });\n\n          case 3:\n            data = _context2.sent;\n\n            if (!data) {\n              _context2.next = 15;\n              break;\n            }\n\n            name = data.name, currentYear = data.currentYear, courseId = data.courseId, _id = data._id;\n            courseData = null;\n\n            if (!courseId) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 10;\n            return courseApi.getCourse(courseId);\n\n          case 10:\n            courseData = _context2.sent;\n\n          case 11:\n            user = {\n              fullName: name,\n              yearOfStudy: currentYear ? currentYear : null,\n              studyCourse: courseData ? courseData.name : null,\n              _id: _id\n            };\n            window.localStorage.setItem(\"ROTTENMODS_EMAIL\", emailaddress);\n            window.localStorage.setItem(\"ROTTENMODS_PASSWORD\", password);\n            store.dispatch(logInAction(user));\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _logIn.apply(this, arguments);\n}\n\nfunction logOut() {\n  return _logOut.apply(this, arguments);\n}\n\nfunction _logOut() {\n  _logOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return authApi.logOut()[\"catch\"](function (error) {\n              throw error;\n            });\n\n          case 2:\n            response = _context3.sent;\n            window.localStorage.removeItem(\"ROTTENMODS_EMAIL\");\n            window.localStorage.removeItem(\"ROTTENMODS_PASSWORD\");\n            message.success(\"Successfully Logged Out!\");\n            store.dispatch(logOutAction());\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _logOut.apply(this, arguments);\n}\n\n;\nexport default {\n  signUp: signUp,\n  logIn: logIn,\n  logOut: logOut\n};","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/utils/authentication.ts"],"names":["logInAction","logOutAction","authApi","courseApi","store","message","signUp","values","fullname","emailaddress","userpassword","university","course","yearofstudy","error","data","console","log","logIn","password","name","currentYear","courseId","_id","courseData","getCourse","user","fullName","yearOfStudy","studyCourse","window","localStorage","setItem","dispatch","logOut","response","removeItem","success"],"mappings":"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","sourcesContent":["import { logInAction, logOutAction } from './../redux/actions/auth';\nimport axios from \"axios\";\nimport { LOG_USER_IN, LOG_USER_OUT } from \"../redux/constants\";\nimport { User } from \"../types\";\nimport authApi from \"../api/auth\";\nimport courseApi from \"../api/course\";\nimport { store } from \"../redux/store\";\n\nimport { message } from \"antd\";\n\nasync function signUp(values) {\n  const {\n    fullname,\n    emailaddress,\n    userpassword,\n    university,\n    course,\n    yearofstudy,\n  } = values;\n\n  // let createUserConfig = {\n  //     method: 'post',\n  //     url: 'http://localhost:8080/api/user',\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     data: {\n  //         \"name\": values.fullname,\n  //         \"email\": values.emailaddress,\n  //         \"password\": values.userpassword,\n  //         \"schoolId\": values.university,\n  //         \"courseId\": values.course,\n  //         \"currentYear\": values.yearofstudy\n  //     }\n  // };\n\n  // let createSchoolConfig = {\n  //     method: 'post',\n  //     url: 'http://localhost:8080/api/school',\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     data: {\n  //         \"name\": values.fullname,\n  //     }\n  // };\n\n  // let createCourseConfig = {\n  //     method: 'post',\n  //     url: 'http://localhost:8080/api/course',\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     data: {\n  //         \"name\": values.fullname,\n  //     }\n  // };\n\n  // if schoolId is user created, then create a new school in the system\n\n  if (course !== \"userCreated\" && university !== \"userCreated\") {\n    const data = await authApi\n      .signUp(\n        fullname,\n        emailaddress,\n        userpassword,\n      )\n      .catch((error) => {\n        throw error;\n      });\n    if (data) {\n      console.log(\"sign up success\");\n    }\n  }\n}\n\nasync function logIn(values) {\n  const { emailaddress, password } = values;\n  const data = await authApi.logIn(emailaddress, password).catch((error) => {\n    throw error;\n  });\n  if (data) {\n    const { name, currentYear, courseId, _id } = data;\n    let courseData = null;\n    if (courseId) {\n      courseData = await courseApi.getCourse(courseId);\n    } \n    \n    const user: User = {\n      fullName: name,\n      yearOfStudy: currentYear ? currentYear : null,\n      studyCourse: courseData ? courseData.name : null,\n      _id,\n    };\n\n    window.localStorage.setItem(\"ROTTENMODS_EMAIL\", emailaddress);\n    window.localStorage.setItem(\"ROTTENMODS_PASSWORD\", password);\n\n    store.dispatch(logInAction(user));\n  }\n}\n\nasync function logOut() {\n  const response = await authApi.logOut().catch((error) => {\n    throw error;\n  });\n\n    window.localStorage.removeItem(\"ROTTENMODS_EMAIL\");\n    window.localStorage.removeItem(\"ROTTENMODS_PASSWORD\");\n\n    message.success(\"Successfully Logged Out!\");\n\n    store.dispatch(logOutAction());\n\n  \n\n};\n\nexport default {\n  signUp,\n  logIn,\n  logOut,\n};\n"]},"metadata":{},"sourceType":"module"}