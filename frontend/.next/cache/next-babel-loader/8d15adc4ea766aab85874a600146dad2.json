{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/ModulePill.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport moduleApi from \"../api/module\";\nimport { Tooltip } from \"antd\";\nimport Button from \"./Button\";\nimport { codeBlue, crossRed } from \"../styles/colors\";\n\nconst ModulePill = ({\n  modId,\n  missingPrereqs,\n  moduleCode = \"\"\n}) => {\n  const router = useRouter();\n  const {\n    0: code,\n    1: setCode\n  } = useState(moduleCode);\n  useEffect(() => {\n    if (!moduleCode) {\n      getModuleCode();\n    }\n  }, []);\n\n  const getModuleCode = async () => {\n    if (modId) {\n      const module = await moduleApi.getModule(modId);\n      setCode(module.code);\n    }\n  };\n\n  const navigateToModuleReview = () => {\n    router.push({\n      pathname: \"/module-review\",\n      query: {\n        id: modId\n      }\n    });\n  };\n\n  return;\n  code !== \"\" ? __jsx(Button, {\n    style: styles.container,\n    onClick: navigateToModuleReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, code, missingPrereqs && missingPrereqs.length !== 0 && __jsx(Tooltip, {\n    title: `Missing prereqs: ${missingPrereqs.map(mod => mod.code).join(\", \")}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: styles.warningButton,\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"i\"))) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  });\n};\n\nconst styles = {\n  container: {\n    padding: 12,\n    backgroundColor: codeBlue,\n    color: \"#fff\",\n    borderRadius: 10,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    marginRight: 10,\n    position: \"relative\"\n  },\n  warningButton: {\n    position: \"absolute\",\n    top: -8,\n    right: -8,\n    backgroundColor: crossRed,\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 12,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    cursor: \"pointer\"\n  }\n};\nexport default ModulePill;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/ModulePill.tsx"],"names":["useEffect","useState","useRouter","moduleApi","Tooltip","Button","codeBlue","crossRed","ModulePill","modId","missingPrereqs","moduleCode","router","code","setCode","getModuleCode","module","getModule","navigateToModuleReview","push","pathname","query","id","styles","container","length","map","mod","join","warningButton","padding","backgroundColor","color","borderRadius","boxShadow","marginRight","position","top","right","height","width","display","justifyContent","alignItems","fontSize","cursor"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport moduleApi from \"../api/module\";\nimport { Module } from \"../types\";\n\nimport { Tooltip } from \"antd\";\nimport Button from \"./Button\";\nimport { codeBlue, crossRed } from \"../styles/colors\";\n\ninterface ModulePillProps {\n  modId: string;\n  missingPrereqs?: Module[];\n  moduleCode: string;\n}\n\nconst ModulePill: React.FC<ModulePillProps> = ({\n  modId,\n  missingPrereqs,\n  moduleCode = \"\",\n}) => {\n  const router = useRouter();\n  const [code, setCode] = useState(moduleCode);\n\n  useEffect(() => {\n    if (!moduleCode) {\n      getModuleCode();\n    }\n  }, []);\n\n  const getModuleCode = async () => {\n    if (modId) {\n      const module: Module = await moduleApi.getModule(modId);\n      setCode(module.code);\n    }\n  };\n\n  const navigateToModuleReview = () => {\n    router.push({\n      pathname: \"/module-review\",\n      query: {\n        id: modId,\n      },\n    });\n  };\n\n  return\n  \n    code !== \"\" ? (\n      <Button style={styles.container} onClick={navigateToModuleReview}>\n        {code}\n        {missingPrereqs && missingPrereqs.length !== 0 && (\n          <Tooltip\n            title={`Missing prereqs: ${missingPrereqs\n              .map((mod) => mod.code)\n              .join(\", \")}`}\n          >\n            <div style={styles.warningButton} onClick={() => {}}>\n              i\n            </div>\n          </Tooltip>\n        )}\n      </Button>\n    ) : <div></div>;\n  \n};\n\nconst styles = {\n  container: {\n    padding: 12,\n    backgroundColor: codeBlue,\n    color: \"#fff\",\n    borderRadius: 10,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    marginRight: 10,\n    position: \"relative\" as \"relative\",\n  },\n  warningButton: {\n    position: \"absolute\" as \"absolute\",\n    top: -8,\n    right: -8,\n    backgroundColor: crossRed,\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 12,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default ModulePill;\n"]},"metadata":{},"sourceType":"module"}