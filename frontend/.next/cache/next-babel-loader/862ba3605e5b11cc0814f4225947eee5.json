{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Input, Divider, Select } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, CalendarOutlined } from '@ant-design/icons';\nimport { codeBlue } from \"../styles/colors\";\nimport axios from 'axios';\nimport authService from '../services/authentication';\nimport { message } from 'antd';\n\nconst SignupModal = toggles => {\n  const {\n    0: inputUniversityValues,\n    1: setUniversityInputValues\n  } = useState([{\n    \"schoolId\": \"\",\n    \"schoolName\": \"\"\n  }]);\n  const {\n    0: inputCourses,\n    1: setInputCourses\n  } = useState([{\n    \"courseId\": \"\",\n    \"courseName\": \"\"\n  }]);\n  const {\n    0: newSchoolName,\n    1: setSchoolName\n  } = useState(\"\");\n  const {\n    0: newCourseName,\n    1: setCourseName\n  } = useState(\"\");\n  useEffect(() => {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  const populateSchools = () => {\n    axios({\n      method: 'get',\n      url: '/school',\n      baseURL: 'http://localhost:8080/api'\n    }).then(function (response) {\n      const schoolsInDatabase = response.data.map(obj => {\n        const universityValue = {\n          \"schoolId\": \"\",\n          \"schoolName\": \"\"\n        };\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setUniversityInputValues(schoolsInDatabase);\n      console.log('Now uni has these values');\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  const populateCourses = () => {\n    axios({\n      method: 'get',\n      url: '/course',\n      baseURL: 'http://localhost:8080/api'\n    }).then(function (response) {\n      const coursesInDatabase = response.data.map(obj => {\n        const course = {\n          \"courseId\": \"\",\n          \"courseName\": \"\"\n        };\n        course.courseId = obj._id;\n        course.courseName = obj.name;\n        return course;\n      });\n      setInputCourses(coursesInDatabase);\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  const onFormFinish = signUpValues => {\n    console.log(\"signup done\");\n    console.log(signUpValues);\n    authService.signUp(signUpValues).then(function (response) {\n      message.success(\"Successfully Signed Up\");\n      toggles.toggles.switchModals();\n    }).catch(error => {\n      message.error(\"This user has already been created. Do you mean to sign in?\");\n    });\n  };\n\n  const onUniversityChange = event => {\n    setSchoolName(event.target.value);\n  };\n\n  const onCourseChange = event => {\n    setCourseName(event.target.value);\n  };\n\n  const addUniversityItem = () => {\n    setSchoolName(\"\");\n\n    if (newSchoolName.trim() !== \"\" && !inputUniversityValues.some(e => e.schoolName === newSchoolName)) {\n      console.log('adduniItem');\n      setUniversityInputValues([...inputUniversityValues, {\n        \"schoolId\": \"userCreated\",\n        \"schoolName\": newSchoolName\n      }]);\n    }\n  };\n\n  const addCourseItem = () => {\n    console.log('adduniItem');\n    setCourseName(\"\");\n\n    if (newCourseName.trim() !== \"\" && !inputCourses.some(e => e.courseName === newCourseName)) {\n      setInputCourses([...inputCourses, {\n        \"courseId\": \"userCreated\",\n        \"courseName\": newCourseName\n      }]);\n    }\n  };\n\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.+-]+\\.edu$/;\n    return regex.test(email);\n  };\n\n  function renderAddition(addition) {\n    if (addition == \"university\") {\n      return __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        style: {\n          flex: 'auto'\n        },\n        value: newSchoolName,\n        onChange: onUniversityChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }), __jsx(\"a\", {\n        style: {\n          flex: 'none',\n          padding: '8px',\n          display: 'block',\n          cursor: 'pointer'\n        },\n        onClick: addUniversityItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, \"ADD\"));\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        style: {\n          flex: 'auto'\n        },\n        value: newCourseName,\n        onChange: onCourseChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }), __jsx(\"a\", {\n        style: {\n          flex: 'none',\n          padding: '8px',\n          display: 'block',\n          cursor: 'pointer'\n        },\n        onClick: addCourseItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, \"ADD\"));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    visible: true,\n    title: __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, \" SIGNUP \"),\n    centered: true,\n    onCancel: toggles.toggles.toggleSignupModal,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    name: \"normal_signup\",\n    className: \"signup-form\",\n    initialValues: {},\n    onFinish: onFormFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: 'Please enter your full name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"emailaddress\",\n    rules: [{\n      required: true,\n      message: 'Please enter an email address!'\n    }, {\n      validator: (_, value) => {\n        if (!validateEmail(value)) {\n          return Promise.reject(\"Only .edu email address are allowed to sign up\");\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }\n    }),\n    placeholder: \"Email Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"userpassword\",\n    rules: [{\n      required: true,\n      message: 'Please enter a password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"yearofstudy\",\n    rules: [{\n      required: true,\n      message: 'Please enter your Year of Study!'\n    }, {\n      validator: (_, value) => {\n        if (value < 1 || value > 8) {\n          return Promise.reject(\"Your Year of Study should only be between 1 to 8\");\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    prefix: __jsx(CalendarOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 44\n      }\n    }),\n    placeholder: \"Year Of Study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }))), __jsx(Form.Item, {\n    name: \"university\",\n    rules: [{\n      required: true,\n      message: 'Please enter your University!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"University\",\n    dropdownRender: menu => __jsx(React.Fragment, null, menu, __jsx(Divider, {\n      style: {\n        margin: '4px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }), renderAddition(\"university\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, inputUniversityValues.map(item => __jsx(Select.Option, {\n    key: item.schoolName,\n    value: item.schoolId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, item.schoolName)))), __jsx(Form.Item, {\n    name: \"course\",\n    rules: [{\n      required: true,\n      message: 'Please enter the name of the course you are enrolled in!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Course Of Study\",\n    value: \"Default\",\n    dropdownRender: menu => __jsx(React.Fragment, null, menu, __jsx(Divider, {\n      style: {\n        margin: '4px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }), renderAddition(\"course\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, inputCourses.map(item => __jsx(Select.Option, {\n    key: item.courseName,\n    value: item.courseId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, item.courseName)))), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\"))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Log in \", __jsx(\"a\", {\n    onClick: () => toggles.toggles.switchModals(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 43\n    }\n  }, \" here\"))));\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue\n  }\n};\nexport default SignupModal;","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx"],"names":["useState","useEffect","Modal","Button","Form","Input","Divider","Select","UserOutlined","LockOutlined","MailOutlined","CalendarOutlined","codeBlue","axios","authService","message","SignupModal","toggles","inputUniversityValues","setUniversityInputValues","inputCourses","setInputCourses","newSchoolName","setSchoolName","newCourseName","setCourseName","populateSchools","populateCourses","method","url","baseURL","then","response","schoolsInDatabase","data","map","obj","universityValue","schoolId","_id","schoolName","name","console","log","error","coursesInDatabase","course","courseId","courseName","onFormFinish","signUpValues","signUp","success","switchModals","catch","onUniversityChange","event","target","value","onCourseChange","addUniversityItem","trim","some","e","addCourseItem","validateEmail","email","regex","test","renderAddition","addition","display","flexWrap","padding","flex","cursor","textAlign","toggleSignupModal","required","validator","_","Promise","reject","resolve","marginBottom","width","menu","margin","item","styles","loginFormButton","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { Modal, Button, Form, Input, Divider, Select, DatePicker } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, LaptopOutlined, CalendarOutlined, PlusOutlined } from '@ant-design/icons';\nimport { codeBlue } from \"../styles/colors\";\n\nimport axios from 'axios';\nimport authService from '../services/authentication';\n\nimport { message } from 'antd';\n\n\ninterface SignupModalProps {\n  toggles: {\n    toggleSignupModal: () => void;\n    switchModals: () => void;\n  }\n}\n\nconst SignupModal: React.FC<SignupModalProps> = (toggles) => {\n\n  const [inputUniversityValues, setUniversityInputValues] = useState([{\"schoolId\": \"\", \"schoolName\": \"\",}]);\n  const [inputCourses, setInputCourses] = useState([{\"courseId\": \"\", \"courseName\": \"\"}]);\n  const [newSchoolName, setSchoolName] = useState(\"\");\n  const [newCourseName, setCourseName] = useState(\"\");\n\n  useEffect(() => {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  const populateSchools = () => {\n    axios({\n      method: 'get',\n      url: '/school',\n      baseURL: 'http://localhost:8080/api',\n    }).then(function (response) {\n      const schoolsInDatabase = response.data.map(obj => {\n        const universityValue = {\"schoolId\": \"\", \"schoolName\": \"\"};\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setUniversityInputValues(schoolsInDatabase);\n      console.log('Now uni has these values');\n    }).then(function (error) {\n      console.log(error);\n    })\n  }\n\n  const populateCourses = () => {\n    axios({\n      method: 'get',\n      url: '/course',\n      baseURL: 'http://localhost:8080/api',\n    }).then(function (response) {\n      const coursesInDatabase = response.data.map(obj => {\n        const course = {\"courseId\": \"\", \"courseName\": \"\"};\n        course.courseId = obj._id;\n        course.courseName = obj.name;\n        return course;\n      });\n      setInputCourses(coursesInDatabase);\n    }).then(function (error) {\n      console.log(error);\n    })\n  }\n\n  const onFormFinish = signUpValues => {\n    console.log(\"signup done\");\n    console.log(signUpValues);\n    authService.signUp(signUpValues).then(function(response) {\n      message.success(\"Successfully Signed Up\");\n      toggles.toggles.switchModals();\n    }).catch((error) => {\n      message.error(\"This user has already been created. Do you mean to sign in?\");\n    })\n\n  }\n\n  const onUniversityChange = event => {\n    setSchoolName(event.target.value);\n  };\n\n  const onCourseChange = event => {\n    setCourseName(event.target.value);\n  };\n\n  const addUniversityItem = () => {\n    setSchoolName(\"\");\n    if (newSchoolName.trim() !== \"\" && !inputUniversityValues.some(e => e.schoolName === newSchoolName)) {\n      console.log('adduniItem');\n      setUniversityInputValues([...inputUniversityValues, {\"schoolId\" : \"userCreated\", \"schoolName\" : newSchoolName}]);\n    }\n  };\n\n  const addCourseItem = () => {\n    console.log('adduniItem');\n    setCourseName(\"\");\n    if (newCourseName.trim() !== \"\" && !inputCourses.some(e => e.courseName === newCourseName)) {\n      setInputCourses([...inputCourses,  {\"courseId\": \"userCreated\", \"courseName\": newCourseName}]);\n    }\n  };\n\n  const validateEmail = (email: string): boolean => {\n  \n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.+-]+\\.edu$/\n  \n    return regex.test(email)\n  \n  }\n\n  function renderAddition(addition) {\n    if (addition == \"university\") {\n      return (\n        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n          <Input style={{ flex: 'auto' }} value={newSchoolName} onChange={onUniversityChange} />\n          <a\n            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n            onClick={addUniversityItem}>\n            ADD\n            </a>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n          <Input style={{ flex: 'auto' }} value={newCourseName} onChange={onCourseChange} />\n          <a\n            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n            onClick={addCourseItem}>\n            ADD\n            </a>\n        </div>\n      );\n    }\n  }\n\n\n  return (\n    <>\n\n      <Modal\n        visible={true}\n        title={\n          <div style={{ textAlign: \"center\" }}> SIGNUP </div>\n        }\n        centered\n        onCancel={toggles.toggles.toggleSignupModal}\n        footer={null}>\n        <Form\n          name=\"normal_signup\"\n          className=\"signup-form\"\n          initialValues={{}}\n          onFinish={onFormFinish}>\n          <Form.Item\n            name=\"fullname\"\n            rules={[{ required: true, message: 'Please enter your full name!' }]}\n          >\n            <Input prefix={<UserOutlined />} placeholder=\"Full Name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"emailaddress\"\n            rules={[\n              { required: true, message: 'Please enter an email address!' },\n              { validator: (_, value) => {\n                if (!validateEmail(value)) {\n                  return Promise.reject(\"Only .edu email address are allowed to sign up\");\n                } else {\n                  return Promise.resolve();\n                }\n              }}\n          ]}\n            \n          >\n            <Input\n              prefix={<MailOutlined />} placeholder=\"Email Address\" />\n          </Form.Item>\n          <Form.Item\n            name=\"userpassword\"\n            rules={[{ required: true, message: 'Please enter a password!' }]}\n          >\n            <Input\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item style={{ marginBottom: 0 }}>\n            <Form.Item\n              name=\"yearofstudy\"\n              rules={[\n                { required: true, message: 'Please enter your Year of Study!' },\n                { validator: (_, value) => {\n                  if (value < 1 || value > 8) {\n                    return Promise.reject(\"Your Year of Study should only be between 1 to 8\");\n                  } else {\n                    return Promise.resolve();\n                  }\n                }\n              }]}\n            >\n              <Input type=\"number\" prefix={<CalendarOutlined />} placeholder=\"Year Of Study\" />\n            </Form.Item>\n          </Form.Item>\n\n\n          <Form.Item\n            name=\"university\"\n            rules={[{ required: true, message: 'Please enter your University!' }]}\n          >\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder=\"University\"\n              dropdownRender={menu => (\n                <>\n                  {menu}\n                  <Divider style={{ margin: '4px 0' }} />\n                  {renderAddition(\"university\")}\n                </>\n              )}\n            >\n              {inputUniversityValues.map(item => (\n                <Select.Option key={item.schoolName} value={item.schoolId}>{item.schoolName}</Select.Option>\n              ))}\n            </Select>\n\n          </Form.Item>\n\n          <Form.Item\n            name=\"course\"\n            rules={[{ required: true, message: 'Please enter the name of the course you are enrolled in!' }]}\n          >\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder=\"Course Of Study\"\n              value=\"Default\"\n              dropdownRender={menu => (\n                <>\n                  {menu}\n                  <Divider style={{ margin: '4px 0' }} />\n                  {renderAddition(\"course\")}\n                </>\n              )}\n            >\n              {inputCourses.map(item => (\n                <Select.Option key={item.courseName} value={item.courseId}>{item.courseName}</Select.Option>\n              ))}\n            </Select>\n\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={styles.loginFormButton}>SIGN UP</Button>\n          </Form.Item>\n\n\n        </Form>\n        <Divider />\n        <div style={{ textAlign: \"center\" }}>\n          Already have an account? Log in <a onClick={() => toggles.toggles.switchModals()}> here</a>\n        </div>\n\n      </Modal>\n    </>\n  );\n\n\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue,\n  }\n}\n\n\nexport default SignupModal;"]},"metadata":{},"sourceType":"module"}