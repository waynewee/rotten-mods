{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { Input, InputNumber, Rate, Select, AutoComplete, Tag } from \"antd\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\n\nconst FormModalItem = ({\n  type = \"input\",\n  label,\n  value,\n  setValue,\n  options,\n  searchTerm,\n  setSearchTerm\n}) => {\n  const {\n    0: firstIsChecked,\n    1: setFirstIsChecked\n  } = useState(0);\n  const {\n    0: secondIsChecked,\n    1: setSecondIsChecked\n  } = useState(0);\n  const {\n    0: searchOptions,\n    1: setSearchOptions\n  } = useState(options !== null && options !== void 0 ? options : []);\n  useEffect(() => {\n    setSearchOptions(options);\n  }, [options]);\n\n  const toggleCheckbox = index => event => {\n    const newValue = parseInt(event.target.value) === 0 ? 1 : 0;\n    const isChecked = newValue === 1;\n\n    if (index === 1) {\n      setFirstIsChecked(newValue);\n      setValue([isChecked, value[1]]);\n    } else {\n      setSecondIsChecked(newValue);\n      setValue([value[0], isChecked]);\n    }\n  };\n\n  const renderInput = () => __jsx(Input, {\n    style: styles.input,\n    value: value,\n    onChange: e => setValue(e.target.value)\n  });\n\n  const renderTextArea = () => __jsx(TextArea, {\n    style: styles.input,\n    rows: 4,\n    autoSize: {\n      minRows: 4,\n      maxRows: 4\n    },\n    value: value,\n    onChange: e => setValue(e.target.value)\n  });\n\n  const renderText = () => __jsx(\"span\", {\n    style: styles.text\n  }, value);\n\n  const renderRate = () => __jsx(Rate, {\n    defaultValue: value,\n    onChange: setValue\n  });\n\n  const renderDifficulty = () => __jsx(Rate, {\n    defaultValue: value,\n    style: styles.rateObjects,\n    onChange: setValue,\n    character: ({\n      index\n    }) => {\n      return __jsx(\"span\", {\n        style: {\n          marginRight: 9\n        }\n      }, index + 1);\n    }\n  });\n\n  const renderNumber = () => __jsx(InputNumber, {\n    style: styles.inputNumber,\n    value: value,\n    onChange: e => setValue(e)\n  });\n\n  const renderYear = () => __jsx(Select, {\n    style: styles.inputNumber,\n    onChange: setValue,\n    defaultValue: value\n  }, __jsx(Option, {\n    value: 1\n  }, \"1\"), __jsx(Option, {\n    value: 2\n  }, \"2\"), __jsx(Option, {\n    value: 3\n  }, \"3\"), __jsx(Option, {\n    value: 4\n  }, \"4\"));\n\n  const renderSemester = () => __jsx(Select, {\n    style: styles.inputNumber,\n    onChange: setValue,\n    defaultValue: value\n  }, __jsx(Option, {\n    value: 1\n  }, \"1\"), __jsx(Option, {\n    value: 2\n  }, \"2\"));\n\n  const renderSemesters = () => __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: 34\n    }\n  }, __jsx(\"div\", null, __jsx(\"input\", {\n    id: \"1\",\n    type: \"checkbox\",\n    value: firstIsChecked,\n    onChange: toggleCheckbox(1)\n  }), __jsx(\"label\", {\n    style: styles.inputCheckboxLabel,\n    htmlFor: \"1\"\n  }, \"1\")), __jsx(\"div\", null, __jsx(\"input\", {\n    id: \"2\",\n    type: \"checkbox\",\n    value: secondIsChecked,\n    onChange: toggleCheckbox(2)\n  }), __jsx(\"label\", {\n    style: styles.inputCheckboxLabel,\n    htmlFor: \"2\"\n  }, \"2\")));\n\n  const renderAnnualYear = () => {\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth();\n    const yearShortform = currentYear % 2000; // eg. 2020 => 20\n\n    const currentSemester = currentMonth < 6 ? 2 : 1;\n    const currentAYSecondYear = currentSemester === 1 ? yearShortform + 1 : yearShortform; // if current semester is 2, then the second year of the AY is the current year\n\n    const yearMinusOne = currentAYSecondYear - 1;\n    const yearMinusTwo = currentAYSecondYear - 2;\n    const yearMinusThree = currentAYSecondYear - 3;\n    const yearMinusFour = currentAYSecondYear - 4;\n    return __jsx(Select, {\n      style: styles.inputNumber,\n      onChange: setValue,\n      defaultValue: value\n    }, __jsx(Option, {\n      value: `${yearMinusOne}/${currentAYSecondYear}`\n    }, \"AY\", yearMinusOne, \"/\", currentAYSecondYear), __jsx(Option, {\n      value: `${yearMinusTwo}/${yearMinusOne}`\n    }, \"AY\", yearMinusTwo, \"/\", yearMinusOne), __jsx(Option, {\n      value: `${yearMinusThree}/${yearMinusTwo}`\n    }, \"AY\", yearMinusThree, \"/\", yearMinusTwo), __jsx(Option, {\n      value: `${yearMinusFour}/${yearMinusThree}`\n    }, \"AY\", yearMinusFour, \"/\", yearMinusThree));\n  };\n\n  const renderUniversity = () => __jsx(Select, {\n    style: styles.inputNumber,\n    onChange: setValue,\n    defaultValue: value\n  }, __jsx(Option, {\n    value: \"NUS\"\n  }, \"NUS\"), __jsx(Option, {\n    value: \"NTU\"\n  }, \"NTU\"), __jsx(Option, {\n    value: \"SMU\"\n  }, \"SMU\"));\n\n  const renderAutoComplete = () => __jsx(AutoComplete, {\n    style: styles.input,\n    options: searchOptions,\n    onSelect: setValue,\n    onSearch: searchText => setSearchOptions(options.filter(item => item.value.includes(searchText)))\n  });\n\n  const renderPrereq = () => {\n    const removeCode = removedMod => {\n      const filteredCodes = value.filter(mod => mod.id !== removedMod.id);\n      setValue(filteredCodes);\n    };\n\n    const renderTags = () => {\n      console.log(value);\n      return value.map(mod => __jsx(Tag, {\n        closable: true,\n        onClose: () => removeCode(mod),\n        key: mod.id\n      }, mod.value));\n    };\n\n    const addModule = code => {\n      const modArr = searchOptions.filter(mod => mod.value === code);\n      setValue(value.concat(modArr));\n      setSearchTerm(\"\");\n    };\n\n    const onChange = newSearchTerm => setSearchTerm(newSearchTerm);\n\n    return __jsx(\"div\", null, __jsx(AutoComplete, {\n      style: styles.input,\n      onSelect: addModule,\n      options: searchOptions,\n      value: searchTerm,\n      onChange: onChange\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: 10,\n        maxWidth: 390\n      }\n    }, renderTags()));\n  };\n\n  const renderInputType = {\n    \"input\": renderInput,\n    \"textarea\": renderTextArea,\n    \"text\": renderText,\n    \"rate\": renderRate,\n    \"difficulty\": renderDifficulty,\n    \"number\": renderNumber,\n    \"year\": renderYear,\n    \"semester\": renderSemester,\n    \"semesters\": renderSemesters,\n    \"annualYear\": renderAnnualYear,\n    \"university\": renderUniversity,\n    \"autocomplete\": renderAutoComplete,\n    \"prereq\": renderPrereq\n  };\n  return __jsx(\"div\", {\n    style: styles.labelContainer\n  }, __jsx(\"label\", {\n    style: styles.label\n  }, `${label}:`), renderInputType[type]());\n};\n\nconst styles = {\n  labelContainer: {\n    display: \"flex\",\n    marginBottom: 20,\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\"\n  },\n  label: {\n    width: 150,\n    marginTop: 5\n  },\n  input: {\n    width: 390,\n    maxWidth: 390\n  },\n  text: {\n    marginTop: 5\n  },\n  rateObjects: {// color: \"#000\",\n  },\n  inputNumber: {\n    width: 100\n  },\n  inputCheckboxLabel: {\n    margin: \"0px 20px 0px 10px\",\n    fontSize: 15\n  }\n};\nexport default FormModalItem;","map":null,"metadata":{},"sourceType":"module"}