{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddSchoolModal.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport schoolApi from \"../api/school\";\nimport { useState } from \"react\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\n\nconst AddSchoolModal = ({\n  isModalVisible,\n  setModalVisibility\n}) => {\n  const {\n    0: school,\n    1: setSchool\n  } = useState(\"\");\n\n  const onSubmit = () => {\n    if (!validateForm()) {\n      message.error(\"The field cannot be empty!\");\n      return;\n    }\n\n    schoolApi.addSchool(school).then(response => {\n      setSchool(\"\");\n      setModalVisibility(false);\n      message.success(`The school ${school} has been added successfully!`);\n    }).catch(error => {\n      console.log(\"the error is\");\n      console.log(error.response);\n\n      if (error.response.status == \"409\") {\n        message.error(`The school ${school} is already in the database!`);\n      }\n    });\n  };\n\n  const validateForm = () => {\n    return school.trim() !== \"\";\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: codeBlue,\n    submitColor: \"#3E59B9\",\n    title: \"Add School\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: setModalVisibility,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"School Name\",\n    type: \"input\",\n    value: school,\n    setValue: setSchool,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\"\n  }\n};\nexport default AddSchoolModal;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddSchoolModal.tsx"],"names":["schoolApi","useState","FormModal","FormModalItem","codeBlue","message","AddSchoolModal","isModalVisible","setModalVisibility","school","setSchool","onSubmit","validateForm","error","addSchool","then","response","success","catch","console","log","status","trim","styles","loginFormButton","width","backgroundColor"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,OAAT,QAAwB,MAAxB;;AAEA,MAAMC,cAAoC,GAAG,CAAC;AAC5CC,EAAAA,cAD4C;AAE5CC,EAAAA;AAF4C,CAAD,KAGvC;AACJ,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,QAAQ,GAAG,MAAM;AACrB,QAAI,CAACC,YAAY,EAAjB,EAAqB;AACnBP,MAAAA,OAAO,CAACQ,KAAR,CAAc,4BAAd;AACA;AACD;;AACDb,IAAAA,SAAS,CACNc,SADH,CACaL,MADb,EAEGM,IAFH,CAESC,QAAD,IAAc;AAClBN,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAF,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAH,MAAAA,OAAO,CAACY,OAAR,CAAiB,cAAaR,MAAO,+BAArC;AACD,KANH,EAOGS,KAPH,CAOUL,KAAD,IAAW;AAChBM,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACG,QAAlB;;AACA,UAAIH,KAAK,CAACG,QAAN,CAAeK,MAAf,IAAyB,KAA7B,EAAoC;AAClChB,QAAAA,OAAO,CAACQ,KAAR,CAAe,cAAaJ,MAAO,8BAAnC;AACD;AACF,KAbH;AAcD,GAnBD;;AAqBA,QAAMG,YAAY,GAAG,MAAM;AACzB,WAAOH,MAAM,CAACa,IAAP,OAAkB,EAAzB;AACD,GAFD;;AAIA,SACE,MAAC,SAAD;AACE,IAAA,eAAe,EAAElB,QADnB;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAC,YAHR;AAIE,IAAA,cAAc,EAAEG,cAJlB;AAKE,IAAA,kBAAkB,EAAEC,kBALtB;AAME,IAAA,QAAQ,EAAEG,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,MAHT;AAIE,IAAA,QAAQ,EAAEC,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CAhDD;;AAkDA,MAAMa,MAAM,GAAG;AACbC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE,MADQ;AAEfC,IAAAA,eAAe,EAAE;AAFF;AADJ,CAAf;AAOA,eAAepB,cAAf","sourcesContent":["import schoolApi from \"../api/school\";\nimport { useState } from \"react\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { ModalState } from \"../types\";\nimport { message } from \"antd\";\n\nconst AddSchoolModal: React.FC<ModalState> = ({\n  isModalVisible,\n  setModalVisibility,\n}) => {\n  const [school, setSchool] = useState(\"\");\n\n  const onSubmit = () => {\n    if (!validateForm()) {\n      message.error(\"The field cannot be empty!\");\n      return;\n    }\n    schoolApi\n      .addSchool(school)\n      .then((response) => {\n        setSchool(\"\");\n        setModalVisibility(false);\n        message.success(`The school ${school} has been added successfully!`);\n      })\n      .catch((error) => {\n        console.log(\"the error is\");\n        console.log(error.response);\n        if (error.response.status == \"409\") {\n          message.error(`The school ${school} is already in the database!`);\n        }\n      });\n  };\n\n  const validateForm = () => {\n    return school.trim() !== \"\";\n  };\n\n  return (\n    <FormModal\n      backgroundColor={codeBlue}\n      submitColor=\"#3E59B9\"\n      title=\"Add School\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={setModalVisibility}\n      onSubmit={onSubmit}\n    >\n      <FormModalItem\n        label=\"School Name\"\n        type=\"input\"\n        value={school}\n        setValue={setSchool}\n      />\n    </FormModal>\n  );\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\",\n  },\n};\n\nexport default AddSchoolModal;\n"]},"metadata":{},"sourceType":"module"}