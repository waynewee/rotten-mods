{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from \"antd\";\nimport \"../styles/antd.less\";\nimport { useSelector } from \"react-redux\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\n\nvar ProfileButton = function ProfileButton(_ref) {\n  _s();\n\n  var isAuthenticated = _ref.isAuthenticated;\n\n  var _useState = useState(false),\n      loginModalVisible = _useState[0],\n      setLoginModalVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      signupModalVisible = _useState2[0],\n      setSignupModalVisible = _useState2[1];\n\n  var isLoggedIn = useSelector(function (state) {\n    return state.auth.isLoggedIn;\n  });\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  useEffect(function () {\n    isLoggedIn ? setLoginModalVisible(false) : null; // console.log(\"the user is \");\n    // console.log(user);\n  });\n\n  var toggleLoginModal = function toggleLoginModal() {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  var toggleSignupModal = function toggleSignupModal() {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  var switchModals = function switchModals() {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }; // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n\n\n  return __jsx(React.Fragment, null, isLoggedIn ? __jsx(React.Fragment, null, __jsx(Button, {\n    type: \"text\",\n    icon: __jsx(UserOutlined, {\n      style: {\n        fontSize: 25,\n        color: \"#B9B9B9\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    style: styles.userName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, user.fullName)) : __jsx(Button, {\n    type: \"primary\",\n    onClick: toggleLoginModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Log In\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal: toggleLoginModal,\n      switchModals: switchModals\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 43\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal: toggleSignupModal,\n      switchModals: switchModals\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }) : null);\n};\n\n_s(ProfileButton, \"WsFEX6/9Mu+XyjP1MgdjHf7/dIo=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ProfileButton;\nvar styles = {\n  userName: {\n    justifyContent: \"center\"\n  }\n};\nexport default ProfileButton;\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n  // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButton\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["Button","useSelector","UserOutlined","useEffect","useState","LoginModal","SignupModal","ProfileButton","isAuthenticated","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","isLoggedIn","state","auth","user","toggleLoginModal","toggleSignupModal","switchModals","fontSize","color","styles","userName","fullName","justifyContent"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAO,qBAAP;AAEA,SAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAqCC,YAArC,QAAyD,mBAAzD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAUA,IAAMC,aAA8B,GAAG,SAAjCA,aAAiC,OAAyB;AAAA;;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;;AAAA,kBACZJ,QAAQ,CAAC,KAAD,CADI;AAAA,MACvDK,iBADuD;AAAA,MACpCC,oBADoC;;AAAA,mBAEVN,QAAQ,CAAC,KAAD,CAFE;AAAA,MAEvDO,kBAFuD;AAAA,MAEnCC,qBAFmC;;AAG9D,MAAMC,UAAmB,GAAGZ,WAAW,CAAC,UAAAa,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,UAAf;AAAA,GAAN,CAAvC;AACA,MAAMG,IAAU,GAAGf,WAAW,CAAC,UAAAa,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,IAAf;AAAA,GAAN,CAA9B;AAEAb,EAAAA,SAAS,CAAC,YAAK;AACbU,IAAAA,UAAU,GAAGH,oBAAoB,CAAC,KAAD,CAAvB,GAAiC,IAA3C,CADa,CAEb;AACA;AACD,GAJQ,CAAT;;AAMA,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BP,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAFD;;AAIA,MAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BN,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACD,GAFD;;AAIA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBP,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACAD,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAHD,CApB8D,CAwB9D;;;AACA,SACE,4BAEII,UAAU,GACR,4BACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,IAAI,EAAE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,KAAK,EAAEC,MAAM,CAACC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BP,IAAI,CAACQ,QAAjC,CAFF,CADQ,GAMR,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEP,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARN,EAaGR,iBAAiB,IAAI,CAACI,UAAtB,GAAmC,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAEI,MAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBE,MAAAA,YAAY,EAAZA;AAApB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,GAAiG,IAbpG,EAcGR,kBAAkB,GAAG,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAEO,MAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBC,MAAAA,YAAY,EAAZA;AAArB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmE,IAdxF,CADF;AAmBD,CA5CD;;GAAMZ,a;UAGwBN,W,EACTA,W;;;KAJfM,a;AA8CN,IAAMe,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAG;AACTE,IAAAA,cAAc,EAAE;AADP;AADE,CAAf;AAMA,eAAelB,aAAf;AAEA;AACE;;;AAGY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACL","sourcesContent":["import { Button } from \"antd\";\nimport \"../styles/antd.less\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MailOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { codeBlue } from \"../styles/colors\";\nimport { User } from \"../types\";\n\n\ninterface Props {\n  isAuthenticated: boolean;\n}\n\n\nconst ProfileButton: React.FC<Props> = ({ isAuthenticated }) => {\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const [signupModalVisible, setSignupModalVisible] = useState(false);\n  const isLoggedIn: boolean = useSelector(state => state.auth.isLoggedIn);\n  const user: User = useSelector(state => state.auth.user);\n\n  useEffect(()=> {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n    // console.log(\"the user is \");\n    // console.log(user);\n  })\n  \n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  }\n  \n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  }\n  \n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }\n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return (\n    <>\n      {\n        isLoggedIn \n        ? <>\n            <Button type=\"text\" icon={<UserOutlined style={{ fontSize: 25, color: \"#B9B9B9\" }} />} />  \n            <p style={styles.userName}>{user.fullName}</p>\n          </>\n      \n        : <Button type=\"primary\" onClick={toggleLoginModal}>\n            Log In\n          </Button>\n      }\n\n      {loginModalVisible && !isLoggedIn ? <LoginModal toggles={{ toggleLoginModal, switchModals }} /> : null}\n      {signupModalVisible ? <SignupModal toggles={{ toggleSignupModal, switchModals }} /> : null}\n    </>\n    \n  );\n};\n\nconst styles = {\n  userName : {\n    justifyContent: \"center\",\n  }\n}\n\nexport default ProfileButton;\n\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n              // style={{\n      //   position: \"relative\",\n      //   top: -1.5,\n      //   fontSize: 19,\n      //   borderWidth: 0,\n      //   marginLeft: 10,\n      //   backgroundColor: \"#fff\",\n      // }}\n}\n"]},"metadata":{},"sourceType":"module"}