{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/module-review.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moduleApi from \"../api/module\";\nimport reviewApi from \"../api/review\";\nimport eventApi from \"../api/event\";\nimport AddReviewModal from \"../components/AddReviewModal\";\nimport AddRatingsModal from \"../components/AddRatingsModal\";\nimport { Dropdown, Menu } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport ModuleInformation from \"../components/ModuleInformation\";\nimport ReviewList from \"../components/ReviewList\";\nimport Button from \"../components/Button\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\n\nconst compareNewest = (firstReview, secondReview) => {\n  const firstReviewCreatedAtDate = new Date(firstReview.createdAt);\n  const secondReviewCreatedAtDate = new Date(secondReview.createdAt);\n  return firstReviewCreatedAtDate < secondReviewCreatedAtDate ? 1 : -1;\n};\n\nconst ModuleReviewPage = ({\n  initialModule,\n  reviews\n}) => {\n  const {\n    0: module,\n    1: setModule\n  } = useState(initialModule);\n  const {\n    0: reviewsList,\n    1: setReviewsList\n  } = useState(reviews);\n  const {\n    0: numberOfReviews,\n    1: setNumberOfReviews\n  } = useState(20);\n  const {\n    0: isAddReviewModalVisible,\n    1: setAddReviewModalVisibility\n  } = useState(false);\n  const {\n    0: isAddRatingsModalVisible,\n    1: setAddRatingsModalVisibility\n  } = useState(false);\n  const {\n    0: ratingsByUser,\n    1: setRatingsByUser\n  } = useState(null);\n  const {\n    0: currentSort,\n    1: setCurrentSort\n  } = useState(\"new\");\n  const userId = useSelector(state => {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  const reviewByUser = reviewsList.find(review => review.userId === userId);\n  useEffect(() => {\n    checkIsRatedByUser();\n    eventApi.addEvent(userId, \"mod\", module._id, \"view\");\n  }, []);\n\n  const updateReviews = async () => {\n    const newReviews = await reviewApi.getReviewsOfModule(module._id);\n    newReviews.sort();\n    setReviewsList(newReviews);\n  };\n\n  const updateModule = async () => {\n    const updatedModule = await moduleApi.getModule(module._id);\n    updatedModule.prereqs = module.prereqs;\n    setModule(updatedModule);\n  };\n\n  const checkIsRatedByUser = async () => {\n    try {\n      const rating = await reviewApi.getRating(\"mod\", module._id, userId, \"star\");\n      setRatingsByUser(rating);\n    } catch (err) {\n      setRatingsByUser(null);\n    }\n  };\n\n  const compareOldest = (firstReview, secondReview) => {\n    const firstReviewCreatedAtDate = new Date(firstReview.createdAt);\n    const secondReviewCreatedAtDate = new Date(secondReview.createdAt);\n    return firstReviewCreatedAtDate > secondReviewCreatedAtDate ? 1 : -1;\n  };\n\n  const compareLikes = (firstReview, secondReview) => {\n    var _firstReview$reaction, _firstReview$reaction2, _firstReview$reaction3, _secondReview$reactio, _secondReview$reactio2, _secondReview$reactio3;\n\n    const firstReviewLikes = (_firstReview$reaction = (_firstReview$reaction2 = firstReview.reaction) === null || _firstReview$reaction2 === void 0 ? void 0 : (_firstReview$reaction3 = _firstReview$reaction2.like) === null || _firstReview$reaction3 === void 0 ? void 0 : _firstReview$reaction3.count) !== null && _firstReview$reaction !== void 0 ? _firstReview$reaction : 0;\n    const secondReviewLikes = (_secondReview$reactio = (_secondReview$reactio2 = secondReview.reaction) === null || _secondReview$reactio2 === void 0 ? void 0 : (_secondReview$reactio3 = _secondReview$reactio2.like) === null || _secondReview$reactio3 === void 0 ? void 0 : _secondReview$reactio3.count) !== null && _secondReview$reactio !== void 0 ? _secondReview$reactio : 0;\n    return secondReviewLikes - firstReviewLikes;\n  };\n\n  const updateCurrentSort = type => {\n    if (type === \"new\") {}\n  };\n\n  const sortReviews = compareFunction => {\n    const cloneReviews = reviewsList.concat([]);\n    cloneReviews.sort(compareFunction);\n    setReviewsList(cloneReviews);\n  };\n\n  const fetchMoreReviews = async () => {\n    const moreReviews = await reviewApi.getReviewsOfModule(module._id);\n    setReviewsList(moreReviews);\n    setNumberOfReviews(numberOfReviews + 10);\n  };\n\n  const menu = __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: () => sortReviews(compareNewest),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Newest\")), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: () => sortReviews(compareOldest),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Oldest\")), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: () => sortReviews(compareLikes),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Most Likes\")));\n\n  const renderPage = () => {\n    return module ? __jsx(React.Fragment, null, __jsx(ModuleInformation, {\n      module: module,\n      setAddReviewModalVisibility: setAddReviewModalVisibility,\n      setAddRatingsModalVisibility: setAddRatingsModalVisibility,\n      reviewByUser: reviewByUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      style: styles.reviewsHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, __jsx(\"span\", {\n      style: styles.reviewsHeaderTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"Reviews\"), __jsx(Dropdown, {\n      overlay: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      style: {\n        marginRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      style: {\n        color: \"#595959\",\n        marginRight: 6,\n        fontSize: 18\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Sort\"), __jsx(DownOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    })))), __jsx(ReviewList, {\n      updateReviews: updateReviews,\n      reviews: reviewsList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }), reviewsList.length >= 10 && __jsx(SeeMoreButton, {\n      fetchMoreData: fetchMoreReviews,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), __jsx(AddReviewModal, {\n      code: module.code,\n      modId: module._id,\n      updateReviews: updateReviews,\n      isModalVisible: isAddReviewModalVisible,\n      setModalVisibility: setAddReviewModalVisibility,\n      reviewByUser: reviewByUser,\n      updateModule: updateModule,\n      ratingsByUser: ratingsByUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }), __jsx(AddRatingsModal, {\n      code: module.code,\n      modId: module._id,\n      isModalVisible: isAddRatingsModalVisible,\n      setModalVisibility: setAddRatingsModalVisibility,\n      ratingsByUser: ratingsByUser,\n      updateModule: updateModule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    })) : __jsx(\"div\", {\n      style: styles.moduleNotFoundPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"Module not found!\"));\n  };\n\n  return renderPage();\n};\n\nconst styles = {\n  reviewsHeader: {\n    height: \"8vh\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0px 10px\",\n    fontFamily: \"Mukta\",\n    color: \"#838383\"\n  },\n  reviewsHeaderTitle: {\n    fontSize: \"26px\"\n  },\n  moduleNotFoundPage: {\n    display: \"flex\",\n    height: \"80vh\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\n\nModuleReviewPage.getInitialProps = async ({\n  query\n}) => {\n  const moduleId = query.id;\n\n  try {\n    const initialModule = await moduleApi.getModule(moduleId);\n    const prereqs = await Promise.all(initialModule.prereqs.map(async prereqId => {\n      const mod = await moduleApi.getModule(prereqId);\n      return mod.code;\n    }));\n    initialModule.prereqs = prereqs;\n    const reviews = await reviewApi.getReviewsOfModule(initialModule._id, 10);\n    reviews.sort(compareNewest);\n    return {\n      initialModule,\n      reviews\n    };\n  } catch (err) {\n    return {\n      initialModule: null,\n      reviews: []\n    };\n  }\n};\n\nexport default ModuleReviewPage;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/module-review.tsx"],"names":["useState","useEffect","useSelector","moduleApi","reviewApi","eventApi","AddReviewModal","AddRatingsModal","Dropdown","Menu","DownOutlined","ModuleInformation","ReviewList","Button","SeeMoreButton","compareNewest","firstReview","secondReview","firstReviewCreatedAtDate","Date","createdAt","secondReviewCreatedAtDate","ModuleReviewPage","initialModule","reviews","module","setModule","reviewsList","setReviewsList","numberOfReviews","setNumberOfReviews","isAddReviewModalVisible","setAddReviewModalVisibility","isAddRatingsModalVisible","setAddRatingsModalVisibility","ratingsByUser","setRatingsByUser","currentSort","setCurrentSort","userId","state","auth","user","_id","reviewByUser","find","review","checkIsRatedByUser","addEvent","updateReviews","newReviews","getReviewsOfModule","sort","updateModule","updatedModule","getModule","prereqs","rating","getRating","err","compareOldest","compareLikes","firstReviewLikes","reaction","like","count","secondReviewLikes","updateCurrentSort","type","sortReviews","compareFunction","cloneReviews","concat","fetchMoreReviews","moreReviews","menu","renderPage","styles","reviewsHeader","reviewsHeaderTitle","marginRight","color","fontSize","length","code","moduleNotFoundPage","height","display","justifyContent","alignItems","padding","fontFamily","width","getInitialProps","query","moduleId","id","Promise","all","map","prereqId","mod"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NextPage } from \"next\";\nimport { Module, Review } from \"../types\";\nimport moduleApi from \"../api/module\";\nimport reviewApi from \"../api/review\";\nimport eventApi from \"../api/event\";\n\nimport AddReviewModal from \"../components/AddReviewModal\";\nimport AddRatingsModal from \"../components/AddRatingsModal\";\nimport { Dropdown, Menu } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport ModuleInformation from \"../components/ModuleInformation\";\nimport ReviewList from \"../components/ReviewList\";\nimport Button from \"../components/Button\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\n\ninterface ModuleReviewProps {\n  initialModule: Module;\n  reviews: Review[];\n}\n\nconst compareNewest = (firstReview: Review, secondReview: Review): number => {\n  const firstReviewCreatedAtDate = new Date(firstReview.createdAt);\n  const secondReviewCreatedAtDate = new Date(secondReview.createdAt);\n  return firstReviewCreatedAtDate < secondReviewCreatedAtDate ? 1 : -1;\n};\n\nconst ModuleReviewPage: NextPage<ModuleReviewProps> = ({\n  initialModule,\n  reviews,\n}) => {\n  const [module, setModule] = useState(initialModule);\n  const [reviewsList, setReviewsList] = useState(reviews);\n  const [numberOfReviews, setNumberOfReviews] = useState(20);\n  const [isAddReviewModalVisible, setAddReviewModalVisibility] = useState(\n    false\n  );\n  const [isAddRatingsModalVisible, setAddRatingsModalVisibility] = useState(\n    false\n  );\n  const [ratingsByUser, setRatingsByUser] = useState(null);\n  const [currentSort, setCurrentSort] = useState(\"new\");\n\n  const userId = useSelector((state) => state.auth.user?._id);\n  const reviewByUser = reviewsList.find((review) => review.userId === userId);\n\n  useEffect(() => {\n    checkIsRatedByUser();\n    eventApi.addEvent(userId, \"mod\", module._id, \"view\");\n  }, []);\n\n  const updateReviews = async () => {\n    const newReviews = await reviewApi.getReviewsOfModule(module._id);\n    newReviews.sort();\n    setReviewsList(newReviews);\n  };\n\n  const updateModule = async () => {\n    const updatedModule = await moduleApi.getModule(module._id);\n    updatedModule.prereqs = module.prereqs;\n    setModule(updatedModule);\n  };\n\n  const checkIsRatedByUser = async () => {\n    try {\n      const rating = await reviewApi.getRating(\n        \"mod\",\n        module._id,\n        userId,\n        \"star\"\n      );\n      setRatingsByUser(rating);\n    } catch (err) {\n      setRatingsByUser(null);\n    }\n  };\n\n  const compareOldest = (firstReview: Review, secondReview: Review): number => {\n    const firstReviewCreatedAtDate = new Date(firstReview.createdAt);\n    const secondReviewCreatedAtDate = new Date(secondReview.createdAt);\n    return firstReviewCreatedAtDate > secondReviewCreatedAtDate ? 1 : -1;\n  };\n\n  const compareLikes = (firstReview: Review, secondReview: Review): number => {\n    const firstReviewLikes = firstReview.reaction?.like?.count ?? 0;\n    const secondReviewLikes = secondReview.reaction?.like?.count ?? 0;\n    return secondReviewLikes - firstReviewLikes;\n  };\n\n  const updateCurrentSort = type => {\n    if (type === \"new\") {\n      \n    }\n  }\n\n  const sortReviews = (compareFunction) => {\n    const cloneReviews = reviewsList.concat([]);\n    cloneReviews.sort(compareFunction);\n    setReviewsList(cloneReviews);\n  };\n\n  const fetchMoreReviews = async () => {\n    const moreReviews = await reviewApi.getReviewsOfModule(module._id);\n    setReviewsList(moreReviews);\n    setNumberOfReviews(numberOfReviews + 10);\n  };\n\n\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <Button onClick={() => sortReviews(compareNewest)}>Newest</Button>\n      </Menu.Item>\n      <Menu.Item>\n        <Button onClick={() => sortReviews(compareOldest)}>Oldest</Button>\n      </Menu.Item>\n      <Menu.Item>\n        <Button onClick={() => sortReviews(compareLikes)}>Most Likes</Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  const renderPage = () => {\n    return module ? (\n      <>\n        <ModuleInformation\n          module={module}\n          setAddReviewModalVisibility={setAddReviewModalVisibility}\n          setAddRatingsModalVisibility={setAddRatingsModalVisibility}\n          reviewByUser={reviewByUser}\n        />\n        <div style={styles.reviewsHeader}>\n          <span style={styles.reviewsHeaderTitle}>Reviews</span>\n          <Dropdown overlay={menu}>\n            <div style={{ marginRight: 20 }}>\n              <a style={{ color: \"#595959\", marginRight: 6, fontSize: 18 }}>\n                Sort\n              </a>\n              <DownOutlined />\n            </div>\n          </Dropdown>\n        </div>\n        <ReviewList updateReviews={updateReviews} reviews={reviewsList} />\n        {reviewsList.length >= 10 && (\n          <SeeMoreButton fetchMoreData={fetchMoreReviews} />\n        )}\n        <AddReviewModal\n          code={module.code}\n          modId={module._id}\n          updateReviews={updateReviews}\n          isModalVisible={isAddReviewModalVisible}\n          setModalVisibility={setAddReviewModalVisibility}\n          reviewByUser={reviewByUser}\n          updateModule={updateModule}\n          ratingsByUser={ratingsByUser}\n        />\n        <AddRatingsModal\n          code={module.code}\n          modId={module._id}\n          isModalVisible={isAddRatingsModalVisible}\n          setModalVisibility={setAddRatingsModalVisibility}\n          ratingsByUser={ratingsByUser}\n          updateModule={updateModule}\n        />\n      </>\n    ) : (\n      <div style={styles.moduleNotFoundPage}>\n        <span style={{}}>Module not found!</span>\n      </div>\n    );\n  };\n\n  return renderPage();\n};\n\nconst styles = {\n  reviewsHeader: {\n    height: \"8vh\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"0px 10px\",\n    fontFamily: \"Mukta\",\n    color: \"#838383\",\n  },\n  reviewsHeaderTitle: {\n    fontSize: \"26px\",\n  },\n  moduleNotFoundPage: {\n    display: \"flex\",\n    height: \"80vh\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n};\n\nModuleReviewPage.getInitialProps = async ({ query }) => {\n  const moduleId: string = query.id as string;\n  try {\n    const initialModule = await moduleApi.getModule(moduleId);\n    const prereqs = await Promise.all(\n      initialModule.prereqs.map(async (prereqId) => {\n        const mod = await moduleApi.getModule(prereqId);\n        return mod.code;\n      })\n    );\n    initialModule.prereqs = prereqs;\n\n    const reviews = await reviewApi.getReviewsOfModule(initialModule._id, 10);\n    reviews.sort(compareNewest);\n\n    return { initialModule, reviews };\n  } catch (err) {\n    return { initialModule: null, reviews: [] };\n  }\n};\n\nexport default ModuleReviewPage;\n"]},"metadata":{},"sourceType":"module"}