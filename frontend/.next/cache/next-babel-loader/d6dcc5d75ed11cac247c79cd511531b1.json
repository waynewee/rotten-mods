{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddRatingsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport reviewApi from \"../api/review\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\n\nvar AddRatingsModal = function AddRatingsModal(_ref) {\n  _s();\n\n  var _ratingsByUser$value;\n\n  var code = _ref.code,\n      modId = _ref.modId,\n      ratingsByUser = _ref.ratingsByUser,\n      isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility,\n      updateModule = _ref.updateModule,\n      checkIsRatedByUser = _ref.checkIsRatedByUser;\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n\n  var _useState = useState((_ratingsByUser$value = ratingsByUser === null || ratingsByUser === void 0 ? void 0 : ratingsByUser.value) !== null && _ratingsByUser$value !== void 0 ? _ratingsByUser$value : 3),\n      ratings = _useState[0],\n      setRatings = _useState[1];\n\n  var _useState2 = useState(\"Submit\"),\n      submitText = _useState2[0],\n      setSubmitText = _useState2[1];\n\n  var _useState3 = useState(submitBlue),\n      submitColor = _useState3[0],\n      setSubmitColor = _useState3[1];\n\n  useEffect(function () {\n    var _ratingsByUser$value2;\n\n    setRatings((_ratingsByUser$value2 = ratingsByUser === null || ratingsByUser === void 0 ? void 0 : ratingsByUser.value) !== null && _ratingsByUser$value2 !== void 0 ? _ratingsByUser$value2 : 0);\n  }, [ratingsByUser]);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateForm()) {\n                _context.next = 3;\n                break;\n              }\n\n              message.error(\"You need to rate the module first!\");\n              return _context.abrupt(\"return\");\n\n            case 3:\n              if (!ratingsByUser) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return reviewApi.updateRating(ratings, \"star\", userId, modId, \"mod\", ratingsByUser._id);\n\n            case 6:\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.next = 10;\n              return reviewApi.addRating(ratings, \"star\", userId, modId, \"mod\");\n\n            case 10:\n              checkIsRatedByUser();\n              updateModule();\n              setModalVisibility(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateForm = function validateForm() {\n    return ratings !== 0;\n  };\n\n  var closeModal = function closeModal(isToClose) {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: reviewBlue,\n    submitColor: submitColor,\n    title: \"Rate the Module\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: closeModal,\n    onSubmit: onSubmit,\n    submitText: submitText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"text\",\n    value: code,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Ratings\",\n    type: \"rate\",\n    value: ratings,\n    setValue: setRatings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddRatingsModal, \"oYB9WZcXZNYPJaAePRF4F/wjFKY=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddRatingsModal;\nexport default AddRatingsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRatingsModal\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddRatingsModal.tsx"],"names":["useState","useEffect","useSelector","reviewApi","FormModal","FormModalItem","reviewBlue","submitBlue","message","AddRatingsModal","code","modId","ratingsByUser","isModalVisible","setModalVisibility","updateModule","checkIsRatedByUser","userId","state","auth","user","_id","value","ratings","setRatings","submitText","setSubmitText","submitColor","setSubmitColor","onSubmit","validateForm","error","updateRating","addRating","closeModal","isToClose"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalState } from \"../types\";\nimport reviewApi from \"../api/review\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\n\ninterface AddRatingsModalProps extends ModalState {\n  code: string;\n  modId: string;\n  ratingsByUser?: { value: number; _id: string };\n  updateModule: () => void;\n  checkIsRatedByUser: () => void;\n}\n\nconst AddRatingsModal: React.FC<AddRatingsModalProps> = ({\n  code,\n  modId,\n  ratingsByUser,\n  isModalVisible,\n  setModalVisibility,\n  updateModule,\n  checkIsRatedByUser,\n}) => {\n  const userId = useSelector((state) => state.auth.user?._id);\n  const [ratings, setRatings] = useState(ratingsByUser?.value ?? 3);\n  const [submitText, setSubmitText] = useState(\"Submit\");\n  const [submitColor, setSubmitColor] = useState(submitBlue);\n\n  useEffect(() => {\n    setRatings(ratingsByUser?.value ?? 0);\n  }, [ratingsByUser]);\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      message.error(\"You need to rate the module first!\");\n      return;\n    }\n\n    if (ratingsByUser) {\n      await reviewApi.updateRating(\n        ratings,\n        \"star\",\n        userId,\n        modId,\n        \"mod\",\n        ratingsByUser._id\n      );\n    } else {\n      await reviewApi.addRating(ratings, \"star\", userId, modId, \"mod\");\n    }\n\n    checkIsRatedByUser();\n    updateModule();\n    setModalVisibility(false);\n  };\n\n  const validateForm = (): boolean => ratings !== 0;\n\n  const closeModal = (isToClose) => {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  };\n\n  return (\n    <FormModal\n      backgroundColor={reviewBlue}\n      submitColor={submitColor}\n      title=\"Rate the Module\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={closeModal}\n      onSubmit={onSubmit}\n      submitText={submitText}\n    >\n      <FormModalItem label=\"Module Code\" type=\"text\" value={code} />\n      <FormModalItem\n        label=\"Ratings\"\n        type=\"rate\"\n        value={ratings}\n        setValue={setRatings}\n      />\n    </FormModal>\n  );\n};\n\nexport default AddRatingsModal;\n"]},"metadata":{},"sourceType":"module"}