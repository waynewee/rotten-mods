{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Menu, Dropdown } from \"antd\";\nimport { UserOutlined } from '@ant-design/icons';\nimport \"../styles/antd.less\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { reviewBlue } from \"../styles/colors\";\nimport authService from '../services/authentication';\nimport { useDispatch } from \"react-redux\";\n\nconst ProfileButton = () => {\n  const {\n    0: loginModalVisible,\n    1: setLoginModalVisible\n  } = useState(false);\n  const {\n    0: signupModalVisible,\n    1: setSignupModalVisible\n  } = useState(false);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(state => state.auth.user);\n  const router = useRouter();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    isLoggedIn ? setLoginModalVisible(false) : null; // console.log(\"the user is \");\n    // console.log(user);\n  });\n\n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const navigateToProfilePage = () => {\n    router.push({\n      pathname: \"/profile\"\n    });\n  };\n\n  function handleMenuClick(e) {\n    console.log('click', e);\n  }\n\n  const menu = __jsx(Menu, {\n    onClick: handleMenuClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Menu.Item, {\n    key: \"1\",\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"1st menu item\"), __jsx(Menu.Item, {\n    key: \"2\",\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"2nd menu item\"), __jsx(Menu.Item, {\n    key: \"3\",\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"3rd menu item\")); // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n\n\n  return __jsx(React.Fragment, null, isLoggedIn ? __jsx(React.Fragment, null, __jsx(Dropdown, {\n    overlay: menu,\n    trigger: ['hover'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    style: styles.container,\n    onClick: () => navigateToProfilePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, user.fullName)), __jsx(Button, {\n    type: \"primary\",\n    onClick: () => authService.logOut(dispatch),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Logout\")) : __jsx(Button, {\n    type: \"primary\",\n    onClick: toggleLoginModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Log In\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 43\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }) : null);\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 10,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8\n  },\n  userName: {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15\n  }\n};\nexport default ProfileButton;\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n  // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n}","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["Button","Menu","Dropdown","UserOutlined","useSelector","useRouter","useEffect","useState","LoginModal","SignupModal","reviewBlue","authService","useDispatch","ProfileButton","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","isLoggedIn","state","auth","user","router","dispatch","toggleLoginModal","toggleSignupModal","switchModals","navigateToProfilePage","push","pathname","handleMenuClick","e","console","log","menu","styles","container","fullName","logOut","display","alignItems","margin","padding","backgroundColor","color","borderRadius","userName","paddingLeft","fontSize"],"mappings":"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","sourcesContent":["import { Button, Menu, Dropdown } from \"antd\";\nimport { UserOutlined} from '@ant-design/icons';\n\nimport \"../styles/antd.less\";\n\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\n\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { reviewBlue } from \"../styles/colors\";\nimport { User } from \"../types\";\nimport CustomButton from \"./Button\";\nimport authService from '../services/authentication';\nimport { useDispatch } from \"react-redux\";\n\n\n\nconst ProfileButton: React.FC = () => {\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const [signupModalVisible, setSignupModalVisible] = useState(false);\n  const isLoggedIn: boolean = useSelector(state => state.auth.isLoggedIn);\n  const user: User = useSelector(state => state.auth.user);\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n    // console.log(\"the user is \");\n    // console.log(user);\n  })\n\n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  }\n\n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  }\n\n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }\n\n  const navigateToProfilePage = () => {\n    router.push({\n      pathname: \"/profile\",\n    })\n  }\n\n  function handleMenuClick(e) {\n    console.log('click', e);\n  }\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"1\" icon={<UserOutlined />}>\n        1st menu item\n      </Menu.Item>\n      <Menu.Item key=\"2\" icon={<UserOutlined />}>\n        2nd menu item\n      </Menu.Item>\n      <Menu.Item key=\"3\" icon={<UserOutlined />}>\n        3rd menu item\n      </Menu.Item>\n    </Menu>\n  );\n\n\n  \n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <>\n              <Dropdown overlay={menu} trigger={['hover']}>\n                <Button style={styles.container} onClick={() =>navigateToProfilePage}>\n                  {user.fullName}\n                </Button>\n              </Dropdown>\n              <Button type=\"primary\" onClick={() =>authService.logOut(dispatch)}>\n                Logout\n              </Button>\n            </>\n        \n          : <Button type=\"primary\" onClick={toggleLoginModal}>\n            Log In\n          </Button>\n      }\n\n      {loginModalVisible && !isLoggedIn ? <LoginModal toggles={{ toggleLoginModal, switchModals }} /> : null}\n      {signupModalVisible ? <SignupModal toggles={{ toggleSignupModal, switchModals }} /> : null}\n    </>\n\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 10,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8\n  },\n  userName: {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15\n  }\n}\n\nexport default ProfileButton;\n\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n  // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n}\n"]},"metadata":{},"sourceType":"module"}