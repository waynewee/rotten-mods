{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/AddSchoolModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport schoolApi from \"../api/school\";\nimport { useState } from \"react\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\n\nvar AddSchoolModal = function AddSchoolModal(_ref) {\n  _s();\n\n  var isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility;\n\n  var _useState = useState(\"\"),\n      school = _useState[0],\n      setSchool = _useState[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateForm()) {\n                _context.next = 3;\n                break;\n              }\n\n              message.error(\"The field cannot be empty!\");\n              return _context.abrupt(\"return\");\n\n            case 3:\n              schoolApi.addSchool(school).then(function (response) {\n                setModalVisibility(false);\n                message.success(\"The school \".concat(school, \" has been added successfully!\"));\n              })[\"catch\"](function (error) {\n                console.log(\"the error is\");\n                console.log(error.response);\n\n                if (error.response.status == \"409\") {\n                  message.error(\"The school \".concat(school, \" is already in the database!\"));\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateForm = function validateForm() {\n    return school !== \"\";\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: codeBlue,\n    submitColor: \"#3E59B9\",\n    title: \"Add School\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: setModalVisibility,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"School Name\",\n    type: \"input\",\n    value: school,\n    setValue: setSchool,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddSchoolModal, \"/7lFBCOqXqTa9gWpLgWdwY3oJQM=\");\n\n_c = AddSchoolModal;\nvar styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\"\n  }\n};\nexport default AddSchoolModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSchoolModal\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/AddSchoolModal.tsx"],"names":["schoolApi","useState","FormModal","FormModalItem","codeBlue","message","AddSchoolModal","isModalVisible","setModalVisibility","school","setSchool","onSubmit","validateForm","error","addSchool","then","response","success","console","log","status","styles","loginFormButton","width","backgroundColor"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,eAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,OAAT,QAAwB,MAAxB;;AAEA,IAAMC,cAAoC,GAAG,SAAvCA,cAAuC,OAGvC;AAAA;;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,kBACI,QADJA,kBACI;;AAAA,kBACwBP,QAAQ,CAAC,EAAD,CADhC;AAAA,MACGQ,MADH;AAAA,MACWC,SADX;;AAGJ,MAAMC,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,kBACVC,YAAY,EADF;AAAA;AAAA;AAAA;;AAEbP,cAAAA,OAAO,CAACQ,KAAR,CAAc,4BAAd;AAFa;;AAAA;AAMfb,cAAAA,SAAS,CAACc,SAAV,CAAoBL,MAApB,EACCM,IADD,CACM,UAACC,QAAD,EAAc;AAClBR,gBAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAH,gBAAAA,OAAO,CAACY,OAAR,sBAA8BR,MAA9B;AACD,eAJD,WAKO,UAACI,KAAD,EAAW;AAChBK,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,QAAlB;;AACA,oBAAIH,KAAK,CAACG,QAAN,CAAeI,MAAf,IAAyB,KAA7B,EAAoC;AAClCf,kBAAAA,OAAO,CAACQ,KAAR,sBAA4BJ,MAA5B;AACD;AACF,eAXD;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARE,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAoBA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOH,MAAM,KAAK,EAAlB;AACD,GAFD;;AAIA,SACE,MAAC,SAAD;AACE,IAAA,eAAe,EAAEL,QADnB;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAC,YAHR;AAIE,IAAA,cAAc,EAAEG,cAJlB;AAKE,IAAA,kBAAkB,EAAEC,kBALtB;AAME,IAAA,QAAQ,EAAEG,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,MAHT;AAIE,IAAA,QAAQ,EAAEC,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CA/CD;;GAAMJ,c;;KAAAA,c;AAiDN,IAAMe,MAAM,GAAG;AACbC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE,MADQ;AAEfC,IAAAA,eAAe,EAAE;AAFF;AADJ,CAAf;AAOA,eAAelB,cAAf","sourcesContent":["import schoolApi from \"../api/school\";\nimport { useState } from \"react\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { ModalState } from \"../types\";\nimport { message } from \"antd\";\n\nconst AddSchoolModal: React.FC<ModalState> = ({\n  isModalVisible,\n  setModalVisibility,\n}) => {\n  const [school, setSchool] = useState(\"\");\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      message.error(\"The field cannot be empty!\");\n      return;\n    }\n\n    schoolApi.addSchool(school)\n    .then((response) => {\n      setModalVisibility(false);\n      message.success(`The school ${school} has been added successfully!`);\n    })\n    .catch((error) => {\n      console.log(\"the error is\");\n      console.log(error.response);\n      if (error.response.status == \"409\") {\n        message.error(`The school ${school} is already in the database!`);\n      }\n    })\n  };\n\n  const validateForm = () => {\n    return school !== \"\";\n  };\n\n  return (\n    <FormModal\n      backgroundColor={codeBlue}\n      submitColor=\"#3E59B9\"\n      title=\"Add School\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={setModalVisibility}\n      onSubmit={onSubmit}\n    >\n      <FormModalItem\n        label=\"School Name\"\n        type=\"input\"\n        value={school}\n        setValue={setSchool}\n      />\n    </FormModal>\n  );\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\",\n  },\n};\n\nexport default AddSchoolModal;\n"]},"metadata":{},"sourceType":"module"}