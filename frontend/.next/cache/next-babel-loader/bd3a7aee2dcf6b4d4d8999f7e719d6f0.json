{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, Divider, Select } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined, CalendarOutlined } from \"@ant-design/icons\";\nimport { codeBlue } from \"../styles/colors\";\nimport axios from \"axios\";\nimport authService from \"../utils/authentication\";\nimport { message } from \"antd\";\n\nvar SignupModal = function SignupModal(toggles) {\n  _s();\n\n  var _useState = useState([{\n    schoolId: \"\",\n    schoolName: \"\"\n  }]),\n      inputUniversityValues = _useState[0],\n      setUniversityInputValues = _useState[1];\n\n  var _useState2 = useState([{\n    courseId: \"\",\n    courseName: \"\"\n  }]),\n      inputCourses = _useState2[0],\n      setInputCourses = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      newSchoolName = _useState3[0],\n      setSchoolName = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      newCourseName = _useState4[0],\n      setCourseName = _useState4[1];\n\n  useEffect(function () {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  var populateSchools = function populateSchools() {\n    axios({\n      method: \"get\",\n      url: \"/school\",\n      baseURL: \"http://localhost:8080/api\"\n    }).then(function (response) {\n      var schoolsInDatabase = response.data.map(function (obj) {\n        var universityValue = {\n          schoolId: \"\",\n          schoolName: \"\"\n        };\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setUniversityInputValues(schoolsInDatabase);\n      console.log(\"Now uni has these values\");\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  var populateCourses = function populateCourses() {\n    axios({\n      method: \"get\",\n      url: \"/course\",\n      baseURL: \"http://localhost:8080/api\"\n    }).then(function (response) {\n      var coursesInDatabase = response.data.map(function (obj) {\n        var course = {\n          courseId: \"\",\n          courseName: \"\"\n        };\n        course.courseId = obj._id;\n        course.courseName = obj.name;\n        return course;\n      });\n      setInputCourses(coursesInDatabase);\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  var onFormFinish = function onFormFinish(signUpValues) {\n    authService.signUp(signUpValues).then(function (response) {\n      message.success(\"Successfully Signed Up\");\n      toggles.toggles.switchModals();\n    })[\"catch\"](function (error) {\n      message.error(\"This user has already been created. Do you mean to sign in?\");\n    });\n  };\n\n  var onUniversityChange = function onUniversityChange(event) {\n    setSchoolName(event.target.value);\n  };\n\n  var onCourseChange = function onCourseChange(event) {\n    setCourseName(event.target.value);\n  }; // const addUniversityItem = () => {\n  //   setSchoolName(\"\");\n  //   if (\n  //     newSchoolName.trim() !== \"\" &&\n  //     !inputUniversityValues.some((e) => e.schoolName === newSchoolName)\n  //   ) {\n  //     console.log(\"adduniItem\");\n  //     setUniversityInputValues([\n  //       ...inputUniversityValues,\n  //       { schoolId: \"userCreated\", schoolName: newSchoolName },\n  //     ]);\n  //   }\n  // };\n  // const addCourseItem = () => {\n  //   console.log(\"adduniItem\");\n  //   setCourseName(\"\");\n  //   if (\n  //     newCourseName.trim() !== \"\" &&\n  //     !inputCourses.some((e) => e.courseName === newCourseName)\n  //   ) {\n  //     setInputCourses([\n  //       ...inputCourses,\n  //       { courseId: \"userCreated\", courseName: newCourseName },\n  //     ]);\n  //   }\n  // };\n\n\n  var validateEmail = function validateEmail(email) {\n    var regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.+-]+\\.edu$/;\n    return regex.test(email);\n  }; // function renderAddition(addition) {\n  //   if (addition == \"university\") {\n  //     return (\n  //       <div style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}>\n  //         <Input\n  //           style={{ flex: \"auto\" }}\n  //           value={newSchoolName}\n  //           onChange={onUniversityChange}\n  //         />\n  //         <a\n  //           style={{\n  //             flex: \"none\",\n  //             padding: \"8px\",\n  //             display: \"block\",\n  //             cursor: \"pointer\",\n  //           }}\n  //           onClick={addUniversityItem}\n  //         >\n  //           ADD\n  //         </a>\n  //       </div>\n  //     );\n  //   } else {\n  //     return (\n  //       <div style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}>\n  //         <Input\n  //           style={{ flex: \"auto\" }}\n  //           value={newCourseName}\n  //           onChange={onCourseChange}\n  //         />\n  //         <a\n  //           style={{\n  //             flex: \"none\",\n  //             padding: \"8px\",\n  //             display: \"block\",\n  //             cursor: \"pointer\",\n  //           }}\n  //           onClick={addCourseItem}\n  //         >\n  //           ADD\n  //         </a>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    visible: true,\n    title: __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 16\n      }\n    }, \" SIGNUP \"),\n    centered: true,\n    onCancel: toggles.toggles.toggleSignupModal,\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    name: \"normal_signup\",\n    className: \"signup-form\",\n    initialValues: {},\n    onFinish: onFormFinish,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: \"Please enter your full name!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Full Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"emailaddress\",\n    rules: [{\n      required: true,\n      message: \"Please enter an email address!\"\n    }, {\n      validator: function validator(_, value) {\n        if (!validateEmail(value)) {\n          return Promise.reject(\"Only .edu email address are allowed to sign up\");\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Email Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"userpassword\",\n    rules: [{\n      required: true,\n      message: \"Please enter a password!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"yearofstudy\",\n    rules: [{\n      required: true,\n      message: \"Please enter your Year of Study!\"\n    }, {\n      validator: function validator(_, value) {\n        if (value < 1 || value > 8) {\n          return Promise.reject(\"Your Year of Study should only be between 1 to 8\");\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    prefix: __jsx(CalendarOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }),\n    placeholder: \"Year Of Study\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }))), __jsx(Form.Item, {\n    name: \"university\",\n    rules: [{\n      required: true,\n      message: \"Please enter your University!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"University\",\n    dropdownRender: function dropdownRender(menu) {\n      return __jsx(React.Fragment, null, menu);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, inputUniversityValues.map(function (item) {\n    return __jsx(Select.Option, {\n      key: item.schoolName,\n      value: item.schoolId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, item.schoolName);\n  }))), __jsx(Form.Item, {\n    name: \"course\",\n    rules: [{\n      required: true,\n      message: \"Please enter the name of the course you are enrolled in!\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Course Of Study\",\n    value: \"Default\",\n    dropdownRender: function dropdownRender(menu) {\n      return __jsx(React.Fragment, null, menu);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, inputCourses.map(function (item) {\n    return __jsx(Select.Option, {\n      key: item.courseName,\n      value: item.courseId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }, item.courseName);\n  }))), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Log in\", \" \", __jsx(\"a\", {\n    onClick: function onClick() {\n      return toggles.toggles.switchModals();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, \" here\"))));\n};\n\n_s(SignupModal, \"PPJRNnsPFKiVmv0us3yiElUuZ5g=\");\n\n_c = SignupModal;\nvar styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue\n  }\n};\nexport default SignupModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupModal\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx"],"names":["useState","useEffect","Modal","Button","Form","Input","Divider","Select","UserOutlined","LockOutlined","MailOutlined","CalendarOutlined","codeBlue","axios","authService","message","SignupModal","toggles","schoolId","schoolName","inputUniversityValues","setUniversityInputValues","courseId","courseName","inputCourses","setInputCourses","newSchoolName","setSchoolName","newCourseName","setCourseName","populateSchools","populateCourses","method","url","baseURL","then","response","schoolsInDatabase","data","map","obj","universityValue","_id","name","console","log","error","coursesInDatabase","course","onFormFinish","signUpValues","signUp","success","switchModals","onUniversityChange","event","target","value","onCourseChange","validateEmail","email","regex","test","textAlign","toggleSignupModal","required","validator","_","Promise","reject","resolve","marginBottom","width","menu","item","styles","loginFormButton","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { Modal, Button, Form, Input, Divider, Select, DatePicker } from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailOutlined,\n  LaptopOutlined,\n  CalendarOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport { codeBlue } from \"../styles/colors\";\n\nimport axios from \"axios\";\nimport authService from \"../utils/authentication\";\n\nimport { message } from \"antd\";\n\ninterface SignupModalProps {\n  toggles: {\n    toggleSignupModal: () => void;\n    switchModals: () => void;\n  };\n}\n\nconst SignupModal: React.FC<SignupModalProps> = (toggles) => {\n  const [inputUniversityValues, setUniversityInputValues] = useState([\n    { schoolId: \"\", schoolName: \"\" },\n  ]);\n  const [inputCourses, setInputCourses] = useState([\n    { courseId: \"\", courseName: \"\" },\n  ]);\n  const [newSchoolName, setSchoolName] = useState(\"\");\n  const [newCourseName, setCourseName] = useState(\"\");\n\n  useEffect(() => {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  const populateSchools = () => {\n    axios({\n      method: \"get\",\n      url: \"/school\",\n      baseURL: \"http://localhost:8080/api\",\n    })\n      .then(function (response) {\n        const schoolsInDatabase = response.data.map((obj) => {\n          const universityValue = { schoolId: \"\", schoolName: \"\" };\n          universityValue.schoolId = obj._id;\n          universityValue.schoolName = obj.name;\n          return universityValue;\n        });\n        setUniversityInputValues(schoolsInDatabase);\n        console.log(\"Now uni has these values\");\n      })\n      .then(function (error) {\n        console.log(error);\n      });\n  };\n\n  const populateCourses = () => {\n    axios({\n      method: \"get\",\n      url: \"/course\",\n      baseURL: \"http://localhost:8080/api\",\n    })\n      .then(function (response) {\n        const coursesInDatabase = response.data.map((obj) => {\n          const course = { courseId: \"\", courseName: \"\" };\n          course.courseId = obj._id;\n          course.courseName = obj.name;\n          return course;\n        });\n        setInputCourses(coursesInDatabase);\n      })\n      .then(function (error) {\n        console.log(error);\n      });\n  };\n\n  const onFormFinish = (signUpValues) => {\n    authService\n      .signUp(signUpValues)\n      .then(function (response) {\n        message.success(\"Successfully Signed Up\");\n        toggles.toggles.switchModals();\n      })\n      .catch((error) => {\n        message.error(\n          \"This user has already been created. Do you mean to sign in?\"\n        );\n      });\n  };\n\n  const onUniversityChange = (event) => {\n    setSchoolName(event.target.value);\n  };\n\n  const onCourseChange = (event) => {\n    setCourseName(event.target.value);\n  };\n\n  // const addUniversityItem = () => {\n  //   setSchoolName(\"\");\n  //   if (\n  //     newSchoolName.trim() !== \"\" &&\n  //     !inputUniversityValues.some((e) => e.schoolName === newSchoolName)\n  //   ) {\n  //     console.log(\"adduniItem\");\n  //     setUniversityInputValues([\n  //       ...inputUniversityValues,\n  //       { schoolId: \"userCreated\", schoolName: newSchoolName },\n  //     ]);\n  //   }\n  // };\n\n  // const addCourseItem = () => {\n  //   console.log(\"adduniItem\");\n  //   setCourseName(\"\");\n  //   if (\n  //     newCourseName.trim() !== \"\" &&\n  //     !inputCourses.some((e) => e.courseName === newCourseName)\n  //   ) {\n  //     setInputCourses([\n  //       ...inputCourses,\n  //       { courseId: \"userCreated\", courseName: newCourseName },\n  //     ]);\n  //   }\n  // };\n\n  const validateEmail = (email: string): boolean => {\n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.+-]+\\.edu$/;\n\n    return regex.test(email);\n  };\n\n  // function renderAddition(addition) {\n  //   if (addition == \"university\") {\n  //     return (\n  //       <div style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}>\n  //         <Input\n  //           style={{ flex: \"auto\" }}\n  //           value={newSchoolName}\n  //           onChange={onUniversityChange}\n  //         />\n  //         <a\n  //           style={{\n  //             flex: \"none\",\n  //             padding: \"8px\",\n  //             display: \"block\",\n  //             cursor: \"pointer\",\n  //           }}\n  //           onClick={addUniversityItem}\n  //         >\n  //           ADD\n  //         </a>\n  //       </div>\n  //     );\n  //   } else {\n  //     return (\n  //       <div style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}>\n  //         <Input\n  //           style={{ flex: \"auto\" }}\n  //           value={newCourseName}\n  //           onChange={onCourseChange}\n  //         />\n  //         <a\n  //           style={{\n  //             flex: \"none\",\n  //             padding: \"8px\",\n  //             display: \"block\",\n  //             cursor: \"pointer\",\n  //           }}\n  //           onClick={addCourseItem}\n  //         >\n  //           ADD\n  //         </a>\n  //       </div>\n  //     );\n  //   }\n  // }\n\n  return (\n    <>\n      <Modal\n        visible={true}\n        title={<div style={{ textAlign: \"center\" }}> SIGNUP </div>}\n        centered\n        onCancel={toggles.toggles.toggleSignupModal}\n        footer={null}\n      >\n        <Form\n          name=\"normal_signup\"\n          className=\"signup-form\"\n          initialValues={{}}\n          onFinish={onFormFinish}\n        >\n          <Form.Item\n            name=\"fullname\"\n            rules={[\n              { required: true, message: \"Please enter your full name!\" },\n            ]}\n          >\n            <Input prefix={<UserOutlined />} placeholder=\"Full Name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"emailaddress\"\n            rules={[\n              { required: true, message: \"Please enter an email address!\" },\n              {\n                validator: (_, value) => {\n                  if (!validateEmail(value)) {\n                    return Promise.reject(\n                      \"Only .edu email address are allowed to sign up\"\n                    );\n                  } else {\n                    return Promise.resolve();\n                  }\n                },\n              },\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email Address\" />\n          </Form.Item>\n          <Form.Item\n            name=\"userpassword\"\n            rules={[{ required: true, message: \"Please enter a password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item style={{ marginBottom: 0 }}>\n            <Form.Item\n              name=\"yearofstudy\"\n              rules={[\n                { required: true, message: \"Please enter your Year of Study!\" },\n                {\n                  validator: (_, value) => {\n                    if (value < 1 || value > 8) {\n                      return Promise.reject(\n                        \"Your Year of Study should only be between 1 to 8\"\n                      );\n                    } else {\n                      return Promise.resolve();\n                    }\n                  },\n                },\n              ]}\n            >\n              <Input\n                type=\"number\"\n                prefix={<CalendarOutlined />}\n                placeholder=\"Year Of Study\"\n              />\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item\n            name=\"university\"\n            rules={[\n              { required: true, message: \"Please enter your University!\" },\n            ]}\n          >\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder=\"University\"\n              dropdownRender={(menu) => (\n                <>\n                  {menu}\n                  {/* <Divider style={{ margin: \"4px 0\" }} />\n                  {renderAddition(\"university\")} */}\n                </>\n              )}\n            >\n              {inputUniversityValues.map((item) => (\n                <Select.Option key={item.schoolName} value={item.schoolId}>\n                  {item.schoolName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"course\"\n            rules={[\n              {\n                required: true,\n                message:\n                  \"Please enter the name of the course you are enrolled in!\",\n              },\n            ]}\n          >\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder=\"Course Of Study\"\n              value=\"Default\"\n              dropdownRender={(menu) => (\n                <>\n                  {menu}\n                  {/* <Divider style={{ margin: \"4px 0\" }} />\n                  {renderAddition(\"course\")} */}\n                </>\n              )}\n            >\n              {inputCourses.map((item) => (\n                <Select.Option key={item.courseName} value={item.courseId}>\n                  {item.courseName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={styles.loginFormButton}\n            >\n              SIGN UP\n            </Button>\n          </Form.Item>\n        </Form>\n        <Divider />\n        <div style={{ textAlign: \"center\" }}>\n          Already have an account? Log in{\" \"}\n          <a onClick={() => toggles.toggles.switchModals()}> here</a>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue,\n  },\n};\n\nexport default SignupModal;\n"]},"metadata":{},"sourceType":"module"}