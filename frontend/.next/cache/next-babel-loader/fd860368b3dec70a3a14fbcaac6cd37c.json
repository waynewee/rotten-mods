{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddReviewModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport reviewApi from \"../api/review\";\nimport { fetchRatings } from \"../utils/helpers\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\nvar today = new Date();\nvar currentYear = today.getFullYear();\nvar currentMonth = today.getMonth();\nvar yearShortform = currentYear % 2000; // eg. 2021 => 21\n\nvar currentSemester = currentMonth < 6 ? 2 : 1;\nvar currentAYSecondYear = currentSemester === 1 ? yearShortform + 1 : yearShortform;\nvar yearMinusOne = currentAYSecondYear - 1;\nvar initialReviewState = {\n  text: \"\",\n  ratingIds: [],\n  workload: 10,\n  semesterTaken: \"\",\n  acadYearTaken: \"\".concat(yearMinusOne, \"/\").concat(currentAYSecondYear)\n};\n\nvar AddReviewModal = function AddReviewModal(_ref) {\n  _s();\n\n  var code = _ref.code,\n      module = _ref.module,\n      updateReviews = _ref.updateReviews,\n      updateModule = _ref.updateModule,\n      isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility,\n      reviewByUser = _ref.reviewByUser,\n      ratingsByUser = _ref.ratingsByUser;\n  var initialReview = reviewByUser !== null && reviewByUser !== void 0 ? reviewByUser : initialReviewState;\n\n  var _useState = useState(initialReview.text),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useState2 = useState(3),\n      difficulty = _useState2[0],\n      setDifficulty = _useState2[1];\n\n  var _useState3 = useState(3),\n      ratings = _useState3[0],\n      setRatings = _useState3[1];\n\n  var _useState4 = useState(initialReview.semesterTaken),\n      semester = _useState4[0],\n      setSemester = _useState4[1];\n\n  var _useState5 = useState(initialReview.acadYearTaken),\n      year = _useState5[0],\n      setYear = _useState5[1];\n\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  console.log(module);\n  useEffect(function () {\n    var ratingIds = reviewByUser === null || reviewByUser === void 0 ? void 0 : reviewByUser.ratingIds;\n\n    if ((ratingIds === null || ratingIds === void 0 ? void 0 : ratingIds.length) > 0) {\n      fetchRatings(ratingIds, setRatings, setDifficulty);\n    }\n  }, []);\n  useEffect(function () {\n    if (reviewByUser) {\n      setText(reviewByUser.text); // setDifficulty()\n      // setRatings()\n\n      setSemester(reviewByUser.semesterTaken);\n      setYear(reviewByUser.acadYearTaken);\n    }\n  }, [reviewByUser]);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var requestBody;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateForm()) {\n                _context.next = 3;\n                break;\n              }\n\n              message.error(\"You need to fill in all fields!\");\n              return _context.abrupt(\"return\");\n\n            case 3:\n              requestBody = {\n                text: text,\n                semesterTaken: semester,\n                acadYearTaken: year,\n                modId: module._id,\n                userId: userId,\n                ratings: [{\n                  type: \"difficulty\",\n                  value: difficulty\n                }, {\n                  type: \"star\",\n                  value: ratings\n                }]\n              };\n\n              if (!reviewByUser) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 7;\n              return reviewApi.updateReviewOfModule(requestBody, reviewByUser._id);\n\n            case 7:\n              updateReviews(); // update ratings\n\n              _context.next = 15;\n              break;\n\n            case 10:\n              if (!ratingsByUser) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 13;\n              return reviewApi.deleteRating(ratingsByUser._id);\n\n            case 13:\n              _context.next = 15;\n              return reviewApi.addReviewOfModule(requestBody);\n\n            case 15:\n              setModalVisibility(false);\n              updateReviews();\n              updateModule();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateForm = function validateForm() {\n    return ratings !== 0 && difficulty !== 0 && text.trim() !== \"\";\n  };\n\n  var closeModal = function closeModal(isToClose) {\n    setModalVisibility(isToClose);\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: reviewBlue,\n    submitColor: submitBlue,\n    title: \"\".concat(reviewByUser ? \"Edit\" : \"Add\", \" Review\"),\n    isModalVisible: isModalVisible,\n    setModalVisibility: closeModal,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"text\",\n    value: code,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Review\",\n    type: \"textarea\",\n    value: text,\n    setValue: setText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Year Taken\",\n    type: \"annualYear\",\n    value: year,\n    setValue: setYear,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Semester Taken\",\n    type: \"semester\",\n    value: semester,\n    options: module.semester,\n    setValue: setSemester,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Difficulty\",\n    type: \"difficulty\",\n    value: difficulty,\n    setValue: setDifficulty,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Ratings\",\n    type: \"rate\",\n    value: ratings,\n    setValue: setRatings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddReviewModal, \"lKnmLxRlib8rU6yvAFNrWifACcE=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddReviewModal;\nexport default AddReviewModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReviewModal\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddReviewModal.tsx"],"names":["useState","useEffect","useSelector","reviewApi","fetchRatings","FormModal","FormModalItem","reviewBlue","submitBlue","message","today","Date","currentYear","getFullYear","currentMonth","getMonth","yearShortform","currentSemester","currentAYSecondYear","yearMinusOne","initialReviewState","text","ratingIds","workload","semesterTaken","acadYearTaken","AddReviewModal","code","module","updateReviews","updateModule","isModalVisible","setModalVisibility","reviewByUser","ratingsByUser","initialReview","setText","difficulty","setDifficulty","ratings","setRatings","semester","setSemester","year","setYear","userId","state","auth","user","_id","console","log","length","onSubmit","validateForm","error","requestBody","modId","type","value","updateReviewOfModule","deleteRating","addReviewOfModule","trim","closeModal","isToClose"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalState, Review, Module } from \"../types\";\nimport reviewApi from \"../api/review\";\nimport { fetchRatings } from \"../utils/helpers\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue, crossRed } from \"../styles/colors\";\nimport { message } from \"antd\";\n\ninterface AddReviewModalProps extends ModalState {\n  code: string;\n  module: Module;\n  updateReviews: () => void;\n  updateModule: () => void;\n  reviewByUser: Review;\n  ratingsByUser: { _id: string };\n}\n\nconst today = new Date();\nconst currentYear = today.getFullYear();\nconst currentMonth = today.getMonth();\nconst yearShortform = currentYear % 2000; // eg. 2021 => 21\nconst currentSemester = currentMonth < 6 ? 2 : 1;\nconst currentAYSecondYear =\n  currentSemester === 1 ? yearShortform + 1 : yearShortform;\nconst yearMinusOne = currentAYSecondYear - 1;\n\nconst initialReviewState = {\n  text: \"\",\n  ratingIds: [],\n  workload: 10,\n  semesterTaken: \"\",\n  acadYearTaken: `${yearMinusOne}/${currentAYSecondYear}`,\n};\n\nconst AddReviewModal: React.FC<AddReviewModalProps> = ({\n  code,\n  module,\n  updateReviews,\n  updateModule,\n  isModalVisible,\n  setModalVisibility,\n  reviewByUser,\n  ratingsByUser,\n}) => {\n  const initialReview = reviewByUser ?? initialReviewState;\n\n  const [text, setText] = useState(initialReview.text);\n  const [difficulty, setDifficulty] = useState(3);\n  const [ratings, setRatings] = useState(3);\n  const [semester, setSemester] = useState(initialReview.semesterTaken);\n  const [year, setYear] = useState(initialReview.acadYearTaken);\n  const userId = useSelector((state) => state.auth.user?._id);\n  console.log(module);\n  useEffect(() => {\n    const ratingIds = reviewByUser?.ratingIds;\n    if (ratingIds?.length > 0) {\n      fetchRatings(ratingIds, setRatings, setDifficulty);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (reviewByUser) {\n      setText(reviewByUser.text);\n      // setDifficulty()\n      // setRatings()\n      setSemester(reviewByUser.semesterTaken);\n      setYear(reviewByUser.acadYearTaken);\n    }\n  }, [reviewByUser]);\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      message.error(\"You need to fill in all fields!\");\n      return;\n    }\n\n    const requestBody = {\n      text,\n      semesterTaken: semester as string,\n      acadYearTaken: year as string,\n      modId: module._id,\n      userId,\n      ratings: [\n        {\n          type: \"difficulty\",\n          value: difficulty,\n        },\n        {\n          type: \"star\",\n          value: ratings,\n        },\n      ],\n    };\n\n    if (reviewByUser) {\n      await reviewApi.updateReviewOfModule(requestBody, reviewByUser._id);\n      updateReviews();\n      // update ratings\n    } else {\n      if (ratingsByUser) {\n        await reviewApi.deleteRating(ratingsByUser._id);\n      }\n\n      await reviewApi.addReviewOfModule(requestBody);\n    }\n\n    setModalVisibility(false);\n    updateReviews();\n    updateModule();\n  };\n\n  const validateForm = () =>\n    ratings !== 0 && difficulty !== 0 && text.trim() !== \"\";\n\n  const closeModal = (isToClose) => {\n    setModalVisibility(isToClose);\n  };\n\n  return (\n    <FormModal\n      backgroundColor={reviewBlue}\n      submitColor={submitBlue}\n      title={`${reviewByUser ? \"Edit\" : \"Add\"} Review`}\n      isModalVisible={isModalVisible}\n      setModalVisibility={closeModal}\n      onSubmit={onSubmit}\n    >\n      <FormModalItem label=\"Module Code\" type=\"text\" value={code} />\n      <FormModalItem\n        label=\"Review\"\n        type=\"textarea\"\n        value={text}\n        setValue={setText}\n      />\n      <FormModalItem\n        label=\"Year Taken\"\n        type=\"annualYear\"\n        value={year}\n        setValue={setYear}\n      />\n      <FormModalItem\n        label=\"Semester Taken\"\n        type=\"semester\"\n        value={semester}\n        options={module.semester}\n        setValue={setSemester}\n      />\n      <FormModalItem\n        label=\"Difficulty\"\n        type=\"difficulty\"\n        value={difficulty}\n        setValue={setDifficulty}\n      />\n      <FormModalItem\n        label=\"Ratings\"\n        type=\"rate\"\n        value={ratings}\n        setValue={setRatings}\n      />\n    </FormModal>\n  );\n};\n\nexport default AddReviewModal;\n"]},"metadata":{},"sourceType":"module"}