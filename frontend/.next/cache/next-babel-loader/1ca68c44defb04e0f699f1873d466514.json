{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/Button.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst Button = ({\n  children,\n  onClick,\n  style = {}\n}) => {\n  return __jsx(\"div\", {\n    onClick: onClick,\n    style: _objectSpread({\n      cursor: \"pointer\"\n    }, style),\n    onHover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, children, __jsx(Dropdown, {\n    overlay: menu,\n    placement: \"bottomRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"bottomRight\")));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/Button.tsx"],"names":["Button","children","onClick","style","cursor","menu"],"mappings":";;;;;;;;;;AAKA,MAAMA,MAA6B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,KAAK,GAAG;AAA7B,CAAD,KAAuC;AAC3E,SACE;AAAK,IAAA,OAAO,EAAED,OAAd;AAAuB,IAAA,KAAK;AAAIE,MAAAA,MAAM,EAAE;AAAZ,OAA0BD,KAA1B,CAA5B;AAA+D,IAAA,OAAO,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,EAEE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEI,IAAnB;AAAyB,IAAA,SAAS,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAFF,CADF;AAQD,CATD;;AAWA,eAAeL,MAAf","sourcesContent":["interface ButtonProps {\n  onClick: () => void,\n  style?: React.CSSProperties\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, onClick, style = {} }) => {\n  return (\n    <div onClick={onClick} style={{ cursor: \"pointer\", ...style }} onHover>\n      {children}\n      <Dropdown overlay={menu} placement=\"bottomRight\">\n        <Button>bottomRight</Button>\n      </Dropdown>\n    </div>\n  )\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}