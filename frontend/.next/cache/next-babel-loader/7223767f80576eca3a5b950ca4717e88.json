{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport reviewApi from \"../api/review\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue, crossRed } from \"../styles/colors\";\n\nconst AddRatingsModal = ({\n  code,\n  modId,\n  ratingsByUser,\n  isModalVisible,\n  setModalVisibility,\n  updateModule\n}) => {\n  var _ratingsByUser$value;\n\n  const userId = useSelector(state => {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  const {\n    0: ratings,\n    1: setRatings\n  } = useState((_ratingsByUser$value = ratingsByUser === null || ratingsByUser === void 0 ? void 0 : ratingsByUser.value) !== null && _ratingsByUser$value !== void 0 ? _ratingsByUser$value : 3);\n  const {\n    0: submitText,\n    1: setSubmitText\n  } = useState(\"Submit\");\n  const {\n    0: submitColor,\n    1: setSubmitColor\n  } = useState(submitBlue);\n  useEffect(() => {\n    var _ratingsByUser$value2;\n\n    setRatings((_ratingsByUser$value2 = ratingsByUser === null || ratingsByUser === void 0 ? void 0 : ratingsByUser.value) !== null && _ratingsByUser$value2 !== void 0 ? _ratingsByUser$value2 : 0);\n  }, [ratingsByUser]);\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      setSubmitText(\"You did not rate the module. Once done click this button!\");\n      setSubmitColor(crossRed);\n      return;\n    }\n\n    if (ratingsByUser) {\n      await reviewApi.updateRating(ratings, \"star\", userId, modId, \"mod\", ratingsByUser._id);\n    } else {\n      await reviewApi.addRating(ratings, \"star\", userId, modId, \"mod\");\n    }\n\n    updateModule();\n    setModalVisibility(false);\n  };\n\n  const validateForm = () => ratings !== 0;\n\n  const closeModal = isToClose => {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: reviewBlue,\n    submitColor: submitColor,\n    title: \"Rate the Module\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: closeModal,\n    onSubmit: onSubmit,\n    submitText: submitText\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"text\",\n    value: code\n  }), __jsx(FormModalItem, {\n    label: \"Ratings\",\n    type: \"rate\",\n    value: ratings,\n    setValue: setRatings\n  }));\n};\n\nexport default AddRatingsModal;","map":null,"metadata":{},"sourceType":"module"}