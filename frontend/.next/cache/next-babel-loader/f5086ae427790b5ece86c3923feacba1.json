{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\nvar baseUrl = \"\".concat(serverDomain, \"/api/mod\");\n\nvar getModule = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(baseUrl, \"/\").concat(id));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getModule(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar searchModule = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(searchTerm) {\n    var limit,\n        page,\n        query,\n        response,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            limit = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 10;\n            page = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 1;\n            query = {\n              searchTerm: searchTerm,\n              page: page,\n              limit: limit\n            };\n            _context2.next = 5;\n            return axios.get(\"\".concat(baseUrl, \"?\").concat(queryString.stringify(query)));\n\n          case 5:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function searchModule(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar addModule = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(module) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.post(baseUrl, module, {\n              withCredentials: true\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function addModule(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getModule: getModule,\n  searchModule: searchModule,\n  addModule: addModule\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/module.ts"],"names":["axios","queryString","serverDomain","baseUrl","getModule","id","get","response","data","searchModule","searchTerm","limit","page","query","stringify","addModule","module","post","withCredentials"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,IAAMC,OAAO,aAAMD,YAAN,aAAb;;AAEA,IAAME,SAAS;AAAA,sEAAG,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOL,KAAK,CAACM,GAAN,WAAaH,OAAb,cAAwBE,EAAxB,EADP;;AAAA;AACVE,YAAAA,QADU;AAAA,6CAETA,QAAQ,CAACC,IAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATJ,SAAS;AAAA;AAAA;AAAA,GAAf;;AAKA,IAAMK,YAAY;AAAA,uEAAG,kBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmBC,YAAAA,KAAnB,8DAA2B,EAA3B;AAA+BC,YAAAA,IAA/B,8DAAsC,CAAtC;AACbC,YAAAA,KADa,GACL;AACZH,cAAAA,UAAU,EAAVA,UADY;AAEZE,cAAAA,IAAI,EAAJA,IAFY;AAGZD,cAAAA,KAAK,EAALA;AAHY,aADK;AAAA;AAAA,mBAOIX,KAAK,CAACM,GAAN,WAClBH,OADkB,cACPF,WAAW,CAACa,SAAZ,CAAsBD,KAAtB,CADO,EAPJ;;AAAA;AAObN,YAAAA,QAPa;AAAA,8CAUZA,QAAQ,CAACC,IAVG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZC,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAwBA,IAAMM,SAAS;AAAA,uEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACVhB,KAAK,CAACiB,IAAN,CAAWd,OAAX,EAAoBa,MAApB,EAA4B;AAAEE,cAAAA,eAAe,EAAE;AAAnB,aAA5B,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATH,SAAS;AAAA;AAAA;AAAA,GAAf;;AAIA,eAAe;AAAEX,EAAAA,SAAS,EAATA,SAAF;AAAaK,EAAAA,YAAY,EAAZA,YAAb;AAA2BM,EAAAA,SAAS,EAATA;AAA3B,CAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\n\nconst baseUrl = `${serverDomain}/api/mod`;\n\nconst getModule = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`);\n  return response.data;\n};\n\nconst searchModule = async (searchTerm, limit = 10, page = 1) => {\n  const query = {\n    searchTerm,\n    page,\n    limit,\n  };\n\n  const response = await axios.get(\n    `${baseUrl}?${queryString.stringify(query)}`\n  );\n  return response.data;\n};\n\ninterface NewModule {\n  code: string;\n  title: string;\n  schoolId: string;\n  semester: number[];\n  description: string;\n  credit: number;\n  workload: number;\n  prereqs: string[];\n}\n\nconst addModule = async (module: NewModule) => {\n  await axios.post(baseUrl, module, { withCredentials: true });\n};\n\nexport default { getModule, searchModule, addModule };\n"]},"metadata":{},"sourceType":"module"}