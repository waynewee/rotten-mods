{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/ModuleMetaComparison.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector } from \"react-redux\";\nimport MetaCompareRow from \"./MetaCompareRow\";\n\nconst ModuleMetaComparison = ({\n  firstModule,\n  secondModule\n}) => {\n  var _schools$find, _firstRatings$difficu, _firstRatings$star, _schools$find2, _secondRatings$diffic, _secondRatings$star;\n\n  const schools = useSelector(state => state.schools);\n  const {\n    workload: firstModuleHours = 10,\n    rating: firstRatings,\n    schoolId: firstSchoolId,\n    semester: firstSemester,\n    credit: firstCredit = 4\n  } = firstModule;\n  const {\n    workload: secondModuleHours = 10,\n    rating: secondRatings,\n    schoolId: secondSchoolId,\n    semester: secondSemester,\n    credit: secondCredit = 4\n  } = secondModule;\n  const firstUniversity = (_schools$find = schools.find(school => school._id === firstSchoolId)) === null || _schools$find === void 0 ? void 0 : _schools$find.name;\n  const firstDifficulty = (firstRatings === null || firstRatings === void 0 ? void 0 : (_firstRatings$difficu = firstRatings.difficulty) === null || _firstRatings$difficu === void 0 ? void 0 : _firstRatings$difficu.value) || 3;\n  const firstStar = (firstRatings === null || firstRatings === void 0 ? void 0 : (_firstRatings$star = firstRatings.star) === null || _firstRatings$star === void 0 ? void 0 : _firstRatings$star.value) || 3;\n  const secondUniversity = (_schools$find2 = schools.find(school => school._id === secondSchoolId)) === null || _schools$find2 === void 0 ? void 0 : _schools$find2.name;\n  const secondDifficulty = (secondRatings === null || secondRatings === void 0 ? void 0 : (_secondRatings$diffic = secondRatings.difficulty) === null || _secondRatings$diffic === void 0 ? void 0 : _secondRatings$diffic.value) || 3;\n  const secondStar = (secondRatings === null || secondRatings === void 0 ? void 0 : (_secondRatings$star = secondRatings.star) === null || _secondRatings$star === void 0 ? void 0 : _secondRatings$star.value) || 3;\n  return __jsx(React.Fragment, null, __jsx(MetaCompareRow, {\n    title: \"Expected Workload/Week\",\n    firstMeta: `${firstModuleHours}`,\n    secondMeta: `${secondModuleHours}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), __jsx(MetaCompareRow, {\n    title: \"Difficulty\",\n    firstMeta: `${firstDifficulty.toFixed(1)}/5`,\n    secondMeta: `${secondDifficulty.toFixed(1)}/5`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(MetaCompareRow, {\n    title: \"Ratings\",\n    firstMeta: `${firstStar.toFixed(1)}`,\n    secondMeta: `${secondStar.toFixed(1)}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(MetaCompareRow, {\n    title: \"Semester(s) offered\",\n    firstMeta: `${firstSemester.sort().join(\", \")}`,\n    secondMeta: `${secondSemester.sort().join(\", \")}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(MetaCompareRow, {\n    title: \"Credits\",\n    firstMeta: `${firstCredit}`,\n    secondMeta: `${secondCredit}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), __jsx(MetaCompareRow, {\n    title: \"University\",\n    firstMeta: firstUniversity,\n    secondMeta: secondUniversity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(MetaCompareRow, {\n    title: \"Reviews\",\n    firstMeta: \"\",\n    secondMeta: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ModuleMetaComparison;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/ModuleMetaComparison.tsx"],"names":["useSelector","MetaCompareRow","ModuleMetaComparison","firstModule","secondModule","schools","state","workload","firstModuleHours","rating","firstRatings","schoolId","firstSchoolId","semester","firstSemester","credit","firstCredit","secondModuleHours","secondRatings","secondSchoolId","secondSemester","secondCredit","firstUniversity","find","school","_id","name","firstDifficulty","difficulty","value","firstStar","star","secondUniversity","secondDifficulty","secondStar","toFixed","sort","join"],"mappings":"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","sourcesContent":["import { Module } from \"../types\";\nimport { useSelector } from \"react-redux\";\n\nimport MetaCompareRow from \"./MetaCompareRow\";\n\ninterface ModuleMetaComparisonProps {\n  firstModule: Module;\n  secondModule: Module;\n}\n\nconst ModuleMetaComparison: React.FC<ModuleMetaComparisonProps> = ({\n  firstModule,\n  secondModule,\n}) => {\n  const schools = useSelector((state) => state.schools);\n\n  const {\n    workload: firstModuleHours = 10,\n    rating: firstRatings,\n    schoolId: firstSchoolId,\n    semester: firstSemester,\n    credit: firstCredit = 4,\n  } = firstModule;\n\n  const {\n    workload: secondModuleHours = 10,\n    rating: secondRatings,\n    schoolId: secondSchoolId,\n    semester: secondSemester,\n    credit: secondCredit = 4,\n  } = secondModule;\n\n  const firstUniversity = schools.find(\n    (school) => school._id === firstSchoolId\n  )?.name;\n  const firstDifficulty = firstRatings?.difficulty?.value || 3;\n  const firstStar = firstRatings?.star?.value || 3;\n  const secondUniversity = schools.find(\n    (school) => school._id === secondSchoolId\n  )?.name;\n  const secondDifficulty = secondRatings?.difficulty?.value || 3;\n  const secondStar = secondRatings?.star?.value || 3;\n\n  return (\n    <>\n      <MetaCompareRow\n        title=\"Expected Workload/Week\"\n        firstMeta={`${firstModuleHours}`}\n        secondMeta={`${secondModuleHours}`}\n      />\n      <MetaCompareRow\n        title=\"Difficulty\"\n        firstMeta={`${firstDifficulty.toFixed(1)}/5`}\n        secondMeta={`${secondDifficulty.toFixed(1)}/5`}\n      />\n      <MetaCompareRow\n        title=\"Ratings\"\n        firstMeta={`${firstStar.toFixed(1)}`}\n        secondMeta={`${secondStar.toFixed(1)}`}\n      />\n      <MetaCompareRow\n        title=\"Semester(s) offered\"\n        firstMeta={`${firstSemester.sort().join(\", \")}`}\n        secondMeta={`${secondSemester.sort().join(\", \")}`}\n      />\n      <MetaCompareRow\n        title=\"Credits\"\n        firstMeta={`${firstCredit}`}\n        secondMeta={`${secondCredit}`}\n      />\n      <MetaCompareRow\n        title=\"University\"\n        firstMeta={firstUniversity}\n        secondMeta={secondUniversity}\n      />\n      <MetaCompareRow title=\"Reviews\" firstMeta={\"\"} secondMeta={\"\"} />\n    </>\n  );\n};\n\nexport default ModuleMetaComparison;\n"]},"metadata":{},"sourceType":"module"}