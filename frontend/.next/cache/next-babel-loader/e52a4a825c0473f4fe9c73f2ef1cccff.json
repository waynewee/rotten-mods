{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Modal, Button, Form, Input, Divider, Select } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, CalendarOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\n\nvar SignupModal = function SignupModal(toggles) {\n  _s();\n\n  var _useState = useState([\"NUS\", \"SMU\"]),\n      inputUniversityValues = _useState[0],\n      setUniversityInputValues = _useState[1];\n\n  var _useState2 = useState([\"Computer Science\"]),\n      inputCourseValues = _useState2[0],\n      setCourseInputValues = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      universityName = _useState3[0],\n      setUniversityName = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      courseName = _useState4[0],\n      setCourseName = _useState4[1];\n\n  var onFormFinish = function onFormFinish(signUpValues) {\n    console.log(signUpValues); // axios({\n    //     method: 'put',\n    //     url: '/user',\n    //     baseURL: 'http://localhost:8080/api',\n    //     params : {\n    //         email : signUpValues.emailaddress,\n    //         password: signUpValues.userpassword,\n    //         name: signUpValues.fullname,\n    //         schoolId: signUpValues.university,\n    //         courseId: signUpValues.course,\n    //         yearOfStudy: signUpValues.yearofstudy\n    //     }\n    // }).then(function(response) {\n    //     console.log(response);\n    // }).catch(function(error) {\n    //     console.log(error);\n    // })\n  };\n\n  var onUniversityChange = function onUniversityChange(event) {\n    setUniversityName(event.target.value);\n  };\n\n  var onCourseChange = function onCourseChange(event) {\n    setCourseName(event.target.value);\n  };\n\n  var addUniversityItem = function addUniversityItem() {\n    console.log('adduniItem');\n    setUniversityName(\"\");\n\n    if (universityName.trim() !== \"\" && !inputUniversityValues.includes(universityName)) {\n      setUniversityInputValues([].concat(_toConsumableArray(inputUniversityValues), [universityName.trim()]));\n    }\n  };\n\n  var addCourseItem = function addCourseItem() {\n    console.log('adduniItem');\n    setUniversityName(\"\");\n\n    if (universityName.trim() !== \"\" && !inputCourseValues.includes(courseName)) {\n      setCourseInputValues([].concat(_toConsumableArray(inputCourseValues), [courseName.trim()]));\n    }\n  };\n\n  function renderAddition(addition) {\n    return addition == \"university\" ? __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      style: {\n        flex: 'auto'\n      },\n      value: name,\n      onChange: onUniversityChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), __jsx(\"a\", {\n      style: {\n        flex: 'none',\n        padding: '8px',\n        display: 'block',\n        cursor: 'pointer'\n      },\n      onClick: addUniversityItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"ADD ITEM\")) : __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, __jsx(Input, {\n      style: {\n        flex: 'auto'\n      },\n      value: name,\n      onChange: onCourseChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), __jsx(\"a\", {\n      style: {\n        flex: 'none',\n        padding: '8px',\n        display: 'block',\n        cursor: 'pointer'\n      },\n      onClick: addCourseItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"ADD\"));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    visible: true,\n    title: __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, \" SIGNUP \"),\n    centered: true,\n    onCancel: toggles.toggles.toggleSignupModal,\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    name: \"normal_signup\",\n    className: \"signup-form\",\n    initialValues: {},\n    onFinish: onFormFinish,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Item, {\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: 'Please enter your full name!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 40\n      }\n    }),\n    placeholder: \"Full Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Item, {\n    name: \"emailaddress\",\n    rules: [{\n      required: true,\n      message: 'Please enter an email address!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }),\n    placeholder: \"Email Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Item, {\n    name: \"userpassword\",\n    rules: [{\n      required: true,\n      message: 'Please enter a password!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Item, {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Item, {\n    name: \"yearofstudy\",\n    rules: [{\n      required: true,\n      message: 'Please enter your Year of Study!'\n    }],\n    style: {\n      display: 'inline-block',\n      width: 'calc(50% - 8px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(CalendarOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 44\n      }\n    }),\n    placeholder: \"Year Of Study\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  })), __jsx(Form.Item, {\n    name: \"university\",\n    rules: [{\n      required: true,\n      message: 'Please enter your University!'\n    }],\n    style: {\n      display: 'inline-block',\n      width: 'calc(50% - 8px)',\n      margin: '0 8px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"University\",\n    dropdownRender: function dropdownRender(menu) {\n      return __jsx(React.Fragment, null, menu, __jsx(Divider, {\n        style: {\n          margin: '4px 0'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 41\n        }\n      }), renderAddition(\"university\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, inputUniversityValues.map(function (item) {\n    return __jsx(Select.Option, {\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, item);\n  })))), __jsx(Form.Item, {\n    name: \"course\",\n    rules: [{\n      required: true,\n      message: 'Please enter the name of the course you are enrolled in!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Course Of Study\",\n    dropdownRender: function dropdownRender(menu) {\n      return __jsx(React.Fragment, null, menu, __jsx(Divider, {\n        style: {\n          margin: '4px 0'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 41\n        }\n      }), renderAddition(\"course\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 26\n    }\n  }, inputCourseValues.map(function (item) {\n    return __jsx(Select.Option, {\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }\n    }, item);\n  }))), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, \"SIGN UP\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Already have an account? Log in \", __jsx(\"a\", {\n    onClick: function onClick() {\n      return toggles.toggles.switchModals();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 53\n    }\n  }, \" here\"))));\n};\n\n_s(SignupModal, \"N0Pwd280JOnR1jCcdY5BHFPqnEg=\");\n\n_c = SignupModal;\nvar styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\"\n  }\n};\nexport default SignupModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupModal\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx"],"names":["Modal","Button","Form","Input","Divider","Select","UserOutlined","LockOutlined","MailOutlined","CalendarOutlined","useState","SignupModal","toggles","inputUniversityValues","setUniversityInputValues","inputCourseValues","setCourseInputValues","universityName","setUniversityName","courseName","setCourseName","onFormFinish","signUpValues","console","log","onUniversityChange","event","target","value","onCourseChange","addUniversityItem","trim","includes","addCourseItem","renderAddition","addition","display","flexWrap","padding","flex","name","cursor","textAlign","toggleSignupModal","required","message","marginBottom","width","margin","menu","map","item","styles","loginFormButton","switchModals","backgroundColor"],"mappings":"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","sourcesContent":["\nimport { Modal, Button, Form, Input, Divider, Select, ConfigProvider } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, LaptopOutlined, CalendarOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useState } from 'react';\n\nimport axios from 'axios';\n\n\n\n\ninterface SignupModalProps {\n    toggles: {\n        toggleSignupModal: () => void;\n        switchModals: () => void;\n    }\n}\n\nconst SignupModal: React.FC<SignupModalProps> = (toggles) => {\n\n    const [inputUniversityValues, setUniversityInputValues] = useState([\"NUS\", \"SMU\"]);\n    const [inputCourseValues, setCourseInputValues] = useState([\"Computer Science\"]);\n    const [universityName, setUniversityName] = useState(\"\");\n    const [courseName, setCourseName] = useState(\"\");\n\n\n    const onFormFinish = signUpValues => {\n        console.log(signUpValues);\n        // axios({\n        //     method: 'put',\n        //     url: '/user',\n        //     baseURL: 'http://localhost:8080/api',\n        //     params : {\n        //         email : signUpValues.emailaddress,\n        //         password: signUpValues.userpassword,\n        //         name: signUpValues.fullname,\n        //         schoolId: signUpValues.university,\n        //         courseId: signUpValues.course,\n        //         yearOfStudy: signUpValues.yearofstudy\n        //     }\n        // }).then(function(response) {\n        //     console.log(response);\n        // }).catch(function(error) {\n        //     console.log(error);\n        // })\n\n    }\n\n    const onUniversityChange = event => {\n        setUniversityName(event.target.value);\n    };\n\n    const onCourseChange = event => {\n        setCourseName(event.target.value);\n    };\n\n    const addUniversityItem = () => {\n        console.log('adduniItem');\n        setUniversityName(\"\");\n        if (universityName.trim() !== \"\" && !inputUniversityValues.includes(universityName)) {\n            setUniversityInputValues([...inputUniversityValues, universityName.trim()]);\n        }   \n    };\n\n    const addCourseItem = () => {\n        console.log('adduniItem');\n        setUniversityName(\"\");\n        if (universityName.trim() !== \"\" && !inputCourseValues.includes(courseName)) {\n            setCourseInputValues([...inputCourseValues, courseName.trim()]);\n        }   \n    };\n\n    function renderAddition(addition)  {\n        return (\n            addition == \"university\" \n                ? <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n                <Input style={{ flex: 'auto' }} value={name} onChange={onUniversityChange} />\n                <a\n                    style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                    onClick={addUniversityItem}\n                >\n                    ADD ITEM\n                </a>\n            </div>\n            \n            : <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n            <Input style={{ flex: 'auto' }} value={name} onChange={onCourseChange} />\n            <a\n                style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n                onClick={addCourseItem}\n            >\n                ADD\n            </a>\n        </div>\n    \n        );\n    \n    }\n\n\n    return (\n        <>\n\n            <Modal\n                visible={true}\n                title={\n                    <div style={{ textAlign: \"center\" }}> SIGNUP </div>\n                }\n                centered\n                onCancel={toggles.toggles.toggleSignupModal}\n                footer={null}>\n                <Form\n                    name=\"normal_signup\"\n                    className=\"signup-form\"\n                    initialValues={{}}\n                    onFinish={onFormFinish}>\n                    <Form.Item\n                        name=\"fullname\"\n                        rules={[{ required: true, message: 'Please enter your full name!' }]}\n                    >\n                        <Input prefix={<UserOutlined />} placeholder=\"Full Name\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"emailaddress\"\n                        rules={[{ required: true, message: 'Please enter an email address!' }]}\n                    >\n                        <Input\n                            prefix={<MailOutlined />} placeholder=\"Email Address\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"userpassword\"\n                        rules={[{ required: true, message: 'Please enter a password!' }]}\n                    >\n                        <Input\n                            prefix={<LockOutlined />}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Form.Item\n                            name=\"yearofstudy\"\n                            rules={[{ required: true, message: 'Please enter your Year of Study!' }]}\n                            style={{ display: 'inline-block', width: 'calc(50% - 8px)' }}\n                        >\n                            <Input prefix={<CalendarOutlined />} placeholder=\"Year Of Study\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"university\"\n                            rules={[{ required: true, message: 'Please enter your University!' }]}\n                            style={{ display: 'inline-block', width: 'calc(50% - 8px)', margin: '0 8px' }}\n                        >\n                            <Select\n                                style={{ width: \"100%\" }}\n                                placeholder=\"University\"\n                                dropdownRender={menu => (\n                                    <>\n                                        {menu}\n                                        <Divider style={{ margin: '4px 0' }} />\n                                        {renderAddition(\"university\")}\n                                    </>\n                                )}\n                            >\n                                {inputUniversityValues.map(item => (\n                                    <Select.Option value={item}>{item}</Select.Option>\n                                ))}\n                            </Select>\n\n                        </Form.Item>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"course\"\n                        rules={[{ required: true, message: 'Please enter the name of the course you are enrolled in!' }]}\n                    >\n                         <Select\n                                style={{ width: \"100%\" }}\n                                placeholder=\"Course Of Study\"\n                                dropdownRender={menu => (\n                                    <>\n                                        {menu}\n                                        <Divider style={{ margin: '4px 0' }} />\n                                        {renderAddition(\"course\")}\n                                    </>\n                                )}\n                            >\n                                {inputCourseValues.map(item => (\n                                    <Select.Option value={item}>{item}</Select.Option>\n                                ))}\n                            </Select>\n\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" style={styles.loginFormButton}>SIGN UP</Button>\n                    </Form.Item>\n\n\n                </Form>\n                <Divider />\n                <div style={{ textAlign: \"center\" }}>\n                    Already have an account? Log in <a onClick={() => toggles.toggles.switchModals()}> here</a>\n                </div>\n\n            </Modal>\n        </>\n    );\n\n\n};\n\nconst styles = {\n    loginFormButton: {\n        width: \"100%\",\n        backgroundColor: \"#2D538C\",\n    }\n}\n\n\nexport default SignupModal;"]},"metadata":{},"sourceType":"module"}