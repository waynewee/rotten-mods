{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\nvar baseUrl = \"\".concat(serverDomain, \"/api/reaction\");\n\nvar addReaction = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sub, subId, userId, type) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(baseUrl, {\n              sub: sub,\n              subId: subId,\n              userId: userId,\n              type: type\n            }, {\n              withCredentials: true\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addReaction(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getReaction = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(sub, subId, userId, type) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = queryString.stringify({\n              sub: sub,\n              subId: subId,\n              userId: userId,\n              type: type\n            });\n            _context2.next = 3;\n            return axios.get(\"\".concat(baseUrl, \"/?\").concat(query));\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getReaction(_x5, _x6, _x7, _x8) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar deleteReaction = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(reactionId) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios[\"delete\"](\"\".concat(baseUrl, \"/\").concat(reactionId));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteReaction(_x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  addReaction: addReaction,\n  getReaction: getReaction,\n  deleteReaction: deleteReaction\n};","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/api/reaction.ts"],"names":["axios","queryString","serverDomain","baseUrl","addReaction","sub","subId","userId","type","post","withCredentials","getReaction","query","stringify","get","response","data","deleteReaction","reactionId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAGA,IAAMC,OAAO,aAAMD,YAAN,kBAAb;;AAEA,IAAME,WAAW;AAAA,sEAAG,iBAClBC,GADkB,EAElBC,KAFkB,EAGlBC,MAHkB,EAIlBC,IAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMZR,KAAK,CAACS,IAAN,CACJN,OADI,EAEJ;AACEE,cAAAA,GAAG,EAAHA,GADF;AAEEC,cAAAA,KAAK,EAALA,KAFF;AAGEC,cAAAA,MAAM,EAANA,MAHF;AAIEC,cAAAA,IAAI,EAAJA;AAJF,aAFI,EAQJ;AACEE,cAAAA,eAAe,EAAE;AADnB,aARI,CANY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXN,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAoBA,IAAMO,WAAW;AAAA,uEAAG,kBAClBN,GADkB,EAElBC,KAFkB,EAGlBC,MAHkB,EAIlBC,IAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAMZI,YAAAA,KANY,GAMJX,WAAW,CAACY,SAAZ,CAAsB;AAClCR,cAAAA,GAAG,EAAHA,GADkC;AAElCC,cAAAA,KAAK,EAALA,KAFkC;AAGlCC,cAAAA,MAAM,EAANA,MAHkC;AAIlCC,cAAAA,IAAI,EAAJA;AAJkC,aAAtB,CANI;AAAA;AAAA,mBAYKR,KAAK,CAACc,GAAN,WAAuBX,OAAvB,eAAmCS,KAAnC,EAZL;;AAAA;AAYZG,YAAAA,QAZY;AAAA,8CAaXA,QAAQ,CAACC,IAbE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAgBA,IAAMM,cAAc;AAAA,uEAAG,kBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACflB,KAAK,UAAL,WAAgBG,OAAhB,cAA2Be,UAA3B,EADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdD,cAAc;AAAA;AAAA;AAAA,GAApB;;AAIA,eAAe;AACbb,EAAAA,WAAW,EAAXA,WADa;AAEbO,EAAAA,WAAW,EAAXA,WAFa;AAGbM,EAAAA,cAAc,EAAdA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\nimport { Reaction } from \"../types\";\n\nconst baseUrl = `${serverDomain}/api/reaction`;\n\nconst addReaction = async (\n  sub: string,\n  subId: string,\n  userId: string,\n  type: string\n): Promise<void> => {\n  await axios.post(\n    baseUrl,\n    {\n      sub,\n      subId,\n      userId,\n      type,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n};\n\nconst getReaction = async (\n  sub: string,\n  subId: string,\n  userId: string,\n  type: string\n): Promise<Reaction> => {\n  const query = queryString.stringify({\n    sub,\n    subId,\n    userId,\n    type,\n  });\n  const response = await axios.get<Reaction>(`${baseUrl}/?${query}`);\n  return response.data;\n};\n\nconst deleteReaction = async (reactionId: string): Promise<void> => {\n  await axios.delete(`${baseUrl}/${reactionId}`);\n};\n\nexport default {\n  addReaction,\n  getReaction,\n  deleteReaction,\n};\n"]},"metadata":{},"sourceType":"module"}