{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from \"antd\";\nimport \"../styles/antd.less\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { reviewBlue } from \"../styles/colors\";\nimport CustomButton from \"./Button\";\nimport authService from '../services/authentication';\nimport { useDispatch } from \"react-redux\";\n\nvar ProfileButton = function ProfileButton() {\n  _s();\n\n  var _useState = useState(false),\n      loginModalVisible = _useState[0],\n      setLoginModalVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      signupModalVisible = _useState2[0],\n      setSignupModalVisible = _useState2[1];\n\n  var isLoggedIn = useSelector(function (state) {\n    return state.auth.isLoggedIn;\n  });\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  var router = useRouter();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    isLoggedIn ? setLoginModalVisible(false) : null; // console.log(\"the user is \");\n    // console.log(user);\n  });\n\n  var toggleLoginModal = function toggleLoginModal() {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  var toggleSignupModal = function toggleSignupModal() {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  var switchModals = function switchModals() {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  var navigateToProfilePage = function navigateToProfilePage() {\n    router.push({\n      pathname: \"/profile\"\n    });\n  }; // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n\n\n  return __jsx(React.Fragment, null, isLoggedIn ? __jsx(React.Fragment, null, __jsx(CustomButton, {\n    style: styles.container,\n    onClick: navigateToProfilePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, user.fullName), __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return authService.logOut(dispatch);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Logout\")) : __jsx(Button, {\n    type: \"primary\",\n    onClick: toggleLoginModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Log In\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal: toggleLoginModal,\n      switchModals: switchModals\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 43\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal: toggleSignupModal,\n      switchModals: switchModals\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }) : null);\n};\n\n_s(ProfileButton, \"IvtxjI0U1P+Ejmql0w+rHXr+7+U=\", false, function () {\n  return [useSelector, useSelector, useRouter, useDispatch];\n});\n\n_c = ProfileButton;\nvar styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 10,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8\n  },\n  userName: {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15\n  }\n};\nexport default ProfileButton;\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n  // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButton\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["Button","useSelector","useRouter","useEffect","useState","LoginModal","SignupModal","reviewBlue","CustomButton","authService","useDispatch","ProfileButton","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","isLoggedIn","state","auth","user","router","dispatch","toggleLoginModal","toggleSignupModal","switchModals","navigateToProfilePage","push","pathname","styles","container","fullName","logOut","display","alignItems","margin","padding","backgroundColor","color","borderRadius","userName","paddingLeft","fontSize"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAO,qBAAP;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,YAAP,MAAyB,UAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,IAAMC,aAAuB,GAAG,SAA1BA,aAA0B,GAAM;AAAA;;AAAA,kBACcP,QAAQ,CAAC,KAAD,CADtB;AAAA,MAC7BQ,iBAD6B;AAAA,MACVC,oBADU;;AAAA,mBAEgBT,QAAQ,CAAC,KAAD,CAFxB;AAAA,MAE7BU,kBAF6B;AAAA,MAETC,qBAFS;;AAGpC,MAAMC,UAAmB,GAAGf,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWF,UAAf;AAAA,GAAN,CAAvC;AACA,MAAMG,IAAU,GAAGlB,WAAW,CAAC,UAAAgB,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,IAAf;AAAA,GAAN,CAA9B;AAEA,MAAMC,MAAM,GAAGlB,SAAS,EAAxB;AACA,MAAMmB,QAAQ,GAAGX,WAAW,EAA5B;AAGAP,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,UAAU,GAAGH,oBAAoB,CAAC,KAAD,CAAvB,GAAiC,IAA3C,CADc,CAEd;AACA;AACD,GAJQ,CAAT;;AAMA,MAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BT,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAFD;;AAIA,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BR,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACD,GAFD;;AAIA,MAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBT,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACAD,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAHD;;AAKA,MAAMa,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCL,IAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,MAAAA,QAAQ,EAAE;AADA,KAAZ;AAGD,GAJD,CA7BoC,CAqCpC;;;AACA,SACE,4BAEIX,UAAU,GACN,4BACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEY,MAAM,CAACC,SAA5B;AAAuC,IAAA,OAAO,EAAEJ,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACW,QADR,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAKrB,WAAW,CAACsB,MAAZ,CAAmBV,QAAnB,CAAL;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADM,GAUN,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZR,EAiBGV,iBAAiB,IAAI,CAACI,UAAtB,GAAmC,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAEM,MAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBE,MAAAA,YAAY,EAAZA;AAApB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,GAAiG,IAjBpG,EAkBGV,kBAAkB,GAAG,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAES,MAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBC,MAAAA,YAAY,EAAZA;AAArB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmE,IAlBxF,CADF;AAuBD,CA7DD;;GAAMb,a;UAGwBV,W,EACTA,W,EAEJC,S,EACEQ,W;;;KAPbC,a;AA+DN,IAAMiB,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTG,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,MAAM,EAAE,UAHC;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,eAAe,EAAE7B,UALR;AAMT8B,IAAAA,KAAK,EAAE,MANE;AAOTC,IAAAA,YAAY,EAAE;AAPL,GADE;AAUbC,EAAAA,QAAQ,EAAE;AACRN,IAAAA,UAAU,EAAE,UADJ;AAERO,IAAAA,WAAW,EAAE,MAFL;AAGRN,IAAAA,MAAM,EAAE,CAHA;AAIRO,IAAAA,QAAQ,EAAE;AAJF;AAVG,CAAf;AAkBA,eAAe9B,aAAf;AAEA;AACE;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD","sourcesContent":["import { Button } from \"antd\";\nimport \"../styles/antd.less\";\n\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\n\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { reviewBlue } from \"../styles/colors\";\nimport { User } from \"../types\";\nimport CustomButton from \"./Button\";\nimport authService from '../services/authentication';\nimport { useDispatch } from \"react-redux\";\n\n\n\nconst ProfileButton: React.FC = () => {\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const [signupModalVisible, setSignupModalVisible] = useState(false);\n  const isLoggedIn: boolean = useSelector(state => state.auth.isLoggedIn);\n  const user: User = useSelector(state => state.auth.user);\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n    // console.log(\"the user is \");\n    // console.log(user);\n  })\n\n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  }\n\n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  }\n\n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }\n\n  const navigateToProfilePage = () => {\n    router.push({\n      pathname: \"/profile\",\n    })\n  }\n\n\n  \n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <>\n              <CustomButton style={styles.container} onClick={navigateToProfilePage}>\n                {user.fullName}\n              </CustomButton>\n              <Button type=\"primary\" onClick={() =>authService.logOut(dispatch)}>\n                Logout\n              </Button>\n            </>\n        \n          : <Button type=\"primary\" onClick={toggleLoginModal}>\n            Log In\n          </Button>\n      }\n\n      {loginModalVisible && !isLoggedIn ? <LoginModal toggles={{ toggleLoginModal, switchModals }} /> : null}\n      {signupModalVisible ? <SignupModal toggles={{ toggleSignupModal, switchModals }} /> : null}\n    </>\n\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 10,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8\n  },\n  userName: {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15\n  }\n}\n\nexport default ProfileButton;\n\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n  // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n}\n"]},"metadata":{},"sourceType":"module"}