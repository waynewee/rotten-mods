{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar reviewBaseUrl = \"http://localhost:8080/api/review\";\nvar ratingBaseUrl = \"http://localhost:8080/api/rating\";\n\nvar getReviewsOfModule = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(reviewBaseUrl, \"/mod/\").concat(modId));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getReviewsOfModule(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar addReviewOfModule = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(review, modId, userId) {\n    var text, semesterTaken, acadYearTaken, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            text = review.text, semesterTaken = review.semesterTaken, acadYearTaken = review.acadYearTaken;\n            _context2.next = 3;\n            return axios.post(reviewBaseUrl, {\n              text: text,\n              modId: modId,\n              userId: userId,\n              semesterTaken: semesterTaken,\n              acadYearTaken: acadYearTaken // workload,\n\n            }, {\n              withCredentials: true\n            });\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.status);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addReviewOfModule(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar addRatingOfModule = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value, type, userId, subId, sub) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.post(ratingBaseUrl, {\n              type: type,\n              userId: userId,\n              subId: subId,\n              value: value,\n              sub: sub\n            }, {\n              withCredentials: true\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.status);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function addRatingOfModule(_x5, _x6, _x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getReviewsOfModule: getReviewsOfModule,\n  addReviewOfModule: addReviewOfModule,\n  addRatingOfModule: addRatingOfModule\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/review.ts"],"names":["axios","reviewBaseUrl","ratingBaseUrl","getReviewsOfModule","modId","get","response","data","addReviewOfModule","review","userId","text","semesterTaken","acadYearTaken","post","withCredentials","status","addRatingOfModule","value","type","subId","sub"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,aAAa,GAAG,kCAAtB;;AASA,IAAMC,kBAAkB;AAAA,sEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFJ,KAAK,CAACK,GAAN,WAAaJ,aAAb,kBAAkCG,KAAlC,EADE;;AAAA;AACnBE,YAAAA,QADmB;AAAA,6CAElBA,QAAQ,CAACC,IAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBJ,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAKA,IAAMK,iBAAiB;AAAA,uEAAG,kBACxBC,MADwB,EAExBL,KAFwB,EAGxBM,MAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhBC,YAAAA,IALgB,GAKuBF,MALvB,CAKhBE,IALgB,EAKVC,aALU,GAKuBH,MALvB,CAKVG,aALU,EAKKC,aALL,GAKuBJ,MALvB,CAKKI,aALL;AAAA;AAAA,mBAMDb,KAAK,CAACc,IAAN,CACrBb,aADqB,EAErB;AACEU,cAAAA,IAAI,EAAJA,IADF;AAEEP,cAAAA,KAAK,EAALA,KAFF;AAGEM,cAAAA,MAAM,EAANA,MAHF;AAIEE,cAAAA,aAAa,EAAbA,aAJF;AAKEC,cAAAA,aAAa,EAAbA,aALF,CAME;;AANF,aAFqB,EAUrB;AACEE,cAAAA,eAAe,EAAE;AADnB,aAVqB,CANC;;AAAA;AAMlBT,YAAAA,QANkB;AAAA,8CAqBjBA,QAAQ,CAACU,MArBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBR,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAwBA,IAAMS,iBAAiB;AAAA,uEAAG,kBACxBC,KADwB,EAExBC,IAFwB,EAGxBT,MAHwB,EAIxBU,KAJwB,EAKxBC,GALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAODrB,KAAK,CAACc,IAAN,CACrBZ,aADqB,EAErB;AACEiB,cAAAA,IAAI,EAAJA,IADF;AAEET,cAAAA,MAAM,EAANA,MAFF;AAGEU,cAAAA,KAAK,EAALA,KAHF;AAIEF,cAAAA,KAAK,EAALA,KAJF;AAKEG,cAAAA,GAAG,EAAHA;AALF,aAFqB,EASrB;AACEN,cAAAA,eAAe,EAAE;AADnB,aATqB,CAPC;;AAAA;AAOlBT,YAAAA,QAPkB;AAAA,8CAqBjBA,QAAQ,CAACU,MArBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBC,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAwBA,eAAe;AACbd,EAAAA,kBAAkB,EAAlBA,kBADa;AAEbK,EAAAA,iBAAiB,EAAjBA,iBAFa;AAGbS,EAAAA,iBAAiB,EAAjBA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nimport { Review } from \"../types\";\n\nconst reviewBaseUrl = \"http://localhost:8080/api/review\";\nconst ratingBaseUrl = \"http://localhost:8080/api/rating\";\n\ninterface ReviewToSubmit {\n  text: string;\n  semesterTaken: number;\n  acadYearTaken: string;\n  // workload: number;\n}\n\nconst getReviewsOfModule = async (modId) => {\n  const response = await axios.get(`${reviewBaseUrl}/mod/${modId}`);\n  return response.data;\n};\n\nconst addReviewOfModule = async (\n  review: ReviewToSubmit,\n  modId: string,\n  userId: string\n) => {\n  const { text, semesterTaken, acadYearTaken } = review;\n  const response = await axios.post(\n    reviewBaseUrl,\n    {\n      text,\n      modId,\n      userId,\n      semesterTaken,\n      acadYearTaken,\n      // workload,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n\n  return response.status;\n};\n\nconst addRatingOfModule = async (\n  value: number,\n  type: \"difficulty\" | \"star\",\n  userId: string,\n  subId: string,\n  sub: \"mod\" | \"school\" | \"course\"\n) => {\n  const response = await axios.post(\n    ratingBaseUrl,\n    {\n      type,\n      userId,\n      subId,\n      value,\n      sub,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n\n  return response.status;\n};\n\nexport default {\n  getReviewsOfModule,\n  addReviewOfModule,\n  addRatingOfModule,\n};\n"]},"metadata":{},"sourceType":"module"}