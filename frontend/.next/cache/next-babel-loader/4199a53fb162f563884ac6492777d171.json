{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { serverDomain } from \"../config\";\nvar loginBaseUrl = \"\".concat(serverDomain, \"/api/login\");\nvar logoutBaseUrl = \"\".concat(serverDomain, \"/api/logout\");\nvar userBaseUrl = \"\".concat(serverDomain, \"/api/user\");\n\nvar logIn = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(loginBaseUrl, {\n              email: email,\n              password: password\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function logIn(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar logOut = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.post(logoutBaseUrl);\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function logOut() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar signUp = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(name, email, password) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.post(userBaseUrl, {\n              name: name,\n              email: email,\n              password: password\n            }, {\n              withCredentials: true\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function signUp(_x3, _x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  logIn: logIn,\n  signUp: signUp,\n  logOut: logOut\n};","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/api/auth.ts"],"names":["axios","serverDomain","loginBaseUrl","logoutBaseUrl","userBaseUrl","logIn","email","password","post","response","data","logOut","signUp","name","withCredentials"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,IAAMC,YAAY,aAAMD,YAAN,eAAlB;AACA,IAAME,aAAa,aAAMF,YAAN,gBAAnB;AACA,IAAMG,WAAW,aAAMH,YAAN,cAAjB;;AAEA,IAAMI,KAAK;AAAA,sEAAG,iBAAOC,KAAP,EAAcC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWP,KAAK,CAACQ,IAAN,CAAWN,YAAX,EAAyB;AAC9CI,cAAAA,KAAK,EAALA,KAD8C;AAE9CC,cAAAA,QAAQ,EAARA;AAF8C,aAAzB,CADX;;AAAA;AACNE,YAAAA,QADM;AAAA,6CAMLA,QAAQ,CAACC,IANJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALL,KAAK;AAAA;AAAA;AAAA,GAAX;;AASA,IAAMM,MAAM;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUX,KAAK,CAACQ,IAAN,CAAWL,aAAX,CADV;;AAAA;AACPM,YAAAA,QADO;AAAA,8CAENA,QAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANE,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAKA,IAAMC,MAAM;AAAA,uEAAG,kBACbC,IADa,EAEbP,KAFa,EAGbC,QAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKUP,KAAK,CAACQ,IAAN,CACrBJ,WADqB,EAErB;AACES,cAAAA,IAAI,EAAJA,IADF;AAEEP,cAAAA,KAAK,EAALA,KAFF;AAGEC,cAAAA,QAAQ,EAARA;AAHF,aAFqB,EAOrB;AACEO,cAAAA,eAAe,EAAE;AADnB,aAPqB,CALV;;AAAA;AAKPL,YAAAA,QALO;AAAA,8CAiBNA,QAAQ,CAACC,IAjBH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANE,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAoBA,eAAe;AACbP,EAAAA,KAAK,EAALA,KADa;AAEbO,EAAAA,MAAM,EAANA,MAFa;AAGbD,EAAAA,MAAM,EAANA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nimport { serverDomain } from \"../config\";\n\nconst loginBaseUrl = `${serverDomain}/api/login`;\nconst logoutBaseUrl = `${serverDomain}/api/logout`;\nconst userBaseUrl = `${serverDomain}/api/user`;\n\nconst logIn = async (email, password) => {\n  const response = await axios.post(loginBaseUrl, {\n    email,\n    password,\n  });\n\n  return response.data;\n};\n\nconst logOut = async () => {\n  const response = await axios.post(logoutBaseUrl);\n  return response;\n};\n\nconst signUp = async (\n  name,\n  email,\n  password,\n) => {\n  const response = await axios.post(\n    userBaseUrl,\n    {\n      name,\n      email,\n      password,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n\n  return response.data;\n};\n\nexport default {\n  logIn,\n  signUp,\n  logOut,\n};\n"]},"metadata":{},"sourceType":"module"}