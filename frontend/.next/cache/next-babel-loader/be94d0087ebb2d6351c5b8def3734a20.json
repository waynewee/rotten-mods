{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/FormModalItem.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { Input, InputNumber, Rate, Select, AutoComplete, Tag } from \"antd\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\n\nconst FormModalItem = ({\n  type = \"input\",\n  label,\n  value,\n  setValue,\n  options,\n  searchTerm,\n  setSearchTerm\n}) => {\n  const {\n    0: firstIsChecked,\n    1: setFirstIsChecked\n  } = useState(0);\n  const {\n    0: secondIsChecked,\n    1: setSecondIsChecked\n  } = useState(0);\n  const {\n    0: searchOptions,\n    1: setSearchOptions\n  } = useState(options !== null && options !== void 0 ? options : []);\n  useEffect(() => {\n    setSearchOptions(options);\n  }, [options]);\n\n  const toggleCheckbox = index => event => {\n    const newValue = parseInt(event.target.value) === 0 ? 1 : 0;\n    const isChecked = newValue === 1;\n\n    if (index === 1) {\n      setFirstIsChecked(newValue);\n      setValue([isChecked, value[1]]);\n    } else {\n      setSecondIsChecked(newValue);\n      setValue([value[0], isChecked]);\n    }\n  };\n\n  const renderInput = () => __jsx(Input, {\n    style: styles.input,\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  });\n\n  const renderTextArea = () => __jsx(TextArea, {\n    style: styles.input,\n    rows: 4,\n    autoSize: {\n      minRows: 4,\n      maxRows: 4\n    },\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  });\n\n  const renderText = () => __jsx(\"span\", {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }, value);\n\n  const renderRate = () => __jsx(Rate, {\n    defaultValue: value,\n    onChange: setValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  });\n\n  const renderDifficulty = () => __jsx(Rate, {\n    defaultValue: value,\n    style: styles.rateObjects,\n    onChange: setValue,\n    character: ({\n      index\n    }) => {\n      return __jsx(\"span\", {\n        style: {\n          marginRight: 9\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }\n      }, index + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  });\n\n  const renderNumber = () => __jsx(InputNumber, {\n    style: styles.inputNumber,\n    value: value,\n    onChange: e => setValue(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  });\n\n  const renderYear = () => __jsx(Select, {\n    style: styles.inputNumber,\n    onChange: setValue,\n    defaultValue: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(Option, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"1\"), __jsx(Option, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"2\"), __jsx(Option, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"3\"), __jsx(Option, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"4\"));\n\n  const renderSemester = () => __jsx(Select, {\n    style: styles.inputNumber,\n    onChange: setValue,\n    defaultValue: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(Option, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"1\"), __jsx(Option, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, \"2\"), __jsx(Option, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"3\"));\n\n  const renderSemesters = () => __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: 34\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"1\",\n    type: \"checkbox\",\n    value: firstIsChecked,\n    onChange: toggleCheckbox(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    style: styles.inputCheckboxLabel,\n    htmlFor: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"1\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"2\",\n    type: \"checkbox\",\n    value: secondIsChecked,\n    onChange: toggleCheckbox(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    style: styles.inputCheckboxLabel,\n    htmlFor: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"2\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    id: \"3\",\n    type: \"checkbox\",\n    value: secondIsChecked,\n    onChange: toggleCheckbox(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    style: styles.inputCheckboxLabel,\n    htmlFor: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, \"3\")));\n\n  const renderAnnualYear = () => {\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth();\n    const yearShortform = currentYear % 2000; // eg. 2020 => 20\n\n    const currentSemester = currentMonth < 6 ? 2 : 1;\n    const currentAYSecondYear = currentSemester === 1 ? yearShortform + 1 : yearShortform; // if current semester is 2, then the second year of the AY is the current year\n\n    const yearMinusOne = currentAYSecondYear - 1;\n    const yearMinusTwo = currentAYSecondYear - 2;\n    const yearMinusThree = currentAYSecondYear - 3;\n    const yearMinusFour = currentAYSecondYear - 4;\n    return __jsx(Select, {\n      style: styles.inputNumber,\n      onChange: setValue,\n      defaultValue: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, __jsx(Option, {\n      value: `${yearMinusOne}/${currentAYSecondYear}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, \"AY\", yearMinusOne, \"/\", currentAYSecondYear), __jsx(Option, {\n      value: `${yearMinusTwo}/${yearMinusOne}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, \"AY\", yearMinusTwo, \"/\", yearMinusOne), __jsx(Option, {\n      value: `${yearMinusThree}/${yearMinusTwo}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, \"AY\", yearMinusThree, \"/\", yearMinusTwo), __jsx(Option, {\n      value: `${yearMinusFour}/${yearMinusThree}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, \"AY\", yearMinusFour, \"/\", yearMinusThree));\n  };\n\n  const renderUniversity = () => __jsx(Select, {\n    style: styles.inputNumber,\n    onChange: setValue,\n    defaultValue: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, __jsx(Option, {\n    value: \"NUS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, \"NUS\"), __jsx(Option, {\n    value: \"NTU\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, \"NTU\"), __jsx(Option, {\n    value: \"SMU\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }, \"SMU\"));\n\n  const renderAutoComplete = () => __jsx(AutoComplete, {\n    style: styles.input,\n    options: searchOptions,\n    onSelect: setValue,\n    defaultValue: value,\n    onSearch: searchText => setSearchOptions(options.filter(item => item.value.toLowerCase().includes(searchText.toLowerCase()))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  });\n\n  const renderPrereq = () => {\n    const removeCode = removedMod => {\n      const filteredCodes = value.filter(mod => mod.id !== removedMod.id);\n      setValue(filteredCodes);\n    };\n\n    const renderTags = () => {\n      return value.map(mod => __jsx(Tag, {\n        closable: true,\n        onClose: () => removeCode(mod),\n        key: mod.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }\n      }, mod.value));\n    };\n\n    const addModule = code => {\n      const modArr = searchOptions.filter(mod => mod.value === code);\n      setValue(value.concat(modArr));\n      setSearchTerm(\"\");\n    };\n\n    const onChange = newSearchTerm => setSearchTerm(newSearchTerm);\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }\n    }, __jsx(AutoComplete, {\n      style: styles.input,\n      onSelect: addModule,\n      options: searchOptions,\n      value: searchTerm,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: 10,\n        maxWidth: 390\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }, renderTags()));\n  };\n\n  const renderInputType = {\n    \"input\": renderInput,\n    \"textarea\": renderTextArea,\n    \"text\": renderText,\n    \"rate\": renderRate,\n    \"difficulty\": renderDifficulty,\n    \"number\": renderNumber,\n    \"year\": renderYear,\n    \"semester\": renderSemester,\n    \"semesters\": renderSemesters,\n    \"annualYear\": renderAnnualYear,\n    \"university\": renderUniversity,\n    \"autocomplete\": renderAutoComplete,\n    \"prereq\": renderPrereq\n  };\n  return __jsx(\"div\", {\n    style: styles.labelContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, `${label}:`), renderInputType[type]());\n};\n\nconst styles = {\n  labelContainer: {\n    display: \"flex\",\n    marginBottom: 20,\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\"\n  },\n  label: {\n    width: 150,\n    marginTop: 5\n  },\n  input: {\n    width: 390,\n    maxWidth: 390\n  },\n  text: {\n    marginTop: 5\n  },\n  rateObjects: {// color: \"#000\",\n  },\n  inputNumber: {\n    width: 100\n  },\n  inputCheckboxLabel: {\n    margin: \"0px 20px 0px 10px\",\n    fontSize: 15\n  }\n};\nexport default FormModalItem;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/FormModalItem.tsx"],"names":["useState","useEffect","Input","InputNumber","Rate","Select","AutoComplete","Tag","TextArea","Option","FormModalItem","type","label","value","setValue","options","searchTerm","setSearchTerm","firstIsChecked","setFirstIsChecked","secondIsChecked","setSecondIsChecked","searchOptions","setSearchOptions","toggleCheckbox","index","event","newValue","parseInt","target","isChecked","renderInput","styles","input","e","renderTextArea","minRows","maxRows","renderText","text","renderRate","renderDifficulty","rateObjects","marginRight","renderNumber","inputNumber","renderYear","renderSemester","renderSemesters","display","alignItems","height","inputCheckboxLabel","renderAnnualYear","today","Date","currentYear","getFullYear","currentMonth","getMonth","yearShortform","currentSemester","currentAYSecondYear","yearMinusOne","yearMinusTwo","yearMinusThree","yearMinusFour","renderUniversity","renderAutoComplete","searchText","filter","item","toLowerCase","includes","renderPrereq","removeCode","removedMod","filteredCodes","mod","id","renderTags","map","addModule","code","modArr","concat","onChange","newSearchTerm","marginTop","maxWidth","renderInputType","labelContainer","marginBottom","justifyContent","width","margin","fontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\nimport { Input, InputNumber, Rate, Select, AutoComplete, Tag } from \"antd\";\nconst { TextArea } = Input;\nconst { Option } = Select;\n\ninterface FormModalItemProps {\n  type:\n    | \"input\"\n    | \"textarea\"\n    | \"text\"\n    | \"rate\"\n    | \"numerical\"\n    | \"difficulty\"\n    | \"number\"\n    | \"semester\"\n    | \"university\"\n    | \"year\"\n    | \"annualYear\"\n    | \"semesters\"\n    | \"autocomplete\"\n    | \"prereq\";\n  label: string;\n  value: string | number | boolean[] | string[] | SearchOption[];\n  setValue?: Dispatch<SetStateAction<any>>;\n  options?: any[];\n  searchTerm?: string;\n  setSearchTerm?: Dispatch<SetStateAction<any>>;\n}\n\ninterface SearchOption {\n  value: string;\n  id: string;\n}\n\nconst FormModalItem: React.FC<FormModalItemProps> = ({\n  type = \"input\",\n  label,\n  value,\n  setValue,\n  options,\n  searchTerm,\n  setSearchTerm,\n}) => {\n  const [firstIsChecked, setFirstIsChecked] = useState(0);\n  const [secondIsChecked, setSecondIsChecked] = useState(0);\n  const [searchOptions, setSearchOptions] = useState<SearchOption[]>(\n    options ?? []\n  );\n\n  useEffect(() => {\n    setSearchOptions(options);\n  }, [options]);\n\n  const toggleCheckbox = (index) => (event) => {\n    const newValue = parseInt(event.target.value) === 0 ? 1 : 0;\n    const isChecked = newValue === 1;\n    if (index === 1) {\n      setFirstIsChecked(newValue);\n      setValue([isChecked, value[1]]);\n    } else {\n      setSecondIsChecked(newValue);\n      setValue([value[0], isChecked]);\n    }\n  };\n\n  const renderInput = () => (\n    <Input\n      style={styles.input}\n      value={value as string}\n      onChange={(e) => setValue(e.target.value)}\n    />\n  );\n\n  const renderTextArea = () => (\n    <TextArea\n      style={styles.input}\n      rows={4}\n      autoSize={{ minRows: 4, maxRows: 4 }}\n      value={value as string}\n      onChange={(e) => setValue(e.target.value)}\n    />\n  );\n\n  const renderText = () => <span style={styles.text}>{value}</span>;\n\n  const renderRate = () => (\n    <Rate defaultValue={value as number} onChange={setValue} />\n  );\n\n  const renderDifficulty = () => (\n    <Rate\n      defaultValue={value as number}\n      style={styles.rateObjects}\n      onChange={setValue}\n      character={({ index }) => {\n        return <span style={{ marginRight: 9 }}>{index + 1}</span>;\n      }}\n    />\n  );\n\n  const renderNumber = () => (\n    <InputNumber\n      style={styles.inputNumber}\n      value={(value as unknown) as number}\n      onChange={(e) => setValue(e as string)}\n    />\n  );\n\n  const renderYear = () => (\n    <Select style={styles.inputNumber} onChange={setValue} defaultValue={value}>\n      <Option value={1}>1</Option>\n      <Option value={2}>2</Option>\n      <Option value={3}>3</Option>\n      <Option value={4}>4</Option>\n    </Select>\n  );\n\n  const renderSemester = () => (\n    <Select style={styles.inputNumber} onChange={setValue} defaultValue={value}>\n      <Option value={1}>1</Option>\n      <Option value={2}>2</Option>\n      <Option value={3}>3</Option>\n    </Select>\n  );\n\n  const renderSemesters = () => (\n    <div style={{ display: \"flex\", alignItems: \"center\", height: 34 }}>\n      <div>\n        <input\n          id=\"1\"\n          type=\"checkbox\"\n          value={firstIsChecked}\n          onChange={toggleCheckbox(1)}\n        />\n        <label style={styles.inputCheckboxLabel} htmlFor=\"1\">\n          1\n        </label>\n      </div>\n      <div>\n        <input\n          id=\"2\"\n          type=\"checkbox\"\n          value={secondIsChecked}\n          onChange={toggleCheckbox(2)}\n        />\n        <label style={styles.inputCheckboxLabel} htmlFor=\"2\">\n          2\n        </label>\n      </div>\n      <div>\n        <input\n          id=\"3\"\n          type=\"checkbox\"\n          value={secondIsChecked}\n          onChange={toggleCheckbox(3)}\n        />\n        <label style={styles.inputCheckboxLabel} htmlFor=\"3\">\n          3\n        </label>\n      </div>\n    </div>\n  );\n\n  const renderAnnualYear = () => {\n    const today = new Date();\n    const currentYear = today.getFullYear();\n    const currentMonth = today.getMonth();\n    const yearShortform = currentYear % 2000; // eg. 2020 => 20\n    const currentSemester = currentMonth < 6 ? 2 : 1;\n    const currentAYSecondYear =\n      currentSemester === 1 ? yearShortform + 1 : yearShortform; // if current semester is 2, then the second year of the AY is the current year\n    const yearMinusOne = currentAYSecondYear - 1;\n    const yearMinusTwo = currentAYSecondYear - 2;\n    const yearMinusThree = currentAYSecondYear - 3;\n    const yearMinusFour = currentAYSecondYear - 4;\n    return (\n      <Select\n        style={styles.inputNumber}\n        onChange={setValue}\n        defaultValue={value}\n      >\n        <Option value={`${yearMinusOne}/${currentAYSecondYear}`}>\n          AY{yearMinusOne}/{currentAYSecondYear}\n        </Option>\n        <Option value={`${yearMinusTwo}/${yearMinusOne}`}>\n          AY{yearMinusTwo}/{yearMinusOne}\n        </Option>\n        <Option value={`${yearMinusThree}/${yearMinusTwo}`}>\n          AY{yearMinusThree}/{yearMinusTwo}\n        </Option>\n        <Option value={`${yearMinusFour}/${yearMinusThree}`}>\n          AY{yearMinusFour}/{yearMinusThree}\n        </Option>\n      </Select>\n    );\n  };\n\n  const renderUniversity = () => (\n    <Select style={styles.inputNumber} onChange={setValue} defaultValue={value}>\n      <Option value={\"NUS\"}>NUS</Option>\n      <Option value={\"NTU\"}>NTU</Option>\n      <Option value={\"SMU\"}>SMU</Option>\n    </Select>\n  );\n\n  const renderAutoComplete = () => (\n    <AutoComplete\n      style={styles.input}\n      options={searchOptions}\n      onSelect={setValue}\n      defaultValue={value as string}\n      onSearch={(searchText) =>\n        setSearchOptions(\n          options.filter((item) => item.value.toLowerCase().includes(searchText.toLowerCase()))\n        )\n      }\n    />\n  );\n\n  const renderPrereq = () => {\n    const removeCode = (removedMod) => {\n      const filteredCodes = (value as SearchOption[]).filter(\n        (mod) => mod.id !== removedMod.id\n      );\n      setValue(filteredCodes);\n    };\n\n    const renderTags = () => {\n      return (value as SearchOption[]).map((mod) => (\n        <Tag closable onClose={() => removeCode(mod)} key={mod.id}>\n          {mod.value}\n        </Tag>\n      ));\n    };\n\n    const addModule = (code) => {\n      const modArr = searchOptions.filter((mod) => mod.value === code);\n      setValue((value as SearchOption[]).concat(modArr));\n      setSearchTerm(\"\");\n    };\n\n    const onChange = (newSearchTerm) => setSearchTerm(newSearchTerm);\n\n    return (\n      <div>\n        <AutoComplete\n          style={styles.input}\n          onSelect={addModule}\n          options={searchOptions}\n          value={searchTerm}\n          onChange={onChange}\n        />\n        <div style={{ marginTop: 10, maxWidth: 390 }}>{renderTags()}</div>\n      </div>\n    );\n  };\n\n  const renderInputType = {\n    \"input\": renderInput,\n    \"textarea\": renderTextArea,\n    \"text\": renderText,\n    \"rate\": renderRate,\n    \"difficulty\": renderDifficulty,\n    \"number\": renderNumber,\n    \"year\": renderYear,\n    \"semester\": renderSemester,\n    \"semesters\": renderSemesters,\n    \"annualYear\": renderAnnualYear,\n    \"university\": renderUniversity,\n    \"autocomplete\": renderAutoComplete,\n    \"prereq\": renderPrereq,\n  }\n\n  return (\n    <div style={styles.labelContainer}>\n      <label style={styles.label}>{`${label}:`}</label>\n      {renderInputType[type]()}\n    </div>\n  );\n};\n\nconst styles = {\n  labelContainer: {\n    display: \"flex\",\n    marginBottom: 20,\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\",\n  },\n  label: {\n    width: 150,\n    marginTop: 5,\n  },\n  input: {\n    width: 390,\n    maxWidth: 390,\n  },\n  text: {\n    marginTop: 5,\n  },\n  rateObjects: {\n    // color: \"#000\",\n  },\n  inputNumber: {\n    width: 100,\n  },\n  inputCheckboxLabel: {\n    margin: \"0px 20px 0px 10px\",\n    fontSize: 15,\n  },\n};\n\nexport default FormModalItem;\n"]},"metadata":{},"sourceType":"module"}