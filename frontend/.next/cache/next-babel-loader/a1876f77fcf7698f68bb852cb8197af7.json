{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/home.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport HomeModuleList from \"../components/HomeModuleList\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport { useSelector } from \"react-redux\";\nimport recommendationApi from \"../api/recommendations\";\nimport moduleApi from \"../api/module\";\nimport { useEffect, useState } from \"react\";\n\nconst Home = ({}) => {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const userId = useSelector(state => {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  const {\n    0: trendingModules,\n    1: setTrendingModules\n  } = useState([]);\n  const {\n    0: popularModules,\n    1: setPopularModules\n  } = useState([]);\n  const {\n    0: recommendedModules,\n    1: setRecommendedModules\n  } = useState([]);\n  useEffect(() => {\n    fetchAllRecommendations();\n  }, [userId]);\n  const concatBackupModules = modulesToConcat;\n\n  const fetchAllRecommendations = async () => {\n    const backupModules = await moduleApi.searchModule(\"\");\n    const mostRatedModules = await recommendationApi.getMostRatedModules();\n    setPopularModules(mostRatedModules.mods);\n    const mostViewedModules = await recommendationApi.getMostViewedModules();\n    setTrendingModules(mostViewedModules.mods);\n\n    try {\n      const recommendedModules = await recommendationApi.getRecommendedModules(userId);\n      setRecommendedModules(recommendedModules.mods);\n    } catch (err) {\n      console.log(\"User has insufficient activities to get recommended\");\n    }\n  };\n\n  const renderRecommendedModules = () => {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        console.log(\"Recommended:\", recommendedModules);\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Recommended For You\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        }), __jsx(HomeModuleList, {\n          modules: recommendedModules,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Recommended For You\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }\n        }), __jsx(\"p\", {\n          style: {\n            textAlign: \"center\",\n            paddingTop: \"20px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }\n        }, \"Sorry we do not have enough information about you to recommend modules for you!\"));\n      }\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ModuleCompareModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), __jsx(SectionTitle, {\n    title: \"Trending Modules\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(HomeModuleList, {\n    modules: trendingModules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(SectionTitle, {\n    title: \"Popular Modules\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(HomeModuleList, {\n    modules: popularModules,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), isLoggedIn && renderRecommendedModules());\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/home.tsx"],"names":["HomeModuleList","SectionTitle","ModuleCompareModal","useSelector","recommendationApi","moduleApi","useEffect","useState","Home","isLoggedIn","state","auth","userId","user","_id","trendingModules","setTrendingModules","popularModules","setPopularModules","recommendedModules","setRecommendedModules","fetchAllRecommendations","concatBackupModules","modulesToConcat","backupModules","searchModule","mostRatedModules","getMostRatedModules","mods","mostViewedModules","getMostViewedModules","getRecommendedModules","err","console","log","renderRecommendedModules","length","textAlign","paddingTop"],"mappings":"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","sourcesContent":["import { NextPage } from \"next\";\n\nimport HomeModuleList from \"../components/HomeModuleList\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport { useSelector } from \"react-redux\";\nimport recommendationApi from \"../api/recommendations\";\nimport moduleApi from \"../api/module\";\n\nimport { useEffect, useState } from \"react\";\n\nconst Home: NextPage = ({}) => {\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  const userId = useSelector((state) => state.auth.user?._id);\n\n  const [trendingModules, setTrendingModules] = useState([]);\n  const [popularModules, setPopularModules] = useState([]);\n  const [recommendedModules, setRecommendedModules] = useState([]);\n\n  useEffect(() => {\n    fetchAllRecommendations();\n  }, [userId]);\n\n  const concatBackupModules = (modulesToConcat)\n\n  const fetchAllRecommendations = async () => {\n    const backupModules = await moduleApi.searchModule(\"\");\n    const mostRatedModules = await recommendationApi.getMostRatedModules();\n    setPopularModules(mostRatedModules.mods);\n    const mostViewedModules = await recommendationApi.getMostViewedModules();\n    setTrendingModules(mostViewedModules.mods);\n\n    try {\n      const recommendedModules = await recommendationApi.getRecommendedModules(\n        userId\n      );\n      setRecommendedModules(recommendedModules.mods);\n    } catch (err) {\n      console.log(\"User has insufficient activities to get recommended\");\n    }\n  };\n\n  const renderRecommendedModules = () => {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        console.log(\"Recommended:\", recommendedModules);\n        return (\n          <>\n            <SectionTitle title=\"Recommended For You\" />\n            <HomeModuleList modules={recommendedModules} />\n          </>\n        );\n      } else {\n        return (\n          <>\n            <SectionTitle title=\"Recommended For You\" />\n            <p style={{ textAlign: \"center\", paddingTop: \"20px\" }}>\n              Sorry we do not have enough information about you to recommend\n              modules for you!\n            </p>\n          </>\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      <ModuleCompareModal />\n      <SectionTitle title=\"Trending Modules\" />\n      <HomeModuleList modules={trendingModules} />\n      <SectionTitle title=\"Popular Modules\" />\n      <HomeModuleList modules={popularModules} />\n      {isLoggedIn && renderRecommendedModules()}\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}