{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\nvar baseUrl = \"\".concat(serverDomain, \"/api/school\");\n\nvar searchSchools = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(searchTerm) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = queryString.stringify({\n              s: searchTerm,\n              page: 1,\n              limit: 100\n            });\n            _context.next = 3;\n            return axios.get(\"\".concat(baseUrl, \"/?\").concat(query));\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchSchools(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getAllSchools = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"\".concat(baseUrl));\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getAllSchools() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getSchool = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(schoolId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get(\"\".concat(baseUrl, \"/\").concat(schoolId));\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getSchool(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar addSchool = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(schoolName) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios.post(baseUrl, {\n              \"name\": schoolName\n            }, {\n              withCredentials: true\n            });\n\n          case 2:\n            response = _context4.sent;\n            console.log(response);\n            return _context4.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function addSchool(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default {\n  searchSchools: searchSchools,\n  addSchool: addSchool,\n  getSchool: getSchool,\n  getAllSchools: getAllSchools\n};","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/api/school.ts"],"names":["axios","queryString","serverDomain","baseUrl","searchSchools","searchTerm","query","stringify","s","page","limit","get","response","data","getAllSchools","getSchool","schoolId","addSchool","schoolName","post","withCredentials","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,IAAMC,OAAO,aAAMD,YAAN,gBAAb;;AAEA,IAAME,aAAa;AAAA,sEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,KADc,GACNL,WAAW,CAACM,SAAZ,CAAsB;AAClCC,cAAAA,CAAC,EAAEH,UAD+B;AAElCI,cAAAA,IAAI,EAAE,CAF4B;AAGlCC,cAAAA,KAAK,EAAE;AAH2B,aAAtB,CADM;AAAA;AAAA,mBAMGV,KAAK,CAACW,GAAN,WAAaR,OAAb,eAAyBG,KAAzB,EANH;;AAAA;AAMdM,YAAAA,QANc;AAAA,6CAObA,QAAQ,CAACC,IAPI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbT,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAUA,IAAMU,aAAa;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGd,KAAK,CAACW,GAAN,WAAaR,OAAb,EADH;;AAAA;AACdS,YAAAA,QADc;AAAA,8CAEbA,QAAQ,CAACC,IAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbC,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAKA,IAAMC,SAAS;AAAA,uEAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOhB,KAAK,CAACW,GAAN,WAAaR,OAAb,cAAwBa,QAAxB,EADP;;AAAA;AACVJ,YAAAA,QADU;AAAA,8CAETA,QAAQ,CAACC,IAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATE,SAAS;AAAA;AAAA;AAAA,GAAf;;AAKA,IAAME,SAAS;AAAA,uEAAG,kBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOlB,KAAK,CAACmB,IAAN,CACrBhB,OADqB,EAErB;AAAC,sBAASe;AAAV,aAFqB,EAGrB;AACEE,cAAAA,eAAe,EAAE;AADnB,aAHqB,CADP;;AAAA;AACVR,YAAAA,QADU;AAQhBS,YAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AARgB,8CASTA,QAAQ,CAACC,IATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATI,SAAS;AAAA;AAAA;AAAA,GAAf;;AAYA,eAAe;AACbb,EAAAA,aAAa,EAAbA,aADa;AACEa,EAAAA,SAAS,EAATA,SADF;AACaF,EAAAA,SAAS,EAATA,SADb;AACwBD,EAAAA,aAAa,EAAbA;AADxB,CAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nimport { serverDomain } from \"../config\";\n\nconst baseUrl = `${serverDomain}/api/school`;\n\nconst searchSchools = async (searchTerm: string) => {\n  const query = queryString.stringify({\n    s: searchTerm,\n    page: 1,\n    limit: 100,\n  });\n  const response = await axios.get(`${baseUrl}/?${query}`);\n  return response.data;\n};\n\nconst getAllSchools = async () => {\n  const response = await axios.get(`${baseUrl}`);\n  return response.data;\n};\n\nconst getSchool = async (schoolId) => {\n  const response = await axios.get(`${baseUrl}/${schoolId}`);\n  return response.data;\n};\n\nconst addSchool = async (schoolName) => {\n  const response = await axios.post(\n    baseUrl, \n    {\"name\" : schoolName},\n    {\n      withCredentials: true\n    }\n  );\n  console.log(response);\n  return response.data;\n};\n\nexport default {\n  searchSchools, addSchool, getSchool, getAllSchools\n};\n"]},"metadata":{},"sourceType":"module"}