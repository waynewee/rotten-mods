{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moduleApi from \"../api/module\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\n\nconst AddModuleModal = ({\n  isModalVisible,\n  setModalVisibility\n}) => {\n  const {\n    0: code,\n    1: setCode\n  } = useState(\"\");\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const schoolName = useSelector(state => state.auth.user.schoolName);\n  const {\n    0: university,\n    1: setUniversity\n  } = useState(schoolName);\n  console.log(university);\n  const {\n    0: credit,\n    1: setCredit\n  } = useState(4);\n  const {\n    0: semesters,\n    1: setSemesters\n  } = useState([false, false]);\n  const {\n    0: workload,\n    1: setWorkload\n  } = useState(10);\n  const {\n    0: modulePrereqs,\n    1: setModulePrereqs\n  } = useState([]);\n  const {\n    0: allModules,\n    1: setAllModules\n  } = useState([]);\n  const {\n    0: prereqSearchTerm,\n    1: setPrereqSearchTerm\n  } = useState(\"\");\n  const schools = useSelector(state => state.schools);\n  const schoolsAutocompleteOptions = schools.map(school => ({\n    value: school.name\n  }));\n  useEffect(() => {\n    setUniversity(schoolName);\n  }, [schoolName]);\n  useEffect(() => {\n    getAllModules();\n  }, [prereqSearchTerm]);\n\n  const getAllModules = async () => {\n    const modules = await moduleApi.searchModule(prereqSearchTerm, 20);\n    const moduleCodes = modules.map(mod => ({\n      value: mod.code,\n      id: mod._id\n    }));\n    setAllModules(moduleCodes);\n  };\n\n  const onSubmit = () => {\n    var _schools$find;\n\n    if (!validateForm()) {\n      message.error(\"You need to complete all fields other than Pre-requisites!\");\n      return;\n    }\n\n    const schoolId = (_schools$find = schools.find(school => school.name === university)) === null || _schools$find === void 0 ? void 0 : _schools$find._id;\n    const prereqs = modulePrereqs.map(mod => mod.id);\n    const semester = semesters.reduce((acc, sem, index) => {\n      if (sem) acc.push(index + 1);\n      return acc;\n    }, []);\n    const newModule = {\n      code,\n      title,\n      schoolId,\n      semester,\n      description,\n      credit,\n      workload,\n      prereqs\n    };\n    moduleApi.addModule(newModule);\n    setModalVisibility(false);\n    resetState();\n    message.success(`Successfully added module ${code}`);\n  };\n\n  const validateForm = () => {\n    return code && title && university && description && credit && workload;\n  };\n\n  const resetState = () => {\n    setCode(\"\");\n    setTitle(\"\");\n    setDescription(\"\");\n    setUniversity(\"\");\n    setCredit(4);\n    setSemesters([false, false]);\n    setWorkload(10);\n    setModulePrereqs([]);\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: codeBlue,\n    submitColor: \"#3E59B9\",\n    title: \"Add Module\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: setModalVisibility,\n    onSubmit: onSubmit\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"input\",\n    value: code,\n    setValue: setCode\n  }), __jsx(FormModalItem, {\n    label: \"Title\",\n    type: \"input\",\n    value: title,\n    setValue: setTitle\n  }), __jsx(FormModalItem, {\n    label: \"Description\",\n    type: \"textarea\",\n    value: description,\n    setValue: setDescription\n  }), __jsx(FormModalItem, {\n    label: \"University\",\n    type: \"autocomplete\",\n    options: schoolsAutocompleteOptions,\n    value: university,\n    setValue: setUniversity\n  }), __jsx(FormModalItem, {\n    label: \"Workload/Week\",\n    type: \"number\",\n    value: workload,\n    setValue: setWorkload\n  }), __jsx(FormModalItem, {\n    label: \"Credit\",\n    type: \"number\",\n    value: credit,\n    setValue: setCredit\n  }), __jsx(FormModalItem, {\n    label: \"Semester\",\n    type: \"semesters\",\n    value: semesters,\n    setValue: setSemesters\n  }), __jsx(FormModalItem, {\n    label: \"Pre-requisites\",\n    type: \"prereq\",\n    value: modulePrereqs,\n    setValue: setModulePrereqs,\n    options: allModules,\n    searchTerm: prereqSearchTerm,\n    setSearchTerm: setPrereqSearchTerm\n  }));\n};\n\nexport default AddModuleModal;","map":null,"metadata":{},"sourceType":"module"}