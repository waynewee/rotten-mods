{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Modal, Button, Form, Input, Select } from \"antd\";\nimport { useState, useEffect } from \"react\";\nimport authService from \"../utils/authentication\";\nimport { message } from \"antd\";\nimport userApi from \"../api/user\";\nimport schoolApi from \"../api/school\";\nimport courseApi from \"../api/course\";\nimport { useRouter } from \"next/router\";\n\nvar EditProfileModal = function EditProfileModal(_ref) {\n  var user = _ref.user,\n      toggleEditProfileModal = _ref.toggleEditProfileModal;\n\n  var _useState = useState([{\n    schoolId: \"\",\n    schoolName: \"\"\n  }]),\n      inputSchoolValues = _useState[0],\n      setSchoolInputValues = _useState[1];\n\n  var _useState2 = useState([{\n    courseId: \"\",\n    courseName: \"\"\n  }]),\n      inputCourseValues = _useState2[0],\n      setInputCourseValues = _useState2[1];\n\n  useEffect(function () {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  var populateSchools = function populateSchools() {\n    schoolApi.getAllSchools().then(function (response) {\n      var schoolsInDatabase = response.map(function (obj) {\n        var universityValue = {\n          schoolId: \"\",\n          schoolName: \"\"\n        };\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setSchoolInputValues(schoolsInDatabase);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n\n  var populateCourses = function populateCourses() {\n    courseApi.getAllCourses().then(function (response) {\n      var coursesInDatabase = response.map(function (obj) {\n        var course = {\n          courseId: \"\",\n          courseName: \"\"\n        };\n        course.courseId = obj._id;\n        course.courseName = obj.name;\n        return course;\n      });\n      setInputCourseValues(coursesInDatabase);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  };\n\n  var router = useRouter();\n\n  var onFormFinish = function onFormFinish(profileValues) {\n    console.log(\"profile valus are\");\n    console.log(profileValues);\n    var newSchoolId = inputSchoolValues.find(function (element) {\n      return element.schoolName == profileValues.newSchoolName;\n    }).schoolId;\n    var newCourseId = inputCourseValues.find(function (element) {\n      return element.courseName == profileValues.newCourseName;\n    }).courseId;\n    var newUserDetails = {\n      \"name\": profileValues.fullname,\n      \"email\": user.email,\n      \"password\": user.password,\n      \"schoolId\": newSchoolId,\n      \"courseId\": newCourseId,\n      \"currentYear\": profileValues.newYearOfStudy\n    }; // if (originalSchoolName == user.schoolName) {\n    //   delete newUserDetails[\"schoolId\"];\n    // } \n    // if (originalCourseName == user.schoolName) {\n    //   delete newUserDetails[\"courseId\"];\n    // }\n\n    userApi.updateUser(newUserDetails, user._id).then(function (response) {\n      toggleEditProfileModal();\n      authService.logIn({\n        \"emailaddress\": newUserDetails.email,\n        \"password\": newUserDetails.password\n      });\n      router.push({\n        pathname: \"/profile\"\n      });\n      message.success(\"Your profile has been updated successfully\");\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(Modal, {\n    visible: true,\n    title: __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      }\n    }, \" SIGNUP \"),\n    centered: true,\n    onCancel: toggleEditProfileModal,\n    footer: null\n  }, __jsx(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    initialValues: {},\n    onFinish: onFormFinish\n  }, __jsx(Form.Item, {\n    name: \"fullname\",\n    label: \"Full Name\",\n    initialValue: user.fullName,\n    rules: [{\n      required: true,\n      message: \"Please enter your full name!\"\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    name: \"newYearOfStudy\",\n    label: \"Year of Study\",\n    initialValue: user.yearOfStudy,\n    rules: [{\n      validator: function validator(_, value) {\n        if (value < 1 || value > 8) {\n          return Promise.reject(\"Your Year of Study should only be between 1 to 8\");\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    name: \"newCourseName\",\n    label: \"Your Course\",\n    initialValue: user.courseName\n  }, __jsx(Select, null, inputCourseValues.map(function (item) {\n    return __jsx(Select.Option, {\n      key: item.courseId,\n      value: item.courseName\n    }, item.courseName);\n  }))), __jsx(Form.Item, {\n    name: \"newSchoolName\",\n    label: \"Your University\",\n    initialValue: user.schoolName\n  }, __jsx(Select, null, inputSchoolValues.map(function (item) {\n    return __jsx(Select.Option, {\n      key: item.schoolId,\n      value: item.schoolName\n    }, item.schoolName);\n  }))), __jsx(Form.Item, null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton\n  }, \"SAVE PROFILE\"))));\n};\n\nvar styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: \"#2D538C\"\n  }\n};\nexport default EditProfileModal;","map":null,"metadata":{},"sourceType":"module"}