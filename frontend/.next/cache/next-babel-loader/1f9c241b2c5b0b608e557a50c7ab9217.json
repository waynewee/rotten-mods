{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"./reducers\";\n\nvar makeStore = function makeStore(context) {\n  return createStore(reducer);\n};\n\nexport var wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/redux/store.ts"],"names":["createStore","createWrapper","reducer","makeStore","context","wrapper","debug"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAAoBC,aAApB,QAA2D,oBAA3D;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAGA,IAAMC,SAAgC,GAAG,SAAnCA,SAAmC,CAACC,OAAD;AAAA,SACvCJ,WAAW,CAACE,OAAD,CAD4B;AAAA,CAAzC;;AAGA,OAAO,IAAMG,OAAO,GAAGJ,aAAa,CAAaE,SAAb,EAAwB;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAxB,CAA7B","sourcesContent":["import { createStore } from \"redux\";\nimport { MakeStore, createWrapper, Context, HYDRATE } from \"next-redux-wrapper\";\nimport reducer from \"./reducers\";\nimport { ReduxState } from \"./types\";\n\nconst makeStore: MakeStore<ReduxState> = (context: Context) =>\n  createStore(reducer);\n\nexport const wrapper = createWrapper<ReduxState>(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}