{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/ReviewCard.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport commentApi from \"../api/comment\";\nimport reactionApi from \"../api/reaction\";\nimport reviewApi from \"../api/review\";\nimport { triggerRequireLoginMessage } from \"../utils/helpers\";\nimport AddCommentModal from \"./AddCommentModal\";\nimport Button from \"./Button\";\nimport CommentModal from \"./CommentsModal\";\nimport CommentOutlinedIcon from \"../icons/CommentOutlinedIcon\";\nimport LikeOutlinedIcon from \"../icons/LikeOutlinedIcon\";\nimport { reviewBlue, ratingsYellow } from \"../styles/colors\";\n\nconst ReviewCard = ({\n  review,\n  updateReviews,\n  showActions = true\n}) => {\n  var _reaction$like$count, _reaction$like;\n\n  const {\n    0: isCommentsModalVisible,\n    1: setCommentsModalVisibility\n  } = useState(false);\n  const {\n    0: isAddCommentModalVisible,\n    1: setAddCommentModalVisibility\n  } = useState(false);\n  const {\n    0: comments,\n    1: setComments\n  } = useState([]);\n  const {\n    0: userLikeReactionId,\n    1: setUserLikeReactionId\n  } = useState(\"\");\n  const {\n    0: difficulty,\n    1: setDifficulty\n  } = useState(3);\n  const {\n    0: star,\n    1: setStar\n  } = useState(3);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const userId = useSelector(state => {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  const {\n    user,\n    text,\n    acadYearTaken,\n    semesterTaken,\n    reaction,\n    _id,\n    ratingIds\n  } = review;\n  const name = user === null || user === void 0 ? void 0 : user.name;\n  const like = (_reaction$like$count = reaction === null || reaction === void 0 ? void 0 : (_reaction$like = reaction.like) === null || _reaction$like === void 0 ? void 0 : _reaction$like.count) !== null && _reaction$like$count !== void 0 ? _reaction$like$count : 0;\n  useEffect(() => {\n    fetchComments();\n    checkIsLikedByUser();\n  }, []);\n\n  const fetchComments = async () => {\n    const fetchedComments = await commentApi.getCommentsOfReview(_id);\n    setComments(fetchedComments);\n  };\n\n  const checkIsLikedByUser = async () => {\n    try {\n      const likeReaction = await reactionApi.getReaction(\"review\", _id, userId, \"like\");\n      setUserLikeReactionId(likeReaction._id);\n    } catch (err) {\n      setUserLikeReactionId(\"\");\n    }\n  };\n\n  const onLikeReview = async () => {\n    if (!isLoggedIn) {\n      triggerRequireLoginMessage();\n      return;\n    }\n\n    if (!userLikeReactionId) {\n      await reactionApi.addReaction(\"review\", _id, userId, \"like\");\n      updateReviews();\n      checkIsLikedByUser();\n    } else {\n      await reactionApi.deleteReaction(userLikeReactionId);\n      updateReviews();\n      checkIsLikedByUser();\n    }\n  };\n\n  const toggleCommentModalVisibility = () => {\n    if (!isLoggedIn) {\n      triggerRequireLoginMessage();\n    } else {\n      setAddCommentModalVisibility(true);\n    }\n  };\n\n  const fetchRatings = () => {\n    ratingIds.forEach(async id => {\n      const rating = await reviewApi.getRatingById(id);\n      console.log(rating.type);\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: styles.userInformation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, name), __jsx(\"span\", {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"|\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"AY\", acadYearTaken, \", Sem \", semesterTaken), __jsx(\"span\", {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"|\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Difficulty: \", difficulty.toFixed(1)), __jsx(\"span\", {\n    style: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"|\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Rating: \", star.toFixed(1))), showActions && __jsx(\"div\", {\n    style: styles.actionsBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: styles.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: onLikeReview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, __jsx(LikeOutlinedIcon, {\n    style: _objectSpread(_objectSpread({}, styles.icon), {}, {\n      color: userLikeReactionId ? ratingsYellow : \"#fff\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, `${like} Likes`)), __jsx(\"span\", {\n    style: {\n      margin: \"0px 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"|\"), __jsx(\"div\", {\n    style: styles.action,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: toggleCommentModalVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, __jsx(CommentOutlinedIcon, {\n    style: styles.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    onClick: () => setCommentsModalVisibility(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, `${comments.length} Comments`)))), __jsx(\"div\", {\n    style: styles.review,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, text), __jsx(AddCommentModal, {\n    fetchComments: fetchComments,\n    reviewId: _id,\n    isModalVisible: isAddCommentModalVisible,\n    setModalVisibility: setAddCommentModalVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), __jsx(CommentModal, {\n    comments: comments,\n    isModalVisible: isCommentsModalVisible,\n    setModalVisibility: setCommentsModalVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst styles = {\n  container: {\n    padding: 30,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 15,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    marginBottom: 15,\n    width: \"100%\"\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  userInformation: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  actionsBar: {\n    display: \"flex\"\n  },\n  action: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  icon: {\n    height: 20,\n    marginRight: 10\n  },\n  review: {\n    marginTop: 10,\n    textAlign: \"justify\"\n  },\n  divider: {\n    margin: \"0px 10px\"\n  }\n};\nexport default ReviewCard;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/ReviewCard.tsx"],"names":["useState","useEffect","useSelector","commentApi","reactionApi","reviewApi","triggerRequireLoginMessage","AddCommentModal","Button","CommentModal","CommentOutlinedIcon","LikeOutlinedIcon","reviewBlue","ratingsYellow","ReviewCard","review","updateReviews","showActions","isCommentsModalVisible","setCommentsModalVisibility","isAddCommentModalVisible","setAddCommentModalVisibility","comments","setComments","userLikeReactionId","setUserLikeReactionId","difficulty","setDifficulty","star","setStar","isLoggedIn","state","auth","userId","user","_id","text","acadYearTaken","semesterTaken","reaction","ratingIds","name","like","count","fetchComments","checkIsLikedByUser","fetchedComments","getCommentsOfReview","likeReaction","getReaction","err","onLikeReview","addReaction","deleteReaction","toggleCommentModalVisibility","fetchRatings","forEach","id","rating","getRatingById","console","log","type","styles","container","header","userInformation","divider","toFixed","actionsBar","action","icon","color","margin","length","padding","backgroundColor","borderRadius","boxShadow","marginBottom","width","display","justifyContent","flexWrap","height","marginRight","marginTop","textAlign"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,kBAA1C;;AAQA,MAAMC,UAAqC,GAAG,CAAC;AAC7CC,EAAAA,MAD6C;AAE7CC,EAAAA,aAF6C;AAG7CC,EAAAA,WAAW,GAAG;AAH+B,CAAD,KAIxC;AAAA;;AACJ,QAAM;AAAA,OAACC,sBAAD;AAAA,OAAyBC;AAAzB,MAAuDnB,QAAQ,CAAC,KAAD,CAArE;AACA,QAAM;AAAA,OAACoB,wBAAD;AAAA,OAA2BC;AAA3B,MAA2DrB,QAAQ,CACvE,KADuE,CAAzE;AAGA,QAAM;AAAA,OAACsB,QAAD;AAAA,OAAWC;AAAX,MAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACwB,kBAAD;AAAA,OAAqBC;AAArB,MAA8CzB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAA,OAAC0B,UAAD;AAAA,OAAaC;AAAb,MAA8B3B,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM;AAAA,OAAC4B,IAAD;AAAA,OAAOC;AAAP,MAAkB7B,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM8B,UAAU,GAAG5B,WAAW,CAAE6B,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,UAAvB,CAA9B;AACA,QAAMG,MAAM,GAAG/B,WAAW,CAAE6B,KAAD;AAAA;;AAAA,+BAAWA,KAAK,CAACC,IAAN,CAAWE,IAAtB,qDAAW,iBAAiBC,GAA5B;AAAA,GAAD,CAA1B;AAEA,QAAM;AACJD,IAAAA,IADI;AAEJE,IAAAA,IAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,QALI;AAMJJ,IAAAA,GANI;AAOJK,IAAAA;AAPI,MAQFzB,MARJ;AASA,QAAM0B,IAAI,GAAGP,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,IAAnB;AACA,QAAMC,IAAI,2BAAGH,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAEG,IAAb,mDAAG,eAAgBC,KAAnB,uEAA4B,CAAtC;AAEA1C,EAAAA,SAAS,CAAC,MAAM;AACd2C,IAAAA,aAAa;AACbC,IAAAA,kBAAkB;AACnB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,aAAa,GAAG,YAAY;AAChC,UAAME,eAAe,GAAG,MAAM3C,UAAU,CAAC4C,mBAAX,CAA+BZ,GAA/B,CAA9B;AACAZ,IAAAA,WAAW,CAACuB,eAAD,CAAX;AACD,GAHD;;AAKA,QAAMD,kBAAkB,GAAG,YAAY;AACrC,QAAI;AACF,YAAMG,YAAY,GAAG,MAAM5C,WAAW,CAAC6C,WAAZ,CACzB,QADyB,EAEzBd,GAFyB,EAGzBF,MAHyB,EAIzB,MAJyB,CAA3B;AAMAR,MAAAA,qBAAqB,CAACuB,YAAY,CAACb,GAAd,CAArB;AACD,KARD,CAQE,OAAOe,GAAP,EAAY;AACZzB,MAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD;AACF,GAZD;;AAcA,QAAM0B,YAAY,GAAG,YAAY;AAC/B,QAAI,CAACrB,UAAL,EAAiB;AACfxB,MAAAA,0BAA0B;AAC1B;AACD;;AAED,QAAI,CAACkB,kBAAL,EAAyB;AACvB,YAAMpB,WAAW,CAACgD,WAAZ,CAAwB,QAAxB,EAAkCjB,GAAlC,EAAuCF,MAAvC,EAA+C,MAA/C,CAAN;AACAjB,MAAAA,aAAa;AACb6B,MAAAA,kBAAkB;AACnB,KAJD,MAIO;AACL,YAAMzC,WAAW,CAACiD,cAAZ,CAA2B7B,kBAA3B,CAAN;AACAR,MAAAA,aAAa;AACb6B,MAAAA,kBAAkB;AACnB;AACF,GAfD;;AAiBA,QAAMS,4BAA4B,GAAG,MAAM;AACzC,QAAI,CAACxB,UAAL,EAAiB;AACfxB,MAAAA,0BAA0B;AAC3B,KAFD,MAEO;AACLe,MAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACD;AACF,GAND;;AAQA,QAAMkC,YAAY,GAAG,MAAM;AACzBf,IAAAA,SAAS,CAACgB,OAAV,CAAkB,MAAOC,EAAP,IAAc;AAC9B,YAAMC,MAAM,GAAG,MAAMrD,SAAS,CAACsD,aAAV,CAAwBF,EAAxB,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;AACD,KAHD;AAID,GALD;;AAOA,SACE;AAAK,IAAA,KAAK,EAAEC,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAED,MAAM,CAACE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEF,MAAM,CAACG,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOzB,IAAP,CADF,EAEE;AAAM,IAAA,KAAK,EAAEsB,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK9B,aADL,YAC0BC,aAD1B,CAHF,EAME;AAAM,IAAA,KAAK,EAAEyB,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmBzC,UAAU,CAAC0C,OAAX,CAAmB,CAAnB,CAAnB,CAPF,EAQE;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAevC,IAAI,CAACwC,OAAL,CAAa,CAAb,CAAf,CATF,CADF,EAYGnD,WAAW,IACV;AAAK,IAAA,KAAK,EAAE8C,MAAM,CAACM,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEN,MAAM,CAACO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEnB,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AACE,IAAA,KAAK,kCACAY,MAAM,CAACQ,IADP;AAEHC,MAAAA,KAAK,EAAEhD,kBAAkB,GAAGX,aAAH,GAAmB;AAFzC,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,GAAE6B,IAAK,QAAf,CATF,CADF,EAYE;AAAM,IAAA,KAAK,EAAE;AAAE+B,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAZF,EAaE;AAAK,IAAA,KAAK,EAAEV,MAAM,CAACO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEhB,4BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAqB,IAAA,KAAK,EAAES,MAAM,CAACQ,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMpD,0BAA0B,CAAC,IAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEG,QAAQ,CAACoD,MAAO,WADtB,CAJF,CAbF,CAbJ,CADF,EAsCE;AAAK,IAAA,KAAK,EAAEX,MAAM,CAAChD,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BqB,IAA5B,CAtCF,EAuCE,MAAC,eAAD;AACE,IAAA,aAAa,EAAEQ,aADjB;AAEE,IAAA,QAAQ,EAAET,GAFZ;AAGE,IAAA,cAAc,EAAEf,wBAHlB;AAIE,IAAA,kBAAkB,EAAEC,4BAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,EA6CE,MAAC,YAAD;AACE,IAAA,QAAQ,EAAEC,QADZ;AAEE,IAAA,cAAc,EAAEJ,sBAFlB;AAGE,IAAA,kBAAkB,EAAEC,0BAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7CF,CADF;AAqDD,CA1ID;;AA4IA,MAAM4C,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTW,IAAAA,OAAO,EAAE,EADA;AAETC,IAAAA,eAAe,EAAEhE,UAFR;AAGT4D,IAAAA,KAAK,EAAE,MAHE;AAITK,IAAAA,YAAY,EAAE,EAJL;AAKTC,IAAAA,SAAS,EAAE,iCALF;AAMTC,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,KAAK,EAAE;AAPE,GADE;AAUbf,EAAAA,MAAM,EAAE;AACNgB,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,cAAc,EAAE;AAFV,GAVK;AAcbhB,EAAAA,eAAe,EAAE;AACfe,IAAAA,OAAO,EAAE,MADM;AAEfE,IAAAA,QAAQ,EAAE;AAFK,GAdJ;AAkBbd,EAAAA,UAAU,EAAE;AACVY,IAAAA,OAAO,EAAE;AADC,GAlBC;AAqBbX,EAAAA,MAAM,EAAE;AACNW,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,cAAc,EAAE;AAFV,GArBK;AAyBbX,EAAAA,IAAI,EAAE;AACJa,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,WAAW,EAAE;AAFT,GAzBO;AA6BbtE,EAAAA,MAAM,EAAE;AACNuE,IAAAA,SAAS,EAAE,EADL;AAENC,IAAAA,SAAS,EAAE;AAFL,GA7BK;AAiCbpB,EAAAA,OAAO,EAAE;AACPM,IAAAA,MAAM,EAAE;AADD;AAjCI,CAAf;AAsCA,eAAe3D,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Review } from \"../types\";\nimport commentApi from \"../api/comment\";\nimport reactionApi from \"../api/reaction\";\nimport reviewApi from \"../api/review\";\nimport { triggerRequireLoginMessage } from \"../utils/helpers\";\n\nimport AddCommentModal from \"./AddCommentModal\";\nimport Button from \"./Button\";\nimport CommentModal from \"./CommentsModal\";\nimport CommentOutlinedIcon from \"../icons/CommentOutlinedIcon\";\nimport LikeOutlinedIcon from \"../icons/LikeOutlinedIcon\";\nimport { reviewBlue, ratingsYellow } from \"../styles/colors\";\n\ninterface ReviewCardProps {\n  review: Review;\n  updateReviews: () => void;\n  showActions?: boolean;\n}\n\nconst ReviewCard: React.FC<ReviewCardProps> = ({\n  review,\n  updateReviews,\n  showActions = true,\n}) => {\n  const [isCommentsModalVisible, setCommentsModalVisibility] = useState(false);\n  const [isAddCommentModalVisible, setAddCommentModalVisibility] = useState(\n    false\n  );\n  const [comments, setComments] = useState([]);\n  const [userLikeReactionId, setUserLikeReactionId] = useState(\"\");\n  const [difficulty, setDifficulty] = useState(3);\n  const [star, setStar] = useState(3);\n\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  const userId = useSelector((state) => state.auth.user?._id);\n\n  const {\n    user,\n    text,\n    acadYearTaken,\n    semesterTaken,\n    reaction,\n    _id,\n    ratingIds,\n  } = review;\n  const name = user?.name;\n  const like = reaction?.like?.count ?? 0;\n\n  useEffect(() => {\n    fetchComments();\n    checkIsLikedByUser();\n  }, []);\n\n  const fetchComments = async () => {\n    const fetchedComments = await commentApi.getCommentsOfReview(_id);\n    setComments(fetchedComments);\n  };\n\n  const checkIsLikedByUser = async () => {\n    try {\n      const likeReaction = await reactionApi.getReaction(\n        \"review\",\n        _id,\n        userId,\n        \"like\"\n      );\n      setUserLikeReactionId(likeReaction._id);\n    } catch (err) {\n      setUserLikeReactionId(\"\");\n    }\n  };\n\n  const onLikeReview = async () => {\n    if (!isLoggedIn) {\n      triggerRequireLoginMessage();\n      return;\n    }\n\n    if (!userLikeReactionId) {\n      await reactionApi.addReaction(\"review\", _id, userId, \"like\");\n      updateReviews();\n      checkIsLikedByUser();\n    } else {\n      await reactionApi.deleteReaction(userLikeReactionId);\n      updateReviews();\n      checkIsLikedByUser();\n    }\n  };\n\n  const toggleCommentModalVisibility = () => {\n    if (!isLoggedIn) {\n      triggerRequireLoginMessage();\n    } else {\n      setAddCommentModalVisibility(true);\n    }\n  };\n\n  const fetchRatings = () => {\n    ratingIds.forEach(async (id) => {\n      const rating = await reviewApi.getRatingById(id);\n      console.log(rating.type);\n    });\n  };\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.header}>\n        <div style={styles.userInformation}>\n          <span>{name}</span>\n          <span style={styles.divider}>|</span>\n          <span>\n            AY{acadYearTaken}, Sem {semesterTaken}\n          </span>\n          <span style={styles.divider}>|</span>\n          <span>Difficulty: {difficulty.toFixed(1)}</span>\n          <span style={styles.divider}>|</span>\n          <span>Rating: {star.toFixed(1)}</span>\n        </div>\n        {showActions && (\n          <div style={styles.actionsBar}>\n            <div style={styles.action}>\n              <Button onClick={onLikeReview}>\n                <LikeOutlinedIcon\n                  style={{\n                    ...styles.icon,\n                    color: userLikeReactionId ? ratingsYellow : \"#fff\",\n                  }}\n                />\n              </Button>\n              <span>{`${like} Likes`}</span>\n            </div>\n            <span style={{ margin: \"0px 10px\" }}>|</span>\n            <div style={styles.action}>\n              <Button onClick={toggleCommentModalVisibility}>\n                <CommentOutlinedIcon style={styles.icon} />\n              </Button>\n              <Button onClick={() => setCommentsModalVisibility(true)}>\n                {`${comments.length} Comments`}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n      <div style={styles.review}>{text}</div>\n      <AddCommentModal\n        fetchComments={fetchComments}\n        reviewId={_id}\n        isModalVisible={isAddCommentModalVisible}\n        setModalVisibility={setAddCommentModalVisibility}\n      />\n      <CommentModal\n        comments={comments}\n        isModalVisible={isCommentsModalVisible}\n        setModalVisibility={setCommentsModalVisibility}\n      />\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    padding: 30,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 15,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    marginBottom: 15,\n    width: \"100%\",\n  },\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  userInformation: {\n    display: \"flex\",\n    flexWrap: \"wrap\" as \"wrap\",\n  },\n  actionsBar: {\n    display: \"flex\",\n  },\n  action: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  icon: {\n    height: 20,\n    marginRight: 10,\n  },\n  review: {\n    marginTop: 10,\n    textAlign: \"justify\" as \"justify\",\n  },\n  divider: {\n    margin: \"0px 10px\",\n  },\n};\n\nexport default ReviewCard;\n"]},"metadata":{},"sourceType":"module"}