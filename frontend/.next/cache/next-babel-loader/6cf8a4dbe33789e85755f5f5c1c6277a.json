{"ast":null,"code":"import axios from \"axios\";\nimport queryString from \"query-string\";\nconst baseUrl = \"http://localhost:8080/api/event\";\n\nconst addEvent = async (userId, sub, subId, type) => {\n  const response = await axios.post(baseUrl, {\n    userId,\n    sub,\n    subId,\n    type\n  });\n  return response.data;\n};\n\nconst getEvent = async (subscriberType, subscriberId, userId, eventType) => {\n  const query = queryString.stringify({\n    sub: subscriberType,\n    subId: subscriberId,\n    userId,\n    type: eventType\n  });\n  const response = await axios.get(`${baseUrl}/find/?${query}`);\n  return response.data;\n};\n\nconst deleteEvent = async (subscriberType, subscriberId, userId, eventType) => {\n  await axios.delete(baseUrl, {\n    params: {\n      sub: subscriberType,\n      subId: subscriberId,\n      userId,\n      type: eventType\n    }\n  });\n};\n\nexport default {\n  addEvent,\n  getEvent,\n  deleteEvent\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/event.ts"],"names":["axios","queryString","baseUrl","addEvent","userId","sub","subId","type","response","post","data","getEvent","subscriberType","subscriberId","eventType","query","stringify","get","deleteEvent","delete","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,MAAMC,OAAO,GAAG,iCAAhB;;AAEA,MAAMC,QAAQ,GAAG,OACfC,MADe,EAEfC,GAFe,EAGfC,KAHe,EAIfC,IAJe,KAKZ;AACH,QAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAWP,OAAX,EAAoB;AACzCE,IAAAA,MADyC;AAEzCC,IAAAA,GAFyC;AAGzCC,IAAAA,KAHyC;AAIzCC,IAAAA;AAJyC,GAApB,CAAvB;AAOA,SAAOC,QAAQ,CAACE,IAAhB;AACD,CAdD;;AAgBA,MAAMC,QAAQ,GAAG,OAAOC,cAAP,EAAuBC,YAAvB,EAAqCT,MAArC,EAA6CU,SAA7C,KAA2D;AAC1E,QAAMC,KAAK,GAAGd,WAAW,CAACe,SAAZ,CAAsB;AAClCX,IAAAA,GAAG,EAAEO,cAD6B;AAElCN,IAAAA,KAAK,EAAEO,YAF2B;AAGlCT,IAAAA,MAHkC;AAIlCG,IAAAA,IAAI,EAAEO;AAJ4B,GAAtB,CAAd;AAMA,QAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACiB,GAAN,CAAW,GAAEf,OAAQ,UAASa,KAAM,EAApC,CAAvB;AAEA,SAAOP,QAAQ,CAACE,IAAhB;AACD,CAVD;;AAYA,MAAMQ,WAAW,GAAG,OAAON,cAAP,EAAuBC,YAAvB,EAAqCT,MAArC,EAA6CU,SAA7C,KAA2D;AAC7E,QAAMd,KAAK,CAACmB,MAAN,CAAajB,OAAb,EAAsB;AAC1BkB,IAAAA,MAAM,EAAE;AACNf,MAAAA,GAAG,EAAEO,cADC;AAENN,MAAAA,KAAK,EAAEO,YAFD;AAGNT,MAAAA,MAHM;AAING,MAAAA,IAAI,EAAEO;AAJA;AADkB,GAAtB,CAAN;AAQD,CATD;;AAWA,eAAe;AACbX,EAAAA,QADa;AAEbQ,EAAAA,QAFa;AAGbO,EAAAA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nconst baseUrl = \"http://localhost:8080/api/event\";\n\nconst addEvent = async (\n  userId: string,\n  sub: \"course\" | \"mod\" | \"review\" | \"school\",\n  subId: string,\n  type: \"view\" | \"like\"\n) => {\n  const response = await axios.post(baseUrl, {\n    userId,\n    sub,\n    subId,\n    type,\n  });\n\n  return response.data;\n};\n\nconst getEvent = async (subscriberType, subscriberId, userId, eventType) => {\n  const query = queryString.stringify({\n    sub: subscriberType,\n    subId: subscriberId,\n    userId,\n    type: eventType,\n  });\n  const response = await axios.get(`${baseUrl}/find/?${query}`);\n\n  return response.data;\n};\n\nconst deleteEvent = async (subscriberType, subscriberId, userId, eventType) => {\n  await axios.delete(baseUrl, {\n    params: {\n      sub: subscriberType,\n      subId: subscriberId,\n      userId,\n      type: eventType,\n    },\n  });\n};\n\nexport default {\n  addEvent,\n  getEvent,\n  deleteEvent,\n};\n"]},"metadata":{},"sourceType":"module"}