{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nvar reviewBaseUrl = \"http://localhost:8080/api/review\";\nvar ratingBaseUrl = \"http://localhost:8080/api/rating\";\n\nvar getReviewsOfModule = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(reviewBaseUrl, \"/mod/\").concat(modId));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getReviewsOfModule(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getReviewsOfUser = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"\".concat(reviewBaseUrl, \"/user/\").concat(userId), {\n              withCredentials: true\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getReviewsOfUser(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar addReviewOfModule = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(review, modId, userId) {\n    var text, semesterTaken, acadYearTaken, response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            text = review.text, semesterTaken = review.semesterTaken, acadYearTaken = review.acadYearTaken;\n            _context3.next = 3;\n            return axios.post(reviewBaseUrl, {\n              text: text,\n              modId: modId,\n              userId: userId,\n              semesterTaken: semesterTaken,\n              acadYearTaken: acadYearTaken // workload,\n\n            }, {\n              withCredentials: true\n            });\n\n          case 3:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.status);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function addReviewOfModule(_x3, _x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar updateReviewOfModule = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(review, modId, userId, reviewId) {\n    var text, semesterTaken, acadYearTaken, response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            text = review.text, semesterTaken = review.semesterTaken, acadYearTaken = review.acadYearTaken;\n            _context4.next = 3;\n            return axios.put(\"\".concat(reviewBaseUrl, \"/\").concat(reviewId), {\n              text: text,\n              modId: modId,\n              userId: userId,\n              semesterTaken: semesterTaken,\n              acadYearTaken: acadYearTaken // workload,\n\n            }, {\n              withCredentials: true\n            });\n\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response.status);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function updateReviewOfModule(_x6, _x7, _x8, _x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar addRating = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(value, type, userId, subId, sub) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return axios.post(ratingBaseUrl, {\n              type: type,\n              userId: userId,\n              subId: subId,\n              value: value,\n              sub: sub\n            }, {\n              withCredentials: true\n            });\n\n          case 2:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response.status);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function addRating(_x10, _x11, _x12, _x13, _x14) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar getRating = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(subscriberType, userId, ratingType) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            query = queryString.stringify({\n              sub: subscriberType,\n              userId: userId,\n              type: ratingType\n            });\n            _context6.next = 3;\n            return axios.get(\"\".concat(ratingBaseUrl, \"/?\").concat(query));\n\n          case 3:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getRating(_x15, _x16, _x17) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar updateRating = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(value, type, userId, subId, sub, ratingId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return axios.put(\"\".concat(ratingBaseUrl, \"/\").concat(ratingId), {\n              sub: sub,\n              subId: subId,\n              userId: userId,\n              type: type,\n              value: value\n            }, {\n              withCredentials: true\n            });\n\n          case 2:\n            response = _context7.sent;\n            return _context7.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function updateRating(_x18, _x19, _x20, _x21, _x22, _x23) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getReviewsOfModule: getReviewsOfModule,\n  getReviewsOfUser: getReviewsOfUser,\n  addReviewOfModule: addReviewOfModule,\n  addRating: addRating,\n  getRating: getRating,\n  updateRating: updateRating,\n  updateReviewOfModule: updateReviewOfModule\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/review.ts"],"names":["axios","queryString","reviewBaseUrl","ratingBaseUrl","getReviewsOfModule","modId","get","response","data","getReviewsOfUser","userId","withCredentials","addReviewOfModule","review","text","semesterTaken","acadYearTaken","post","status","updateReviewOfModule","reviewId","put","addRating","value","type","subId","sub","getRating","subscriberType","ratingType","query","stringify","updateRating","ratingId"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,aAAa,GAAG,kCAAtB;;AASA,IAAMC,kBAAkB;AAAA,sEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFL,KAAK,CAACM,GAAN,WAAaJ,aAAb,kBAAkCG,KAAlC,EADE;;AAAA;AACnBE,YAAAA,QADmB;AAAA,6CAElBA,QAAQ,CAACC,IAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBJ,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAKA,IAAMK,gBAAgB;AAAA,uEAAG,kBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAV,KAAK,CAACM,GAAN,WAAaJ,aAAb,mBAAmCQ,MAAnC,GAA6C;AAClEC,cAAAA,eAAe,EAAE;AADiD,aAA7C,CADA;;AAAA;AACjBJ,YAAAA,QADiB;AAAA,8CAIhBA,QAAQ,CAACC,IAJO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBC,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAOA,IAAMG,iBAAiB;AAAA,uEAAG,kBACxBC,MADwB,EAExBR,KAFwB,EAGxBK,MAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhBI,YAAAA,IALgB,GAKuBD,MALvB,CAKhBC,IALgB,EAKVC,aALU,GAKuBF,MALvB,CAKVE,aALU,EAKKC,aALL,GAKuBH,MALvB,CAKKG,aALL;AAAA;AAAA,mBAMDhB,KAAK,CAACiB,IAAN,CACrBf,aADqB,EAErB;AACEY,cAAAA,IAAI,EAAJA,IADF;AAEET,cAAAA,KAAK,EAALA,KAFF;AAGEK,cAAAA,MAAM,EAANA,MAHF;AAIEK,cAAAA,aAAa,EAAbA,aAJF;AAKEC,cAAAA,aAAa,EAAbA,aALF,CAME;;AANF,aAFqB,EAUrB;AACEL,cAAAA,eAAe,EAAE;AADnB,aAVqB,CANC;;AAAA;AAMlBJ,YAAAA,QANkB;AAAA,8CAqBjBA,QAAQ,CAACW,MArBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBN,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAwBA,IAAMO,oBAAoB;AAAA,uEAAG,kBAC3BN,MAD2B,EAE3BR,KAF2B,EAG3BK,MAH2B,EAI3BU,QAJ2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnBN,YAAAA,IANmB,GAMoBD,MANpB,CAMnBC,IANmB,EAMbC,aANa,GAMoBF,MANpB,CAMbE,aANa,EAMEC,aANF,GAMoBH,MANpB,CAMEG,aANF;AAAA;AAAA,mBAOJhB,KAAK,CAACqB,GAAN,WAClBnB,aADkB,cACDkB,QADC,GAErB;AACEN,cAAAA,IAAI,EAAJA,IADF;AAEET,cAAAA,KAAK,EAALA,KAFF;AAGEK,cAAAA,MAAM,EAANA,MAHF;AAIEK,cAAAA,aAAa,EAAbA,aAJF;AAKEC,cAAAA,aAAa,EAAbA,aALF,CAME;;AANF,aAFqB,EAUrB;AACEL,cAAAA,eAAe,EAAE;AADnB,aAVqB,CAPI;;AAAA;AAOrBJ,YAAAA,QAPqB;AAAA,8CAsBpBA,QAAQ,CAACW,MAtBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBC,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;AAyBA,IAAMG,SAAS;AAAA,uEAAG,kBAChBC,KADgB,EAEhBC,IAFgB,EAGhBd,MAHgB,EAIhBe,KAJgB,EAKhBC,GALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOO1B,KAAK,CAACiB,IAAN,CACrBd,aADqB,EAErB;AACEqB,cAAAA,IAAI,EAAJA,IADF;AAEEd,cAAAA,MAAM,EAANA,MAFF;AAGEe,cAAAA,KAAK,EAALA,KAHF;AAIEF,cAAAA,KAAK,EAALA,KAJF;AAKEG,cAAAA,GAAG,EAAHA;AALF,aAFqB,EASrB;AACEf,cAAAA,eAAe,EAAE;AADnB,aATqB,CAPP;;AAAA;AAOVJ,YAAAA,QAPU;AAAA,8CAqBTA,QAAQ,CAACW,MArBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATI,SAAS;AAAA;AAAA;AAAA,GAAf;;AAwBA,IAAMK,SAAS;AAAA,uEAAG,kBAAOC,cAAP,EAAuBlB,MAAvB,EAA+BmB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,KADU,GACF7B,WAAW,CAAC8B,SAAZ,CAAsB;AAClCL,cAAAA,GAAG,EAAEE,cAD6B;AAElClB,cAAAA,MAAM,EAANA,MAFkC;AAGlCc,cAAAA,IAAI,EAAEK;AAH4B,aAAtB,CADE;AAAA;AAAA,mBAMO7B,KAAK,CAACM,GAAN,WAAaH,aAAb,eAA+B2B,KAA/B,EANP;;AAAA;AAMVvB,YAAAA,QANU;AAAA,8CAOTA,QAAQ,CAACC,IAPA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATmB,SAAS;AAAA;AAAA;AAAA,GAAf;;AAUA,IAAMK,YAAY;AAAA,uEAAG,kBACnBT,KADmB,EAEnBC,IAFmB,EAGnBd,MAHmB,EAInBe,KAJmB,EAKnBC,GALmB,EAMnBO,QANmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQIjC,KAAK,CAACqB,GAAN,WAClBlB,aADkB,cACD8B,QADC,GAErB;AACEP,cAAAA,GAAG,EAAHA,GADF;AAEED,cAAAA,KAAK,EAALA,KAFF;AAGEf,cAAAA,MAAM,EAANA,MAHF;AAIEc,cAAAA,IAAI,EAAJA,IAJF;AAKED,cAAAA,KAAK,EAALA;AALF,aAFqB,EASrB;AAAEZ,cAAAA,eAAe,EAAE;AAAnB,aATqB,CARJ;;AAAA;AAQbJ,YAAAA,QARa;AAAA,8CAmBZA,QAAQ,CAACC,IAnBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZwB,YAAY;AAAA;AAAA;AAAA,GAAlB;;AAsBA,eAAe;AACb5B,EAAAA,kBAAkB,EAAlBA,kBADa;AAEbK,EAAAA,gBAAgB,EAAhBA,gBAFa;AAGbG,EAAAA,iBAAiB,EAAjBA,iBAHa;AAIbU,EAAAA,SAAS,EAATA,SAJa;AAKbK,EAAAA,SAAS,EAATA,SALa;AAMbK,EAAAA,YAAY,EAAZA,YANa;AAObb,EAAAA,oBAAoB,EAApBA;AAPa,CAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\n\nconst reviewBaseUrl = \"http://localhost:8080/api/review\";\nconst ratingBaseUrl = \"http://localhost:8080/api/rating\";\n\ninterface ReviewToSubmit {\n  text: string;\n  semesterTaken: number;\n  acadYearTaken: string;\n  // workload: number;\n}\n\nconst getReviewsOfModule = async (modId) => {\n  const response = await axios.get(`${reviewBaseUrl}/mod/${modId}`);\n  return response.data;\n};\n\nconst getReviewsOfUser = async (userId) => {\n  const response = await axios.get(`${reviewBaseUrl}/user/${userId}`, {\n    withCredentials: true,\n  });\n  return response.data;\n};\n\nconst addReviewOfModule = async (\n  review: ReviewToSubmit,\n  modId: string,\n  userId: string\n) => {\n  const { text, semesterTaken, acadYearTaken } = review;\n  const response = await axios.post(\n    reviewBaseUrl,\n    {\n      text,\n      modId,\n      userId,\n      semesterTaken,\n      acadYearTaken,\n      // workload,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n\n  return response.status;\n};\n\nconst updateReviewOfModule = async (\n  review: ReviewToSubmit,\n  modId: string,\n  userId: string,\n  reviewId: string\n) => {\n  const { text, semesterTaken, acadYearTaken } = review;\n  const response = await axios.put(\n    `${reviewBaseUrl}/${reviewId}`,\n    {\n      text,\n      modId,\n      userId,\n      semesterTaken,\n      acadYearTaken,\n      // workload,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n\n  return response.status;\n};\n\nconst addRating = async (\n  value: number,\n  type: \"difficulty\" | \"star\",\n  userId: string,\n  subId: string,\n  sub: \"mod\" | \"school\" | \"course\"\n) => {\n  const response = await axios.post(\n    ratingBaseUrl,\n    {\n      type,\n      userId,\n      subId,\n      value,\n      sub,\n    },\n    {\n      withCredentials: true,\n    }\n  );\n\n  return response.status;\n};\n\nconst getRating = async (subscriberType, userId, ratingType) => {\n  const query = queryString.stringify({\n    sub: subscriberType,\n    userId,\n    type: ratingType,\n  });\n  const response = await axios.get(`${ratingBaseUrl}/?${query}`);\n  return response.data;\n};\n\nconst updateRating = async (\n  value: number,\n  type: \"difficulty\" | \"star\",\n  userId: string,\n  subId: string,\n  sub: \"mod\" | \"school\" | \"course\",\n  ratingId: string\n) => {\n  const response = await axios.put(\n    `${ratingBaseUrl}/${ratingId}`,\n    {\n      sub,\n      subId,\n      userId,\n      type,\n      value,\n    },\n    { withCredentials: true }\n  );\n  return response.data;\n};\n\nexport default {\n  getReviewsOfModule,\n  getReviewsOfUser,\n  addReviewOfModule,\n  addRating,\n  getRating,\n  updateRating,\n  updateReviewOfModule,\n};\n"]},"metadata":{},"sourceType":"module"}