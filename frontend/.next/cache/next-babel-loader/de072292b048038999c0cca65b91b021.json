{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nvar baseUrl = \"http://localhost:8080/api/school\";\n\nvar searchSchools = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(searchTerm) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = queryString.stringify({\n              s: searchTerm,\n              page: 1,\n              limit: 1000\n            });\n            _context.next = 3;\n            return axios.get(\"\".concat(baseUrl, \"/?\").concat(query));\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchSchools(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  searchSchools: searchSchools\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/school.ts"],"names":["axios","queryString","baseUrl","searchSchools","searchTerm","query","stringify","s","page","limit","get","response","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,IAAMC,OAAO,GAAG,kCAAhB;;AAEA,IAAMC,aAAa;AAAA,sEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,KADc,GACNJ,WAAW,CAACK,SAAZ,CAAsB;AAClCC,cAAAA,CAAC,EAAEH,UAD+B;AAElCI,cAAAA,IAAI,EAAE,CAF4B;AAGlCC,cAAAA,KAAK,EAAE;AAH2B,aAAtB,CADM;AAAA;AAAA,mBAMGT,KAAK,CAACU,GAAN,WAAaR,OAAb,eAAyBG,KAAzB,EANH;;AAAA;AAMdM,YAAAA,QANc;AAAA,6CAObA,QAAQ,CAACC,IAPI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbT,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAUA,eAAe;AACbA,EAAAA,aAAa,EAAbA;AADa,CAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nconst baseUrl = \"http://localhost:8080/api/school\";\n\nconst searchSchools = async (searchTerm: string) => {\n  const query = queryString.stringify({\n    s: searchTerm,\n    page: 1,\n    limit: 1000,\n  });\n  const response = await axios.get(`${baseUrl}/?${query}`);\n  return response.data;\n};\n\nexport default {\n  searchSchools,\n};\n"]},"metadata":{},"sourceType":"module"}