{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { Modal, Button, Form, Input, Divider, Select } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, CalendarOutlined } from '@ant-design/icons';\nimport { codeBlue } from \"../styles/colors\";\nimport axios from 'axios';\nimport authService from '../services/authentication';\n\nvar SignupModal = function SignupModal(toggles) {\n  _s();\n\n  var _useState = useState([{\n    \"schoolId\": \"\",\n    \"schoolName\": \"\"\n  }]),\n      inputUniversityValues = _useState[0],\n      setUniversityInputValues = _useState[1];\n\n  var _useState2 = useState([\"Computer Science\"]),\n      inputCourseValues = _useState2[0],\n      setCourseInputValues = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      universityName = _useState3[0],\n      setUniversityName = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      courseName = _useState4[0],\n      setCourseName = _useState4[1];\n\n  useEffect(function () {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  var populateSchools = function populateSchools() {\n    axios({\n      method: 'get',\n      url: '/school',\n      baseURL: 'http://localhost:8080/api'\n    }).then(function (response) {\n      var schoolsInDatabase = response.data.map(function (obj) {\n        var universityValue = {\n          \"schoolId\": \"\",\n          \"schoolName\": \"\"\n        };\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setUniversityInputValues(schoolsInDatabase);\n      console.log('Now uni has these values');\n      console.log(inputUniversityValues);\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  var populateCourses = function populateCourses() {\n    axios({\n      method: 'get',\n      url: '/course',\n      baseURL: 'http://localhost:8080/api'\n    }).then(function (response) {\n      var coursesInDatabase = response.data.map(function (obj) {\n        return obj.name;\n      });\n      setCourseInputValues(coursesInDatabase);\n      console.log(response.data);\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  var onFormFinish = function onFormFinish(signUpValues) {\n    console.log(signUpValues);\n    authService.signUp(signUpValues);\n  };\n\n  var onUniversityChange = function onUniversityChange(event) {\n    console.log(\"changing\");\n    setUniversityName(event.target.value);\n  };\n\n  var onCourseChange = function onCourseChange(event) {\n    setCourseName(event.target.value);\n  };\n\n  var addUniversityItem = function addUniversityItem() {\n    setUniversityName(\"\"); // if (universityName.trim() !== \"\" && !inputUniversityValues.includes(universityName)) {\n    //   console.log('adduniItem');\n    //   setUniversityInputValues([...inputUniversityValues, universityName.trim()]);\n    // }\n  };\n\n  var addCourseItem = function addCourseItem() {\n    console.log('adduniItem');\n    setCourseName(\"\");\n\n    if (courseName.trim() !== \"\" && !inputCourseValues.includes(courseName)) {\n      setCourseInputValues([].concat(_toConsumableArray(inputCourseValues), [courseName.trim()]));\n    }\n  };\n\n  function renderAddition(addition) {\n    if (addition == \"university\") {\n      return __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        style: {\n          flex: 'auto'\n        },\n        value: universityName,\n        onChange: onUniversityChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }), __jsx(\"a\", {\n        style: {\n          flex: 'none',\n          padding: '8px',\n          display: 'block',\n          cursor: 'pointer'\n        },\n        onClick: addUniversityItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, \"ADD\"));\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'nowrap',\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        style: {\n          flex: 'auto'\n        },\n        value: courseName,\n        onChange: onCourseChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }), __jsx(\"a\", {\n        style: {\n          flex: 'none',\n          padding: '8px',\n          display: 'block',\n          cursor: 'pointer'\n        },\n        onClick: addCourseItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, \"ADD\"));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    visible: true,\n    title: __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \" SIGNUP \"),\n    centered: true,\n    onCancel: toggles.toggles.toggleSignupModal,\n    footer: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    name: \"normal_signup\",\n    className: \"signup-form\",\n    initialValues: {},\n    onFinish: onFormFinish,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: 'Please enter your full name!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Full Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"emailaddress\",\n    rules: [{\n      required: true,\n      message: 'Please enter an email address!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 23\n      }\n    }),\n    placeholder: \"Email Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"userpassword\",\n    rules: [{\n      required: true,\n      message: 'Please enter a password!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    style: {\n      marginBottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"yearofstudy\",\n    rules: [{\n      required: true,\n      message: 'Please enter your Year of Study!'\n    }],\n    style: {\n      display: 'inline-block',\n      width: 'calc(50% - 8px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(CalendarOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 30\n      }\n    }),\n    placeholder: \"Year Of Study\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }))), __jsx(Form.Item, {\n    name: \"university\",\n    rules: [{\n      required: true,\n      message: 'Please enter your University!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"University\",\n    dropdownRender: function dropdownRender(menu) {\n      return __jsx(React.Fragment, null, menu, __jsx(Divider, {\n        style: {\n          margin: '4px 0'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }), renderAddition(\"university\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, inputUniversityValues.map(function (item) {\n    return __jsx(Select.Option, {\n      key: item.schoolName,\n      value: item.schoolName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, item.schoolName);\n  }))), __jsx(Form.Item, {\n    name: \"course\",\n    rules: [{\n      required: true,\n      message: 'Please enter the name of the course you are enrolled in!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Course Of Study\",\n    value: \"Default\",\n    dropdownRender: function dropdownRender(menu) {\n      return __jsx(React.Fragment, null, menu, __jsx(Divider, {\n        style: {\n          margin: '4px 0'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }), renderAddition(\"course\"));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, inputCourseValues.map(function (item) {\n    return __jsx(Select.Option, {\n      key: item,\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, item);\n  }))), __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\"))), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Log in \", __jsx(\"a\", {\n    onClick: function onClick() {\n      return toggles.toggles.switchModals();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 43\n    }\n  }, \" here\"))));\n};\n\n_s(SignupModal, \"EiHDSZIqcmyx9llBvmAazxxBpls=\");\n\n_c = SignupModal;\nvar styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue\n  }\n};\nexport default SignupModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupModal\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/SignupModal.tsx"],"names":["useState","useEffect","Modal","Button","Form","Input","Divider","Select","UserOutlined","LockOutlined","MailOutlined","CalendarOutlined","codeBlue","axios","authService","SignupModal","toggles","inputUniversityValues","setUniversityInputValues","inputCourseValues","setCourseInputValues","universityName","setUniversityName","courseName","setCourseName","populateSchools","populateCourses","method","url","baseURL","then","response","schoolsInDatabase","data","map","obj","universityValue","schoolId","_id","schoolName","name","console","log","error","coursesInDatabase","onFormFinish","signUpValues","signUp","onUniversityChange","event","target","value","onCourseChange","addUniversityItem","addCourseItem","trim","includes","renderAddition","addition","display","flexWrap","padding","flex","cursor","textAlign","toggleSignupModal","required","message","marginBottom","width","menu","margin","item","styles","loginFormButton","switchModals","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { Modal, Button, Form, Input, Divider, Select, DatePicker } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, LaptopOutlined, CalendarOutlined, PlusOutlined } from '@ant-design/icons';\nimport { codeBlue } from \"../styles/colors\";\n\nimport axios from 'axios';\nimport authService from '../services/authentication';\n\n\n\ninterface SignupModalProps {\n  toggles: {\n    toggleSignupModal: () => void;\n    switchModals: () => void;\n  }\n}\n\nconst SignupModal: React.FC<SignupModalProps> = (toggles) => {\n\n  const [inputUniversityValues, setUniversityInputValues] = useState([{\"schoolId\": \"\", \"schoolName\": \"\",}]);\n  const [inputCourseValues, setCourseInputValues] = useState([\"Computer Science\"]);\n  const [universityName, setUniversityName] = useState(\"\");\n  const [courseName, setCourseName] = useState(\"\");\n\n  useEffect(() => {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  const populateSchools = () => {\n    axios({\n      method: 'get',\n      url: '/school',\n      baseURL: 'http://localhost:8080/api',\n    }).then(function (response) {\n      const schoolsInDatabase = response.data.map(obj => {\n        const universityValue = {\"schoolId\": \"\", \"schoolName\": \"\"};\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setUniversityInputValues(schoolsInDatabase);\n      console.log('Now uni has these values');\n      console.log(inputUniversityValues);\n    }).then(function (error) {\n      console.log(error);\n    })\n  }\n\n  const populateCourses = () => {\n    axios({\n      method: 'get',\n      url: '/course',\n      baseURL: 'http://localhost:8080/api',\n    }).then(function (response) {\n      const coursesInDatabase = response.data.map(obj => obj.name);\n      setCourseInputValues(coursesInDatabase);\n      console.log(response.data);\n    }).then(function (error) {\n      console.log(error);\n    })\n  }\n\n  const onFormFinish = signUpValues => {\n    console.log(signUpValues);\n    authService.signUp(signUpValues);\n  }\n\n  const onUniversityChange = event => {\n    console.log(\"changing\");\n    setUniversityName(event.target.value);\n  };\n\n  const onCourseChange = event => {\n    setCourseName(event.target.value);\n  };\n\n  const addUniversityItem = () => {\n    setUniversityName(\"\");\n    // if (universityName.trim() !== \"\" && !inputUniversityValues.includes(universityName)) {\n    //   console.log('adduniItem');\n    //   setUniversityInputValues([...inputUniversityValues, universityName.trim()]);\n    // }\n  };\n\n  const addCourseItem = () => {\n    console.log('adduniItem');\n    setCourseName(\"\");\n    if (courseName.trim() !== \"\" && !inputCourseValues.includes(courseName)) {\n      setCourseInputValues([...inputCourseValues, courseName.trim()]);\n    }\n  };\n\n  function renderAddition(addition) {\n    if (addition == \"university\") {\n      return (\n        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n          <Input style={{ flex: 'auto' }} value={universityName} onChange={onUniversityChange} />\n          <a\n            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n            onClick={addUniversityItem}>\n            ADD\n            </a>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ display: 'flex', flexWrap: 'nowrap', padding: 8 }}>\n          <Input style={{ flex: 'auto' }} value={courseName} onChange={onCourseChange} />\n          <a\n            style={{ flex: 'none', padding: '8px', display: 'block', cursor: 'pointer' }}\n            onClick={addCourseItem}>\n            ADD\n            </a>\n        </div>\n      );\n    }\n  }\n\n\n  return (\n    <>\n\n      <Modal\n        visible={true}\n        title={\n          <div style={{ textAlign: \"center\" }}> SIGNUP </div>\n        }\n        centered\n        onCancel={toggles.toggles.toggleSignupModal}\n        footer={null}>\n        <Form\n          name=\"normal_signup\"\n          className=\"signup-form\"\n          initialValues={{}}\n          onFinish={onFormFinish}>\n          <Form.Item\n            name=\"fullname\"\n            rules={[{ required: true, message: 'Please enter your full name!' }]}\n          >\n            <Input prefix={<UserOutlined />} placeholder=\"Full Name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"emailaddress\"\n            rules={[{ required: true, message: 'Please enter an email address!' }]}\n          >\n            <Input\n              prefix={<MailOutlined />} placeholder=\"Email Address\" />\n          </Form.Item>\n          <Form.Item\n            name=\"userpassword\"\n            rules={[{ required: true, message: 'Please enter a password!' }]}\n          >\n            <Input\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item style={{ marginBottom: 0 }}>\n            <Form.Item\n              name=\"yearofstudy\"\n              rules={[{ required: true, message: 'Please enter your Year of Study!' }]}\n              style={{ display: 'inline-block', width: 'calc(50% - 8px)' }}\n            >\n              <Input prefix={<CalendarOutlined />} placeholder=\"Year Of Study\" />\n            </Form.Item>\n          </Form.Item>\n\n\n          <Form.Item\n            name=\"university\"\n            rules={[{ required: true, message: 'Please enter your University!' }]}\n          >\n            <Select\n              showSearch\n              style={{ width: \"100%\" }}\n              placeholder=\"University\"\n              dropdownRender={menu => (\n                <>\n                  {menu}\n                  <Divider style={{ margin: '4px 0' }} />\n                  {renderAddition(\"university\")}\n                </>\n              )}\n            >\n              {inputUniversityValues.map(item => (\n                <Select.Option key={item.schoolName} value={item.schoolName}>{item.schoolName}</Select.Option>\n              ))}\n            </Select>\n\n          </Form.Item>\n\n          <Form.Item\n            name=\"course\"\n            rules={[{ required: true, message: 'Please enter the name of the course you are enrolled in!' }]}\n          >\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder=\"Course Of Study\"\n              value=\"Default\"\n              dropdownRender={menu => (\n                <>\n                  {menu}\n                  <Divider style={{ margin: '4px 0' }} />\n                  {renderAddition(\"course\")}\n                </>\n              )}\n            >\n              {inputCourseValues.map(item => (\n                <Select.Option key={item} value={item}>{item}</Select.Option>\n              ))}\n            </Select>\n\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={styles.loginFormButton}>SIGN UP</Button>\n          </Form.Item>\n\n\n        </Form>\n        <Divider />\n        <div style={{ textAlign: \"center\" }}>\n          Already have an account? Log in <a onClick={() => toggles.toggles.switchModals()}> here</a>\n        </div>\n\n      </Modal>\n    </>\n  );\n\n\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue,\n  }\n}\n\n\nexport default SignupModal;"]},"metadata":{},"sourceType":"module"}