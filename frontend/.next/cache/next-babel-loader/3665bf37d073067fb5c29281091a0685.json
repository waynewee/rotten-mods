{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport authUtils from \"../utils/authentication\";\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { reviewBlue } from \"../styles/colors\";\nimport CustomButton from \"./Button\";\nimport AddCourseModal from \"./AddCourseModal\";\nimport { Button, Menu, Dropdown } from \"antd\";\nimport \"../styles/antd.less\";\n\nconst ProfileButton = () => {\n  const {\n    0: loginModalVisible,\n    1: setLoginModalVisible\n  } = useState(false);\n  const {\n    0: signupModalVisible,\n    1: setSignupModalVisible\n  } = useState(false);\n  const {\n    0: addCourseModalVisible,\n    1: setAddCourseModalVisible\n  } = useState(false);\n  const {\n    0: addSchoolModalVisible,\n    1: setAddSchoolModalVisible\n  } = useState(false);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(state => state.auth.user);\n  const router = useRouter();\n  useEffect(() => {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n  });\n\n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const navigateToProfilePage = () => {\n    router.push({\n      pathname: \"/profile\"\n    });\n  };\n\n  const logoutUser = () => {\n    authUtils.logOut();\n    router.push({\n      pathname: \"/home\"\n    });\n  };\n\n  const menu = __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Menu.Item, {\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"text\",\n    onClick: navigateToProfilePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Profile\")), __jsx(Menu.Item, {\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"text\",\n    onClick: logoutUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Log Out\")));\n\n  return __jsx(React.Fragment, null, isLoggedIn ? __jsx(React.Fragment, null, __jsx(Dropdown, {\n    overlay: menu,\n    placement: \"bottomCenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, user.fullName)), __jsx(Button, {\n    onClick: () => {\n      setAddCourseModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Add Course\")) : __jsx(CustomButton, {\n    style: styles.loginButton,\n    onClick: toggleLoginModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Log In\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }) : null, addCourseModalVisible ? __jsx(AddCourseModal, {\n    isModalVisible: addCourseModalVisible,\n    setModalVisibility: setAddCourseModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }) : null, addSchoolModalVisible ? __jsx(AddSchoolModal, {\n    isModalVisible: addSchoolModalVisible,\n    setModalVisibility: setAddSchoolModalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 20,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8\n  },\n  userName: {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15\n  },\n  loginButton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 10,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8\n  }\n};\nexport default ProfileButton;","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["useEffect","useState","useSelector","useRouter","authUtils","LoginModal","SignupModal","reviewBlue","CustomButton","AddCourseModal","Button","Menu","Dropdown","ProfileButton","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","addCourseModalVisible","setAddCourseModalVisible","addSchoolModalVisible","setAddSchoolModalVisible","isLoggedIn","state","auth","user","router","toggleLoginModal","toggleSignupModal","switchModals","navigateToProfilePage","push","pathname","logoutUser","logOut","menu","styles","container","fullName","loginButton","display","alignItems","margin","padding","backgroundColor","color","borderRadius","userName","paddingLeft","fontSize"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport { User } from \"../types\";\nimport authUtils from \"../utils/authentication\";\n\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { reviewBlue } from \"../styles/colors\";\nimport CustomButton from \"./Button\";\nimport AddCourseModal from \"./AddCourseModal\";\nimport { Button, Menu, Dropdown } from \"antd\";\nimport \"../styles/antd.less\";\n\nconst ProfileButton: React.FC = () => {\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const [signupModalVisible, setSignupModalVisible] = useState(false);\n  const [addCourseModalVisible, setAddCourseModalVisible] = useState(false);\n  const [addSchoolModalVisible, setAddSchoolModalVisible] = useState(false);\n\n  const isLoggedIn: boolean = useSelector((state) => state.auth.isLoggedIn);\n  const user: User = useSelector((state) => state.auth.user);\n\n  const router = useRouter();\n\n  useEffect(() => {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n  });\n\n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const navigateToProfilePage = () => {\n    router.push({\n      pathname: \"/profile\",\n    });\n  };\n\n  const logoutUser = () => {\n    authUtils.logOut();\n    router.push({\n      pathname: \"/home\",\n    });\n  }\n\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"1\">\n        <Button type=\"text\" onClick={navigateToProfilePage}>\n          Profile\n        </Button>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Button type=\"text\" onClick={logoutUser}>\n          Log Out\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <>\n          <Dropdown overlay={menu} placement=\"bottomCenter\">\n            <Button style={styles.container}>{user.fullName}</Button>\n          </Dropdown>\n          <Button onClick = {() => {setAddCourseModalVisible(true)}}> \n            Add Course\n          </Button>\n        </>\n      ) : (\n        <CustomButton style={styles.loginButton} onClick={toggleLoginModal}>\n          Log In\n        </CustomButton>\n      )}\n\n      {loginModalVisible && !isLoggedIn ? (\n        <LoginModal toggles={{ toggleLoginModal, switchModals }} />\n      ) : null}\n      {signupModalVisible ? (\n        <SignupModal toggles={{ toggleSignupModal, switchModals }} />\n      ) : null}\n      {addCourseModalVisible ? (\n        <AddCourseModal isModalVisible={addCourseModalVisible} setModalVisibility={setAddCourseModalVisible} />\n      ) : null}\n      {addSchoolModalVisible ? (\n        <AddSchoolModal isModalVisible={addSchoolModalVisible} setModalVisibility={setAddSchoolModalVisible} />\n      ) : null}\n    </>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 20,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8,\n  },\n  userName: {\n    alignItems: \"flex-end\",\n    paddingLeft: \"10px\",\n    margin: 0,\n    fontSize: 15,\n  },\n  loginButton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    margin: \"0px 10px\",\n    padding: 10,\n    backgroundColor: reviewBlue,\n    color: \"#fff\",\n    borderRadius: 8,\n  },\n};\n\nexport default ProfileButton;\n"]},"metadata":{},"sourceType":"module"}