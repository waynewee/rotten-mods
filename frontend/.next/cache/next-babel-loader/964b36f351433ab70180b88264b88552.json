{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { wrapper } from \"../redux/store\";\nimport authService from \"../utils/authentication\";\nimport { updatePersonalBookmarks, updatePersonalReviews, updatedPersonalPlannedModules } from \"../utils/helpers\";\nimport schoolApi from \"../api/school\";\nimport { FETCH_SCHOOLS } from \"../redux/constants\";\nimport Head from \"next/head\";\nimport Modal from \"react-modal\";\nimport NavBar from \"../components/Navbar\";\n\nvar ReduxApp = function ReduxApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  Modal.setAppElement(\"#body\");\n  var dispatch = useDispatch();\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  useEffect(function () {\n    attemptLogin();\n    fetchAllSchools();\n  }); // Fetch all personal modules if user is logged in\n\n  useEffect(function () {\n    if (userId) {\n      updatePersonalBookmarks(userId);\n      updatePersonalReviews(userId);\n      updatedPersonalPlannedModules(userId);\n    }\n  }, [userId]);\n  /**\n   *  Attempt login if login details are stored\n   */\n\n  var attemptLogin = function attemptLogin() {\n    var email = window.localStorage.getItem(\"ROTTENMODS_EMAIL\");\n    var password = window.localStorage.getItem(\"ROTTENMODS_PASSWORD\");\n    console.log(\"email is \" + email);\n\n    if (email && password) {\n      authService.logIn({\n        emailaddress: email,\n        password: password\n      });\n      console.log(\"information still stored in redux and logged in.\");\n    }\n  };\n  /**\n   * Fetch all available schools\n   */\n\n\n  var fetchAllSchools = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var schools;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return schoolApi.searchSchools(\"\");\n\n            case 2:\n              schools = _context.sent;\n              dispatch({\n                type: FETCH_SCHOOLS,\n                payload: schools\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchAllSchools() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"RottenMods\")), __jsx(\"div\", {\n    id: \"body\",\n    style: styles.layout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(NavBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })))));\n};\n\n_s(ReduxApp, \"LjpvPdJboahw08JeHrEKnh9sPfA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ReduxApp;\nvar styles = {\n  layout: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  container: {\n    padding: \"0px 80px 80px 80px\",\n    width: \"100vw\",\n    maxWidth: 1280,\n    overflowX: \"hidden\"\n  }\n};\nexport default _c2 = wrapper.withRedux(ReduxApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ReduxApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/pages/_app.tsx"],"names":["useEffect","useDispatch","useSelector","wrapper","authService","updatePersonalBookmarks","updatePersonalReviews","updatedPersonalPlannedModules","schoolApi","FETCH_SCHOOLS","Head","Modal","NavBar","ReduxApp","Component","pageProps","setAppElement","dispatch","userId","state","auth","user","_id","attemptLogin","fetchAllSchools","email","window","localStorage","getItem","password","console","log","logIn","emailaddress","searchSchools","schools","type","payload","styles","layout","container","display","flexDirection","alignContent","alignItems","justifyContent","padding","width","maxWidth","overflowX","withRedux"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport type { AppProps } from \"next/app\";\nimport { wrapper } from \"../redux/store\";\nimport authService from \"../utils/authentication\";\nimport {\n  updatePersonalBookmarks,\n  updatePersonalReviews,\n  updatedPersonalPlannedModules,\n} from \"../utils/helpers\";\nimport schoolApi from \"../api/school\";\nimport { FETCH_SCHOOLS } from \"../redux/constants\";\n\nimport Head from \"next/head\";\nimport Modal from \"react-modal\";\nimport NavBar from \"../components/Navbar\";\n\nconst ReduxApp: React.FC<AppProps> = ({ Component, pageProps }) => {\n  Modal.setAppElement(\"#body\");\n\n  const dispatch = useDispatch();\n  const userId = useSelector((state) => state.auth.user?._id);\n\n  useEffect(() => {\n    attemptLogin();\n    fetchAllSchools();\n  });\n\n  // Fetch all personal modules if user is logged in\n  useEffect(() => {\n    if (userId) {\n      updatePersonalBookmarks(userId);\n      updatePersonalReviews(userId);\n      updatedPersonalPlannedModules(userId);\n    }\n  }, [userId]);\n\n  /**\n   *  Attempt login if login details are stored\n   */\n  const attemptLogin = () => {\n    const email = window.localStorage.getItem(\"ROTTENMODS_EMAIL\");\n    const password = window.localStorage.getItem(\"ROTTENMODS_PASSWORD\");\n    console.log(\"email is \" + email);\n\n    if (email && password) {\n      authService.logIn({\n        emailaddress: email,\n        password,\n      });\n      console.log(\"information still stored in redux and logged in.\")\n    }\n  };\n\n  /**\n   * Fetch all available schools\n   */\n  const fetchAllSchools = async () => {\n    const schools = await schoolApi.searchSchools(\"\");\n    dispatch({\n      type: FETCH_SCHOOLS,\n      payload: schools,\n    });\n  };\n\n  return (\n    <>\n      <Head>\n        <title>RottenMods</title>\n      </Head>\n      <div id=\"body\" style={styles.layout}>\n        <div style={styles.container}>\n          <NavBar />\n          <Component {...pageProps} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst styles = {\n  layout: {\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  container: {\n    padding: \"0px 80px 80px 80px\",\n    width: \"100vw\",\n    maxWidth: 1280,\n    overflowX: \"hidden\" as \"hidden\",\n  },\n};\n\nexport default wrapper.withRedux(ReduxApp);\n"]},"metadata":{},"sourceType":"module"}