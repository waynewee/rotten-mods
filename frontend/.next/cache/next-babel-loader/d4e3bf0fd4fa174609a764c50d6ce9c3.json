{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { Input, InputNumber, Rate, Select, AutoComplete, Tag } from \"antd\";\nvar TextArea = Input.TextArea;\nvar Option = Select.Option;\n\nvar FormModalItem = function FormModalItem(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"input\" : _ref$type,\n      label = _ref.label,\n      value = _ref.value,\n      setValue = _ref.setValue,\n      options = _ref.options,\n      searchTerm = _ref.searchTerm,\n      setSearchTerm = _ref.setSearchTerm;\n\n  var _useState = useState(0),\n      firstIsChecked = _useState[0],\n      setFirstIsChecked = _useState[1];\n\n  var _useState2 = useState(0),\n      secondIsChecked = _useState2[0],\n      setSecondIsChecked = _useState2[1];\n\n  var _useState3 = useState(options !== null && options !== void 0 ? options : []),\n      searchOptions = _useState3[0],\n      setSearchOptions = _useState3[1];\n\n  useEffect(function () {\n    setSearchOptions(options);\n  }, [options]);\n\n  var toggleCheckbox = function toggleCheckbox(index) {\n    return function (event) {\n      var newValue = parseInt(event.target.value) === 0 ? 1 : 0;\n      var isChecked = newValue === 1;\n\n      if (index === 1) {\n        setFirstIsChecked(newValue);\n        setValue([isChecked, value[1]]);\n      } else {\n        setSecondIsChecked(newValue);\n        setValue([value[0], isChecked]);\n      }\n    };\n  };\n\n  var renderInput = function renderInput() {\n    return __jsx(Input, {\n      style: styles.input,\n      value: value,\n      onChange: function onChange(e) {\n        return setValue(e.target.value);\n      }\n    });\n  };\n\n  var renderTextArea = function renderTextArea() {\n    return __jsx(TextArea, {\n      style: styles.input,\n      rows: 4,\n      autoSize: {\n        minRows: 4,\n        maxRows: 4\n      },\n      value: value,\n      onChange: function onChange(e) {\n        return setValue(e.target.value);\n      }\n    });\n  };\n\n  var renderText = function renderText() {\n    return __jsx(\"span\", {\n      style: styles.text\n    }, value);\n  };\n\n  var renderRate = function renderRate() {\n    return __jsx(Rate, {\n      defaultValue: value,\n      onChange: setValue\n    });\n  };\n\n  var renderDifficulty = function renderDifficulty() {\n    return __jsx(Rate, {\n      defaultValue: value,\n      style: styles.rateObjects,\n      onChange: setValue,\n      character: function character(_ref2) {\n        var index = _ref2.index;\n        return __jsx(\"span\", {\n          style: {\n            marginRight: 9\n          }\n        }, index + 1);\n      }\n    });\n  };\n\n  var renderNumber = function renderNumber() {\n    return __jsx(InputNumber, {\n      style: styles.inputNumber,\n      value: value,\n      onChange: function onChange(e) {\n        return setValue(e);\n      }\n    });\n  };\n\n  var renderYear = function renderYear() {\n    return __jsx(Select, {\n      style: styles.inputNumber,\n      onChange: setValue,\n      defaultValue: value\n    }, __jsx(Option, {\n      value: 1\n    }, \"1\"), __jsx(Option, {\n      value: 2\n    }, \"2\"), __jsx(Option, {\n      value: 3\n    }, \"3\"), __jsx(Option, {\n      value: 4\n    }, \"4\"));\n  };\n\n  var renderSemester = function renderSemester() {\n    return __jsx(Select, {\n      style: styles.inputNumber,\n      onChange: setValue,\n      defaultValue: value\n    }, __jsx(Option, {\n      value: 1\n    }, \"1\"), __jsx(Option, {\n      value: 2\n    }, \"2\"), __jsx(Option, {\n      value: 3\n    }, \"3\"));\n  };\n\n  var renderSemesters = function renderSemesters() {\n    return __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: 34\n      }\n    }, __jsx(\"div\", null, __jsx(\"input\", {\n      id: \"1\",\n      type: \"checkbox\",\n      value: firstIsChecked,\n      onChange: toggleCheckbox(1)\n    }), __jsx(\"label\", {\n      style: styles.inputCheckboxLabel,\n      htmlFor: \"1\"\n    }, \"1\")), __jsx(\"div\", null, __jsx(\"input\", {\n      id: \"2\",\n      type: \"checkbox\",\n      value: secondIsChecked,\n      onChange: toggleCheckbox(2)\n    }), __jsx(\"label\", {\n      style: styles.inputCheckboxLabel,\n      htmlFor: \"2\"\n    }, \"2\")), __jsx(\"div\", null, __jsx(\"input\", {\n      id: \"3\",\n      type: \"checkbox\",\n      value: secondIsChecked,\n      onChange: toggleCheckbox(3)\n    }), __jsx(\"label\", {\n      style: styles.inputCheckboxLabel,\n      htmlFor: \"3\"\n    }, \"3\")));\n  };\n\n  var renderAnnualYear = function renderAnnualYear() {\n    var today = new Date();\n    var currentYear = today.getFullYear();\n    var currentMonth = today.getMonth();\n    var yearShortform = currentYear % 2000; // eg. 2020 => 20\n\n    var currentSemester = currentMonth < 6 ? 2 : 1;\n    var currentAYSecondYear = currentSemester === 1 ? yearShortform + 1 : yearShortform; // if current semester is 2, then the second year of the AY is the current year\n\n    var yearMinusOne = currentAYSecondYear - 1;\n    var yearMinusTwo = currentAYSecondYear - 2;\n    var yearMinusThree = currentAYSecondYear - 3;\n    var yearMinusFour = currentAYSecondYear - 4;\n    return __jsx(Select, {\n      style: styles.inputNumber,\n      onChange: setValue,\n      defaultValue: value\n    }, __jsx(Option, {\n      value: \"\".concat(yearMinusOne, \"/\").concat(currentAYSecondYear)\n    }, \"AY\", yearMinusOne, \"/\", currentAYSecondYear), __jsx(Option, {\n      value: \"\".concat(yearMinusTwo, \"/\").concat(yearMinusOne)\n    }, \"AY\", yearMinusTwo, \"/\", yearMinusOne), __jsx(Option, {\n      value: \"\".concat(yearMinusThree, \"/\").concat(yearMinusTwo)\n    }, \"AY\", yearMinusThree, \"/\", yearMinusTwo), __jsx(Option, {\n      value: \"\".concat(yearMinusFour, \"/\").concat(yearMinusThree)\n    }, \"AY\", yearMinusFour, \"/\", yearMinusThree));\n  };\n\n  var renderUniversity = function renderUniversity() {\n    return __jsx(Select, {\n      style: styles.inputNumber,\n      onChange: setValue,\n      defaultValue: value\n    }, __jsx(Option, {\n      value: \"NUS\"\n    }, \"NUS\"), __jsx(Option, {\n      value: \"NTU\"\n    }, \"NTU\"), __jsx(Option, {\n      value: \"SMU\"\n    }, \"SMU\"));\n  };\n\n  var renderAutoComplete = function renderAutoComplete() {\n    return __jsx(AutoComplete, {\n      style: styles.input,\n      options: searchOptions,\n      onSelect: setValue,\n      defaultValue: value,\n      onSearch: function onSearch(searchText) {\n        return setSearchOptions(options.filter(function (item) {\n          return item.value.toLowerCase().includes(searchText.toLowerCase());\n        }));\n      }\n    });\n  };\n\n  var renderPrereq = function renderPrereq() {\n    var removeCode = function removeCode(removedMod) {\n      var filteredCodes = value.filter(function (mod) {\n        return mod.id !== removedMod.id;\n      });\n      setValue(filteredCodes);\n    };\n\n    var renderTags = function renderTags() {\n      return value.map(function (mod) {\n        return __jsx(Tag, {\n          closable: true,\n          onClose: function onClose() {\n            return removeCode(mod);\n          },\n          key: mod.id\n        }, mod.value);\n      });\n    };\n\n    var addModule = function addModule(code) {\n      var modArr = searchOptions.filter(function (mod) {\n        return mod.value === code;\n      });\n      setValue(value.concat(modArr));\n      setSearchTerm(\"\");\n    };\n\n    var onChange = function onChange(newSearchTerm) {\n      return setSearchTerm(newSearchTerm);\n    };\n\n    return __jsx(\"div\", null, __jsx(AutoComplete, {\n      style: styles.input,\n      onSelect: addModule,\n      options: searchOptions,\n      value: searchTerm,\n      onChange: onChange\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: 10,\n        maxWidth: 390\n      }\n    }, renderTags()));\n  };\n\n  var renderInputType = {\n    \"input\": renderInput,\n    \"textarea\": renderTextArea,\n    \"text\": renderText,\n    \"rate\": renderRate,\n    \"difficulty\": renderDifficulty,\n    \"number\": renderNumber,\n    \"year\": renderYear,\n    \"semester\": renderSemester,\n    \"semesters\": renderSemesters,\n    \"annualYear\": renderAnnualYear,\n    \"university\": renderUniversity,\n    \"autocomplete\": renderAutoComplete,\n    \"prereq\": renderPrereq\n  };\n  return __jsx(\"div\", {\n    style: styles.labelContainer\n  }, __jsx(\"label\", {\n    style: styles.label\n  }, \"\".concat(label, \":\")), renderInputType[type]());\n};\n\nvar styles = {\n  labelContainer: {\n    display: \"flex\",\n    marginBottom: 20,\n    alignItems: \"flex-start\",\n    justifyContent: \"flex-start\"\n  },\n  label: {\n    width: 150,\n    marginTop: 5\n  },\n  input: {\n    width: 390,\n    maxWidth: 390\n  },\n  text: {\n    marginTop: 5\n  },\n  rateObjects: {// color: \"#000\",\n  },\n  inputNumber: {\n    width: 100\n  },\n  inputCheckboxLabel: {\n    margin: \"0px 20px 0px 10px\",\n    fontSize: 15\n  }\n};\nexport default FormModalItem;","map":null,"metadata":{},"sourceType":"module"}