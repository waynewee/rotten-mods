{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Dropdown, Menu } from \"antd\";\nimport \"../styles/antd.less\";\nimport { useSelector } from \"react-redux\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\n\nconst ProfileButton = ({\n  isAuthenticated\n}) => {\n  const {\n    0: loginModalVisible,\n    1: setLoginModalVisible\n  } = useState(false);\n  const {\n    0: signupModalVisible,\n    1: setSignupModalVisible\n  } = useState(false);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const userId = useSelector(state => state.auth.userId);\n  console.log(isLoggedIn);\n  useEffect(() => {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n  });\n\n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  const menu = __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Menu.Item, {\n    key: \"1\",\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"1st menu item\"), __jsx(Menu.Item, {\n    key: \"2\",\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"2nd menu item\"), __jsx(Menu.Item, {\n    key: \"3\",\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"3rd menu item\")); // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n\n\n  return __jsx(React.Fragment, null, isLoggedIn ? __jsx(Button, {\n    type: \"text\",\n    icon: __jsx(UserOutlined, {\n      style: {\n        fontSize: 25,\n        color: \"#B9B9B9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }) : __jsx(Button, {\n    type: \"primary\",\n    onClick: toggleLoginModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Log In\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 43\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }) : null, __jsx(Dropdown.Button, {\n    overlay: menu,\n    placement: \"bottomCenter\",\n    icon: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"Dropdown\"));\n};\n\nexport default ProfileButton;\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n  // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n}","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["Button","Dropdown","Menu","useSelector","UserOutlined","useEffect","useState","LoginModal","SignupModal","ProfileButton","isAuthenticated","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","isLoggedIn","state","auth","userId","console","log","toggleLoginModal","toggleSignupModal","switchModals","menu","fontSize","color"],"mappings":"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","sourcesContent":["import { Button, Dropdown, Menu } from \"antd\";\nimport \"../styles/antd.less\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MailOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { codeBlue } from \"../styles/colors\";\n\ninterface Props {\n  isAuthenticated: boolean;\n}\n\n\nconst ProfileButton: React.FC<Props> = ({ isAuthenticated }) => {\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const [signupModalVisible, setSignupModalVisible] = useState(false);\n  const isLoggedIn: boolean = useSelector(state => state.auth.isLoggedIn);\n  const userId: string = useSelector(state => state.auth.userId);\n  console.log(isLoggedIn);\n\n\n  useEffect(()=> {\n    isLoggedIn ? setLoginModalVisible(false) : null;\n  })\n  \n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  }\n  \n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  }\n  \n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }\n\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"1\" icon={<UserOutlined />}>\n        1st menu item\n      </Menu.Item>\n      <Menu.Item key=\"2\" icon={<UserOutlined />}>\n        2nd menu item\n      </Menu.Item>\n      <Menu.Item key=\"3\" icon={<UserOutlined />}>\n        3rd menu item\n      </Menu.Item>\n    </Menu>\n  );\n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return (\n    <>\n      {\n        isLoggedIn \n        ? <Button type=\"text\" icon={<UserOutlined style={{ fontSize: 25, color: \"#B9B9B9\" }} />} /> \n        : <Button type=\"primary\" onClick={toggleLoginModal}>\n            Log In\n          </Button>\n      }\n\n      {loginModalVisible && !isLoggedIn ? <LoginModal toggles={{ toggleLoginModal, switchModals }} /> : null}\n      {signupModalVisible ? <SignupModal toggles={{ toggleSignupModal, switchModals }} /> : null}\n\n    <Dropdown.Button overlay={menu} placement=\"bottomCenter\" icon={<UserOutlined />}>\n      Dropdown\n    </Dropdown.Button>\n    </>\n    \n  );\n};\n\n\n\nexport default ProfileButton;\n\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n              // style={{\n      //   position: \"relative\",\n      //   top: -1.5,\n      //   fontSize: 19,\n      //   borderWidth: 0,\n      //   marginLeft: 10,\n      //   backgroundColor: \"#fff\",\n      // }}\n}\n"]},"metadata":{},"sourceType":"module"}