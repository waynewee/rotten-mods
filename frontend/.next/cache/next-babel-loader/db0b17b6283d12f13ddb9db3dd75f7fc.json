{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport recommendationApi from \"../api/recommendations\";\nimport { updatePersonalBookmarks, updatePersonalReviews, updatedPersonalPlannedModules } from \"../utils/helpers\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport ProfileCard from \"../components/ProfileCard\";\nimport BookmarkedModuleCard from \"../components/BookmarkedModuleCard\";\nimport StudyPlanCard from \"../components/StudyPlanCard\";\nimport ReviewedModuleCard from \"../components/ReviewedModuleCard\";\nimport SearchModuleList from \"../components/SearchModuleList\";\n\nvar Profile = function Profile() {\n  var _useState = useState([]),\n      recommendedModules = _useState[0],\n      setRecommendedModules = _useState[1];\n\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  useEffect(function () {\n    fetchRecommendedModules();\n    updatePersonalBookmarks(userId);\n    updatePersonalReviews(userId);\n    updatedPersonalPlannedModules(userId);\n  });\n\n  var fetchRecommendedModules = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _recommendedModules;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!userId) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return recommendationApi.getRecommendedModules(userId);\n\n            case 4:\n              _recommendedModules = _context.sent;\n              setRecommendedModules(_recommendedModules);\n\n            case 6:\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"User has insufficient activities to get recommended\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fetchRecommendedModules() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var renderRecommendedModules = function renderRecommendedModules() {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Modules you might be interested in\"\n        }), __jsx(SearchModuleList, {\n          modules: recommendedModules\n        }));\n      } else {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Modules you might be interested in\"\n        }), __jsx(\"p\", {\n          style: {\n            textAlign: \"center\",\n            paddingTop: \"20px\"\n          }\n        }, \"Sorry we do not have enough information about you to recommend modules for you!\"));\n      }\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProfileCard, {\n    user: user\n  }), __jsx(BookmarkedModuleCard, null), __jsx(\"div\", {\n    style: styles.container\n  }, __jsx(StudyPlanCard, null), __jsx(ReviewedModuleCard, null)), user && renderRecommendedModules());\n};\n\nvar styles = {\n  container: {\n    display: \"flex\"\n  }\n};\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}