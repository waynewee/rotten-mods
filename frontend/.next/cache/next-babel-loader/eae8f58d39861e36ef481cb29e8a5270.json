{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport modApi from \"../api/module\";\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\nimport { descriptionGreen } from \"../styles/colors\";\n\nconst Search = ({\n  initialSearchResults = []\n}) => {\n  const {\n    0: searchResults,\n    1: setSearchResults\n  } = useState(initialSearchResults);\n  const {\n    0: numberOfResults,\n    1: setNumberOfResults\n  } = useState(20);\n  const searchTerm = useSelector(state => state.search.searchTerm);\n  useEffect(() => {\n    setNumberOfResults(10);\n  }, [searchTerm]);\n  useEffect(() => {\n    setSearchResults(initialSearchResults);\n  }, [initialSearchResults]);\n\n  const fetchMoreSearchResults = async () => {\n    const results = await modApi.searchModule(searchTerm, numberOfResults);\n    setSearchResults(results);\n    setNumberOfResults(numberOfResults + 10);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n    title: `Search results for \"${searchTerm}\"`\n  }), __jsx(SearchModuleList, {\n    modules: searchResults\n  }), __jsx(SeeMoreButton, {\n    fetchMoreData: fetchMoreSearchResults,\n    style: {\n      backgroundColor: descriptionGreen\n    }\n  }), __jsx(SectionTitle, {\n    title: `Similar results to \"${searchTerm}\"`\n  }), __jsx(SearchModuleList, {\n    modules: []\n  }), __jsx(ModuleCompareModal, null));\n};\n\nSearch.getInitialProps = async ({\n  query\n}) => {\n  const searchTerm = query.s;\n\n  try {\n    const initialSearchResults = await modApi.searchModule(searchTerm);\n    return {\n      initialSearchResults\n    };\n  } catch (err) {\n    return {\n      initialSearchResults: []\n    };\n  }\n};\n\nexport default Search;","map":null,"metadata":{},"sourceType":"module"}