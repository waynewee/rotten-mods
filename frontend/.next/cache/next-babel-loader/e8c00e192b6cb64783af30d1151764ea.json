{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport HomeModuleList from \"../components/HomeModuleList\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport { useSelector } from \"react-redux\";\nimport recommendationApi from \"../api/recommendations\";\nimport moduleApi from \"../api/module\";\nimport { useEffect, useState } from \"react\";\n\nvar Home = function Home(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var isLoggedIn = useSelector(function (state) {\n    return state.auth.isLoggedIn;\n  });\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n\n  var _useState = useState([]),\n      trendingModules = _useState[0],\n      setTrendingModules = _useState[1];\n\n  var _useState2 = useState([]),\n      popularModules = _useState2[0],\n      setPopularModules = _useState2[1];\n\n  var _useState3 = useState([]),\n      recommendedModules = _useState3[0],\n      setRecommendedModules = _useState3[1];\n\n  useEffect(function () {\n    fetchAllRecommendations();\n  }, [userId]);\n\n  var fetchAllRecommendations = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var backupModules, concatBackup, _recommendedModules;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return moduleApi.searchModule(\"cs1\");\n\n            case 2:\n              backupModules = _context.sent;\n\n              concatBackup = function concatBackup(modulesToRecommend, setModulesMethod) {\n                if (modulesToRecommend.length < 3) {\n                  var sufficientModules = modulesToRecommend.concat(backupModules);\n                  setModulesMethod(sufficientModules);\n                } else {\n                  setModulesMethod(modulesToRecommend);\n                }\n              };\n\n              recommendationApi.getMostRatedModules().then(function (response) {\n                concatBackup(response.mods, setPopularModules);\n              })[\"catch\"](function (error) {\n                // no modules\n                concatBackup([], setPopularModules);\n              });\n              recommendationApi.getMostViewedModules().then(function (response) {\n                concatBackup(response.mods, setTrendingModules);\n              })[\"catch\"](function (error) {\n                // no modules\n                concatBackup([], setTrendingModules);\n              });\n              _context.prev = 6;\n\n              if (!userId) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 10;\n              return recommendationApi.getRecommendedModules(userId);\n\n            case 10:\n              _recommendedModules = _context.sent;\n              concatBackup(_recommendedModules.mods, setRecommendedModules);\n\n            case 12:\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](6);\n              console.log(\"User has insufficient activities to get recommended\");\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 14]]);\n    }));\n\n    return function fetchAllRecommendations() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var renderRecommendedModules = function renderRecommendedModules() {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        console.log(\"Recommended:\", recommendedModules);\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Recommended For You\"\n        }), __jsx(HomeModuleList, {\n          modules: recommendedModules\n        }));\n      } else {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Recommended For You\"\n        }), __jsx(\"p\", {\n          style: {\n            textAlign: \"center\",\n            paddingTop: \"20px\"\n          }\n        }, \"Sorry we do not have enough information about you yet to recommend modules for you!\"));\n      }\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ModuleCompareModal, null), __jsx(SectionTitle, {\n    title: \"Trending Modules\"\n  }), __jsx(HomeModuleList, {\n    modules: trendingModules\n  }), __jsx(SectionTitle, {\n    title: \"Popular Modules\"\n  }), __jsx(HomeModuleList, {\n    modules: popularModules\n  }), isLoggedIn && renderRecommendedModules());\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}