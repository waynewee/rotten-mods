{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/AddRatingsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport reviewApi from \"../api/review\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue, crossRed } from \"../styles/colors\";\n\nvar AddRatingsModal = function AddRatingsModal(_ref) {\n  _s();\n\n  var _ratingByUser$value;\n\n  var code = _ref.code,\n      modId = _ref.modId,\n      ratingByUser = _ref.ratingsByUser,\n      isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility;\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n\n  var _useState = useState((_ratingByUser$value = ratingByUser === null || ratingByUser === void 0 ? void 0 : ratingByUser.value) !== null && _ratingByUser$value !== void 0 ? _ratingByUser$value : 0),\n      ratings = _useState[0],\n      setRatings = _useState[1];\n\n  var _useState2 = useState(\"Submit\"),\n      submitText = _useState2[0],\n      setSubmitText = _useState2[1];\n\n  var _useState3 = useState(submitBlue),\n      submitColor = _useState3[0],\n      setSubmitColor = _useState3[1];\n\n  useEffect(function () {\n    var _ratingByUser$value2;\n\n    setRatings((_ratingByUser$value2 = ratingByUser === null || ratingByUser === void 0 ? void 0 : ratingByUser.value) !== null && _ratingByUser$value2 !== void 0 ? _ratingByUser$value2 : 0);\n  }, [ratingByUser]);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateForm()) {\n                _context.next = 4;\n                break;\n              }\n\n              setSubmitText(\"You did not rate the module. Once done click this button!\");\n              setSubmitColor(crossRed);\n              return _context.abrupt(\"return\");\n\n            case 4:\n              if (!ratingByUser) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return reviewApi.updateRating(ratings, \"star\", userId, modId, \"mod\", ratingByUser._id);\n\n            case 7:\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.next = 11;\n              return reviewApi.addRating(ratings, \"star\", userId, modId, \"mod\");\n\n            case 11:\n              setModalVisibility(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateForm = function validateForm() {\n    return ratings !== 0;\n  };\n\n  var closeModal = function closeModal(isToClose) {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: reviewBlue,\n    submitColor: submitColor,\n    title: \"Rate the Module\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: closeModal,\n    onSubmit: onSubmit,\n    submitText: submitText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"text\",\n    value: code,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Ratings\",\n    type: \"rate\",\n    value: ratings,\n    setValue: setRatings,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddRatingsModal, \"tXnGNv9fEVBGBYhJZ0eQMmANWt8=\", false, function () {\n  return [useSelector];\n});\n\n_c = AddRatingsModal;\nexport default AddRatingsModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRatingsModal\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/AddRatingsModal.tsx"],"names":["useState","useEffect","useSelector","reviewApi","FormModal","FormModalItem","reviewBlue","submitBlue","crossRed","AddRatingsModal","code","modId","ratingByUser","ratingsByUser","isModalVisible","setModalVisibility","userId","state","auth","user","_id","value","ratings","setRatings","submitText","setSubmitText","submitColor","setSubmitColor","onSubmit","validateForm","updateRating","addRating","closeModal","isToClose"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,QAAiD,kBAAjD;;AAQA,IAAMC,eAA+C,GAAG,SAAlDA,eAAkD,OAAsF;AAAA;;AAAA;;AAAA,MAAnFC,IAAmF,QAAnFA,IAAmF;AAAA,MAA7EC,KAA6E,QAA7EA,KAA6E;AAAA,MAAvDC,YAAuD,QAAtEC,aAAsE;AAAA,MAAzCC,cAAyC,QAAzCA,cAAyC;AAAA,MAAzBC,kBAAyB,QAAzBA,kBAAyB;AAC5I,MAAMC,MAAM,GAAGd,WAAW,CAAC,UAAAe,KAAK;AAAA;;AAAA,+BAAIA,KAAK,CAACC,IAAN,CAAWC,IAAf,qDAAI,iBAAiBC,GAArB;AAAA,GAAN,CAA1B;;AAD4I,kBAE9GpB,QAAQ,wBAACY,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAES,KAAf,qEAAwB,CAAxB,CAFsG;AAAA,MAErIC,OAFqI;AAAA,MAE5HC,UAF4H;;AAAA,mBAGxGvB,QAAQ,CAAC,QAAD,CAHgG;AAAA,MAGrIwB,UAHqI;AAAA,MAGzHC,aAHyH;;AAAA,mBAItGzB,QAAQ,CAACO,UAAD,CAJ8F;AAAA,MAIrImB,WAJqI;AAAA,MAIxHC,cAJwH;;AAM5I1B,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACdsB,IAAAA,UAAU,yBAACX,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAES,KAAf,uEAAwB,CAAxB,CAAV;AACD,GAFQ,EAEN,CAACT,YAAD,CAFM,CAAT;;AAIA,MAAMgB,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,kBACVC,YAAY,EADF;AAAA;AAAA;AAAA;;AAEbJ,cAAAA,aAAa,CAAC,2DAAD,CAAb;AACAE,cAAAA,cAAc,CAACnB,QAAD,CAAd;AAHa;;AAAA;AAAA,mBAOXI,YAPW;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQPT,SAAS,CAAC2B,YAAV,CAAuBR,OAAvB,EAAgC,MAAhC,EAAwCN,MAAxC,EAAgDL,KAAhD,EAAuD,KAAvD,EAA8DC,YAAY,CAACQ,GAA3E,CARO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAUPjB,SAAS,CAAC4B,SAAV,CAAoBT,OAApB,EAA6B,MAA7B,EAAqCN,MAArC,EAA6CL,KAA7C,EAAoD,KAApD,CAVO;;AAAA;AAYfI,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARa,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAeA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAeP,OAAO,KAAK,CAA3B;AAAA,GAArB;;AAEA,MAAMU,UAAU,GAAG,SAAbA,UAAa,CAAAC,SAAS,EAAI;AAC9BlB,IAAAA,kBAAkB,CAACkB,SAAD,CAAlB;AACAN,IAAAA,cAAc,CAACpB,UAAD,CAAd;AACAkB,IAAAA,aAAa,CAAC,QAAD,CAAb;AACD,GAJD;;AAMA,SACE,MAAC,SAAD;AACE,IAAA,eAAe,EAAEnB,UADnB;AAEE,IAAA,WAAW,EAAEoB,WAFf;AAGE,IAAA,KAAK,EAAC,iBAHR;AAIE,IAAA,cAAc,EAAEZ,cAJlB;AAKE,IAAA,kBAAkB,EAAEkB,UALtB;AAME,IAAA,QAAQ,EAAEJ,QANZ;AAOE,IAAA,UAAU,EAAEJ,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,aAArB;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,KAAK,EAAEd,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,SAArB;AAA+B,IAAA,IAAI,EAAC,MAApC;AAA2C,IAAA,KAAK,EAAEY,OAAlD;AAA2D,IAAA,QAAQ,EAAEC,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD,CA/CD;;GAAMd,e;UACWP,W;;;KADXO,e;AAiDN,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalState } from \"../types\";\nimport reviewApi from \"../api/review\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { reviewBlue, submitBlue, crossRed } from \"../styles/colors\";\n\ninterface AddRatingsModalProps extends ModalState {\n  code: string;\n  modId: string;\n  ratingsByUser?: { value: number, _id: string };\n}\n\nconst AddRatingsModal: React.FC<AddRatingsModalProps> = ({ code, modId, ratingsByUser: ratingByUser, isModalVisible, setModalVisibility }) => {\n  const userId = useSelector(state => state.auth.user?._id);\n  const [ratings, setRatings] = useState(ratingByUser?.value ?? 0);\n  const [submitText, setSubmitText] = useState(\"Submit\");\n  const [submitColor, setSubmitColor] = useState(submitBlue);\n\n  useEffect(() => {\n    setRatings(ratingByUser?.value ?? 0)\n  }, [ratingByUser]);\n\n  const onSubmit = async () => {\n    if (!validateForm()) {\n      setSubmitText(\"You did not rate the module. Once done click this button!\");\n      setSubmitColor(crossRed);\n      return;\n    }\n\n    if (ratingByUser) {\n      await reviewApi.updateRating(ratings, \"star\", userId, modId, \"mod\", ratingByUser._id);\n    } else {\n      await reviewApi.addRating(ratings, \"star\", userId, modId, \"mod\");\n    }\n    setModalVisibility(false);\n  }\n\n  const validateForm = (): boolean => ratings !== 0;\n\n  const closeModal = isToClose => {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  }\n\n  return (\n    <FormModal\n      backgroundColor={reviewBlue}\n      submitColor={submitColor}\n      title=\"Rate the Module\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={closeModal}\n      onSubmit={onSubmit}\n      submitText={submitText}\n    >\n      <FormModalItem label=\"Module Code\" type=\"text\" value={code} />\n      <FormModalItem label=\"Ratings\" type=\"rate\" value={ratings} setValue={setRatings} />\n    </FormModal>\n  )\n}\n\nexport default AddRatingsModal;"]},"metadata":{},"sourceType":"module"}