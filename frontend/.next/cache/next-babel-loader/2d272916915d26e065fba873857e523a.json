{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar reviewBaseUrl = \"http://localhost:8080/api/review\";\nvar ratingBaseUrl = \"http://localhost:8080/api/rating\";\n\nvar getReviewsOfModule = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(modId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(reviewBaseUrl, \"/\").concat(modId));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getReviewsOfModule(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar addReviewOfModule = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(review, modId, userId) {\n    var text, semesterTaken, yearTaken, workload, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            text = review.text, semesterTaken = review.semesterTaken, yearTaken = review.yearTaken, workload = review.workload;\n            _context2.next = 3;\n            return axios.post(reviewBaseUrl, {\n              text: text,\n              modId: modId,\n              userId: userId,\n              semesterTaken: semesterTaken,\n              yearTaken: yearTaken,\n              workload: workload\n            });\n\n          case 3:\n            response = _context2.sent;\n            console.log(\"Post Review:\", response.status);\n            return _context2.abrupt(\"return\", response.status);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addReviewOfModule(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar addRatingOfModule = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value, type, userId, modId) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.post(ratingBaseUrl, {\n              type: type,\n              userId: userId,\n              modId: modId,\n              value: value\n            });\n\n          case 2:\n            response = _context3.sent;\n            console.log(\"\".concat(type, \":\"), response.status);\n            return _context3.abrupt(\"return\", response.status);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function addRatingOfModule(_x5, _x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getReviewsOfModule: getReviewsOfModule,\n  addReviewOfModule: addReviewOfModule,\n  addRatingOfModule: addRatingOfModule\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/review.ts"],"names":["axios","reviewBaseUrl","ratingBaseUrl","getReviewsOfModule","modId","get","response","data","addReviewOfModule","review","userId","text","semesterTaken","yearTaken","workload","post","console","log","status","addRatingOfModule","value","type"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,aAAa,GAAG,kCAAtB;;AASA,IAAMC,kBAAkB;AAAA,sEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFJ,KAAK,CAACK,GAAN,WAAaJ,aAAb,cAA8BG,KAA9B,EADE;;AAAA;AACnBE,YAAAA,QADmB;AAAA,6CAElBA,QAAQ,CAACC,IAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBJ,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;AAKA,IAAMK,iBAAiB;AAAA,uEAAG,kBACxBC,MADwB,EAExBL,KAFwB,EAGxBM,MAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhBC,YAAAA,IALgB,GAK6BF,MAL7B,CAKhBE,IALgB,EAKVC,aALU,GAK6BH,MAL7B,CAKVG,aALU,EAKKC,SALL,GAK6BJ,MAL7B,CAKKI,SALL,EAKgBC,QALhB,GAK6BL,MAL7B,CAKgBK,QALhB;AAAA;AAAA,mBAMDd,KAAK,CAACe,IAAN,CAAWd,aAAX,EAA0B;AAC/CU,cAAAA,IAAI,EAAJA,IAD+C;AAE/CP,cAAAA,KAAK,EAALA,KAF+C;AAG/CM,cAAAA,MAAM,EAANA,MAH+C;AAI/CE,cAAAA,aAAa,EAAbA,aAJ+C;AAK/CC,cAAAA,SAAS,EAATA,SAL+C;AAM/CC,cAAAA,QAAQ,EAARA;AAN+C,aAA1B,CANC;;AAAA;AAMlBR,YAAAA,QANkB;AAexBU,YAAAA,OAAO,CAACC,GAAR,iBAA4BX,QAAQ,CAACY,MAArC;AAfwB,8CAgBjBZ,QAAQ,CAACY,MAhBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBV,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAmBA,IAAMW,iBAAiB;AAAA,uEAAG,kBACxBC,KADwB,EAExBC,IAFwB,EAGxBX,MAHwB,EAIxBN,KAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMDJ,KAAK,CAACe,IAAN,CAAWb,aAAX,EAA0B;AAC/CmB,cAAAA,IAAI,EAAJA,IAD+C;AAE/CX,cAAAA,MAAM,EAANA,MAF+C;AAG/CN,cAAAA,KAAK,EAALA,KAH+C;AAI/CgB,cAAAA,KAAK,EAALA;AAJ+C,aAA1B,CANC;;AAAA;AAMlBd,YAAAA,QANkB;AAaxBU,YAAAA,OAAO,CAACC,GAAR,WAAeI,IAAf,QAAwBf,QAAQ,CAACY,MAAjC;AAbwB,8CAcjBZ,QAAQ,CAACY,MAdQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBC,iBAAiB;AAAA;AAAA;AAAA,GAAvB;;AAiBA,eAAe;AACbhB,EAAAA,kBAAkB,EAAlBA,kBADa;AAEbK,EAAAA,iBAAiB,EAAjBA,iBAFa;AAGbW,EAAAA,iBAAiB,EAAjBA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nimport { Review } from \"../types\";\n\nconst reviewBaseUrl = \"http://localhost:8080/api/review\";\nconst ratingBaseUrl = \"http://localhost:8080/api/rating\";\n\ninterface ReviewToSubmit {\n  text: string;\n  semesterTaken: number;\n  yearTaken: number;\n  workload: number;\n}\n\nconst getReviewsOfModule = async (modId) => {\n  const response = await axios.get(`${reviewBaseUrl}/${modId}`);\n  return response.data;\n};\n\nconst addReviewOfModule = async (\n  review: ReviewToSubmit,\n  modId: string,\n  userId: string\n) => {\n  const { text, semesterTaken, yearTaken, workload } = review;\n  const response = await axios.post(reviewBaseUrl, {\n    text,\n    modId,\n    userId,\n    semesterTaken,\n    yearTaken,\n    workload,\n  });\n\n  console.log(`Post Review:`, response.status);\n  return response.status;\n};\n\nconst addRatingOfModule = async (\n  value: number,\n  type: \"difficulty\" | \"star\",\n  userId: string,\n  modId: string\n) => {\n  const response = await axios.post(ratingBaseUrl, {\n    type,\n    userId,\n    modId,\n    value,\n  });\n\n  console.log(`${type}:`, response.status);\n  return response.status;\n};\n\nexport default {\n  getReviewsOfModule,\n  addReviewOfModule,\n  addRatingOfModule,\n};\n"]},"metadata":{},"sourceType":"module"}