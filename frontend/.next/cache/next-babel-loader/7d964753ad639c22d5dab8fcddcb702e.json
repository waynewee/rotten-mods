{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_MODULE_FOR_COMPARISON, DELETE_MODULE_FOR_COMPARISON, FIRST, SECOND } from \"../constants\";\nvar initialState = {\n  firstModuleId: \"\",\n  firstModuleCode: \"\",\n  secondModuleId: \"\",\n  secondModuleCode: \"\"\n};\n\nvar compareReducer = function compareReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MODULE_FOR_COMPARISON:\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          code = _action$payload.code; // if modules to compare are the same, return state\n\n      if (state.firstModuleId == id) {\n        return state;\n      }\n\n      if (!state.firstModuleId) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          firstModuleId: id,\n          firstModuleCode: code\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        secondModuleId: id,\n        secondModuleCode: code\n      });\n\n    case DELETE_MODULE_FOR_COMPARISON:\n      if (action.payload == FIRST) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          firstModuleId: \"\",\n          firstModuleCode: \"\"\n        });\n      } else if (action.payload == SECOND) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          secondModuleId: \"\",\n          secondModuleCode: \"\"\n        });\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default compareReducer;","map":null,"metadata":{},"sourceType":"module"}