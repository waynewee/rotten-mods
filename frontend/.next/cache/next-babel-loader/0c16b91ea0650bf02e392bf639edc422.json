{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport commentApi from \"../api/comment\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { submitBlue, crossRed, commentBlue } from \"../styles/colors\";\n\nvar AddCommentModal = function AddCommentModal(_ref) {\n  var isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility,\n      reviewId = _ref.reviewId,\n      fetchComments = _ref.fetchComments;\n\n  var _useState = useState(\"\"),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var _useState2 = useState(\"Submit\"),\n      submitText = _useState2[0],\n      setSubmitText = _useState2[1];\n\n  var _useState3 = useState(submitBlue),\n      submitColor = _useState3[0],\n      setSubmitColor = _useState3[1];\n\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (validateForm()) {\n                _context.next = 4;\n                break;\n              }\n\n              setSubmitText(\"You did not comment anything. Once done click this button!\");\n              setSubmitColor(crossRed);\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _context.next = 6;\n              return commentApi.addComment(userId, comment, reviewId);\n\n            case 6:\n              setComment(\"\");\n              setSubmitText(\"Submit\");\n              setSubmitColor(submitBlue);\n              setModalVisibility(false);\n              fetchComments();\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var validateForm = function validateForm() {\n    return comment !== \"\";\n  };\n\n  var closeModal = function closeModal(isToClose) {\n    setModalVisibility(isToClose);\n    setSubmitColor(submitBlue);\n    setSubmitText(\"Submit\");\n  };\n\n  return __jsx(FormModal, {\n    title: \"Add Comment\",\n    backgroundColor: commentBlue,\n    isModalVisible: isModalVisible,\n    setModalVisibility: closeModal,\n    submitColor: submitColor,\n    onSubmit: onSubmit,\n    submitText: submitText\n  }, __jsx(FormModalItem, {\n    label: \"Comment\",\n    type: \"textarea\",\n    value: comment,\n    setValue: setComment\n  }));\n};\n\nexport default AddCommentModal;","map":null,"metadata":{},"sourceType":"module"}