{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/pages/profile.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport recommendationApi from \"../api/recommendations\";\nimport { updatePersonalBookmarks, updatePersonalReviews, updatedPersonalPlannedModules } from \"../utils/helpers\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport ProfileCard from \"../components/ProfileCard\";\nimport BookmarkedModuleCard from \"../components/BookmarkedModuleCard\";\nimport StudyPlanCard from \"../components/StudyPlanCard\";\nimport ReviewedModuleCard from \"../components/ReviewedModuleCard\";\nimport SearchModuleList from \"../components/SearchModuleList\";\n\nvar Profile = function Profile() {\n  _s();\n\n  var _useState = useState([]),\n      recommendedModules = _useState[0],\n      setRecommendedModules = _useState[1];\n\n  var userId = useSelector(function (state) {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  var user = useSelector(function (state) {\n    return state.auth.user;\n  });\n  useEffect(function () {\n    fetchRecommendedModules();\n    updatePersonalBookmarks(userId);\n    updatePersonalReviews(userId);\n    updatedPersonalPlannedModules(userId);\n  });\n\n  var fetchRecommendedModules = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _recommendedModules;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n\n              if (!userId) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return recommendationApi.getRecommendedModules(userId);\n\n            case 4:\n              _recommendedModules = _context.sent;\n              setRecommendedModules(_recommendedModules);\n\n            case 6:\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"User has insufficient activities to get recommended\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fetchRecommendedModules() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var renderRecommendedModules = function renderRecommendedModules() {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Modules you might be interested in\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }), __jsx(SearchModuleList, {\n          modules: recommendedModules,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Modules you might be interested in\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }\n        }), __jsx(\"p\", {\n          style: {\n            textAlign: \"center\",\n            paddingTop: \"20px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }, \"Sorry we do not have enough information about you to recommend modules for you!\"));\n      }\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProfileCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(BookmarkedModuleCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(StudyPlanCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), __jsx(ReviewedModuleCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), user && renderRecommendedModules());\n};\n\n_s(Profile, \"FdMjRDuobEfWec/KT2sd9b6jx6s=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Profile;\nvar styles = {\n  container: {\n    display: \"flex\"\n  }\n};\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/pages/profile.tsx"],"names":["useState","useEffect","useSelector","recommendationApi","updatePersonalBookmarks","updatePersonalReviews","updatedPersonalPlannedModules","SectionTitle","ProfileCard","BookmarkedModuleCard","StudyPlanCard","ReviewedModuleCard","SearchModuleList","Profile","recommendedModules","setRecommendedModules","userId","state","auth","user","_id","fetchRecommendedModules","getRecommendedModules","console","log","renderRecommendedModules","length","textAlign","paddingTop","styles","container","display"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { User } from \"../types\";\nimport { useSelector } from \"react-redux\";\nimport recommendationApi from \"../api/recommendations\";\nimport {\n  updatePersonalBookmarks,\n  updatePersonalReviews,\n  updatedPersonalPlannedModules,\n} from \"../utils/helpers\";\n\nimport SectionTitle from \"../components/SectionTitle\";\nimport ProfileCard from \"../components/ProfileCard\";\nimport BookmarkedModuleCard from \"../components/BookmarkedModuleCard\";\nimport StudyPlanCard from \"../components/StudyPlanCard\";\nimport ReviewedModuleCard from \"../components/ReviewedModuleCard\";\nimport SearchModuleList from \"../components/SearchModuleList\";\n\nconst Profile: React.FC = () => {\n  const [recommendedModules, setRecommendedModules] = useState([]);\n  const userId = useSelector((state) => state.auth.user?._id);\n  const user = useSelector((state)=>state.auth.user);\n  useEffect(() => {\n    fetchRecommendedModules();\n    updatePersonalBookmarks(userId);\n    updatePersonalReviews(userId);\n    updatedPersonalPlannedModules(userId);\n  });\n\n  const fetchRecommendedModules = async () => {\n    try {\n      if (userId) {\n        const recommendedModules = await recommendationApi.getRecommendedModules(userId);\n        setRecommendedModules(recommendedModules);\n      }\n    } catch (err) {\n      console.log(\"User has insufficient activities to get recommended\");\n    }\n  }\n\n  const renderRecommendedModules = () => {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        return (\n          <>\n            <SectionTitle title=\"Modules you might be interested in\" />\n            <SearchModuleList modules={recommendedModules} />\n          </>\n        );\n      } else {\n        return (\n          <>\n            <SectionTitle title=\"Modules you might be interested in\" />\n            <p style={{ textAlign: \"center\", paddingTop: \"20px\" }}>\n              Sorry we do not have enough information about you to recommend\n              modules for you!\n            </p>\n          </>\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      <ProfileCard/>\n      <BookmarkedModuleCard />\n      <div style={styles.container}>\n        <StudyPlanCard />\n        <ReviewedModuleCard />\n      </div>\n      {user && renderRecommendedModules()}\n    </>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\",\n  },\n};\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}