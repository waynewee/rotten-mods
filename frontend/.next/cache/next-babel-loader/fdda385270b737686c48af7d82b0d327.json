{"ast":null,"code":"import axios from 'axios';\n\nfunction signUp(values) {\n  console.log(\"Service received\");\n  console.log(values);\n  let createUserConfig = {\n    method: 'post',\n    url: 'http://localhost:8080/api/user',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: {\n      \"name\": values.fullname,\n      \"email\": values.emailaddress,\n      \"password\": values.userpassword,\n      \"schoolId\": values.university,\n      \"courseId\": values.course,\n      \"currentYear\": values.yearofstudy\n    }\n  };\n  let createSchoolConfig = {\n    method: 'post',\n    url: 'http://localhost:8080/api/school',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: {\n      \"name\": values.fullname\n    }\n  };\n  let createCourseConfig = {\n    method: 'post',\n    url: 'http://localhost:8080/api/course',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: {\n      \"name\": values.fullname\n    }\n  }; // if schoolId is user created, then create a new school in the system\n\n  if (values.course !== \"userCreated\" && values.school !== \"userCreated\") {\n    axios(createUserConfig).then(function (response) {\n      console.log(\"post is successful\");\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nexport default {\n  signUp\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/services/authentication.tsx"],"names":["axios","signUp","values","console","log","createUserConfig","method","url","headers","data","fullname","emailaddress","userpassword","university","course","yearofstudy","createSchoolConfig","createCourseConfig","school","then","response","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAaA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,gBAAgB,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,GAAG,EAAE,gCAFc;AAGnBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHU;AAMnBC,IAAAA,IAAI,EAAG;AACH,cAAQP,MAAM,CAACQ,QADZ;AAEH,eAASR,MAAM,CAACS,YAFb;AAGH,kBAAYT,MAAM,CAACU,YAHhB;AAIH,kBAAYV,MAAM,CAACW,UAJhB;AAKH,kBAAYX,MAAM,CAACY,MALhB;AAMH,qBAAeZ,MAAM,CAACa;AANnB;AANY,GAAvB;AAgBA,MAAIC,kBAAkB,GAAG;AACrBV,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,GAAG,EAAE,kCAFgB;AAGrBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHY;AAMrBC,IAAAA,IAAI,EAAG;AACH,cAAQP,MAAM,CAACQ;AADZ;AANc,GAAzB;AAWA,MAAIO,kBAAkB,GAAG;AACrBX,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,GAAG,EAAE,kCAFgB;AAGrBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHY;AAMrBC,IAAAA,IAAI,EAAG;AACH,cAAQP,MAAM,CAACQ;AADZ;AANc,GAAzB,CA9BoB,CA0ClB;;AAEF,MAAIR,MAAM,CAACY,MAAP,KAAkB,aAAlB,IAAmCZ,MAAM,CAACgB,MAAP,KAAkB,aAAzD,EAAwE;AACpElB,IAAAA,KAAK,CAACK,gBAAD,CAAL,CACCc,IADD,CACM,UAAUC,QAAV,EAAoB;AACtBjB,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACH,KAJD,EAKCC,KALD,CAKO,UAAUC,KAAV,EAAiB;AACpBnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH,KAPD;AAQH;AAEJ;;AAED,eAAe;AACXrB,EAAAA;AADW,CAAf","sourcesContent":["import axios from 'axios';\n\n\ninterface SignUpInfo {\n    emailaddress: string;\n    userpassword: string;\n    fullname: string;\n    university: number;\n    course: string;\n    yearOfStudy: number;\n}\n\n\nfunction signUp(values) {\n    console.log(\"Service received\");\n    console.log(values);\n    let createUserConfig = {\n        method: 'post',\n        url: 'http://localhost:8080/api/user',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        data : {\n            \"name\": values.fullname,\n            \"email\": values.emailaddress,\n            \"password\": values.userpassword,\n            \"schoolId\": values.university,\n            \"courseId\": values.course,\n            \"currentYear\": values.yearofstudy\n        }\n    };\n\n    let createSchoolConfig = {\n        method: 'post',\n        url: 'http://localhost:8080/api/school',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        data : {\n            \"name\": values.fullname,\n        }\n    };\n\n    let createCourseConfig = {\n        method: 'post',\n        url: 'http://localhost:8080/api/course',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        data : {\n            \"name\": values.fullname,\n        }\n    };\n\n\n      // if schoolId is user created, then create a new school in the system\n\n    if (values.course !== \"userCreated\" && values.school !== \"userCreated\") {\n        axios(createUserConfig)\n        .then(function (response) {\n            console.log(\"post is successful\");\n            console.log(response);\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n}\n\nexport default {\n    signUp\n}"]},"metadata":{},"sourceType":"module"}