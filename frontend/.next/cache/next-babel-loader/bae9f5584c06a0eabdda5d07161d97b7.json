{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddPlannedModModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport plannedModApi from \"../api/planned-mod\";\nimport { updatedPersonalPlannedModules } from \"../utils/helpers\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { submitBlue, plannedModGreen } from \"../styles/colors\";\n\nvar AddPlannedModModal = function AddPlannedModModal(_ref) {\n  _s();\n\n  var userId = _ref.userId,\n      modId = _ref.modId,\n      plannedModId = _ref.plannedModId,\n      isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility;\n\n  var _useState = useState(1),\n      year = _useState[0],\n      setYear = _useState[1];\n\n  var _useState2 = useState(1),\n      semester = _useState2[0],\n      setSemester = _useState2[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var numberOfSemesters;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              numberOfSemesters = (year - 1) * 2 + semester;\n\n              if (!plannedModId) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return plannedModApi.updatePlannedMod(plannedModId, userId, modId, numberOfSemesters);\n\n            case 4:\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.next = 8;\n              return plannedModApi.addPlannedMod(userId, modId, numberOfSemesters);\n\n            case 8:\n              updatedPersonalPlannedModules(userId);\n              setModalVisibility(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(FormModal, {\n    title: \"Add to Study Planner\",\n    backgroundColor: plannedModGreen,\n    isModalVisible: isModalVisible,\n    setModalVisibility: setModalVisibility,\n    submitColor: submitBlue,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Year\",\n    type: \"year\",\n    value: year,\n    setValue: setYear,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Semester\",\n    type: \"semester\",\n    value: semester,\n    setValue: setSemester,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddPlannedModModal, \"6a1I/qBKXPPrcWTEPyKY5S3PMUY=\");\n\n_c = AddPlannedModModal;\nexport default AddPlannedModModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlannedModModal\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddPlannedModModal.tsx"],"names":["useState","plannedModApi","updatedPersonalPlannedModules","FormModal","FormModalItem","submitBlue","plannedModGreen","AddPlannedModModal","userId","modId","plannedModId","isModalVisible","setModalVisibility","year","setYear","semester","setSemester","onSubmit","numberOfSemesters","updatePlannedMod","addPlannedMod"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,6BAAT,QAA8C,kBAA9C;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,kBAA5C;;AAQA,IAAMC,kBAAqD,GAAG,SAAxDA,kBAAwD,OAAyE;AAAA;;AAAA,MAAtEC,MAAsE,QAAtEA,MAAsE;AAAA,MAA9DC,KAA8D,QAA9DA,KAA8D;AAAA,MAAvDC,YAAuD,QAAvDA,YAAuD;AAAA,MAAzCC,cAAyC,QAAzCA,cAAyC;AAAA,MAAzBC,kBAAyB,QAAzBA,kBAAyB;;AAAA,kBAC7GZ,QAAQ,CAAC,CAAD,CADqG;AAAA,MAC9Ha,IAD8H;AAAA,MACxHC,OADwH;;AAAA,mBAErGd,QAAQ,CAAC,CAAD,CAF6F;AAAA,MAE9He,QAF8H;AAAA,MAEpHC,WAFoH;;AAIrI,MAAMC,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,iBADS,GACW,CAACL,IAAI,GAAG,CAAR,IAAa,CAAb,GAAiBE,QAD5B;;AAAA,mBAGXL,YAHW;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKPT,aAAa,CAACkB,gBAAd,CAA+BT,YAA/B,EAA6CF,MAA7C,EAAqDC,KAArD,EAA4DS,iBAA5D,CALO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAOPjB,aAAa,CAACmB,aAAd,CAA4BZ,MAA5B,EAAoCC,KAApC,EAA2CS,iBAA3C,CAPO;;AAAA;AAUfhB,cAAAA,6BAA6B,CAACM,MAAD,CAA7B;AACAI,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;;AAXe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARK,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAcA,SACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,eAAe,EAAEX,eAFnB;AAGE,IAAA,cAAc,EAAEK,cAHlB;AAIE,IAAA,kBAAkB,EAAEC,kBAJtB;AAKE,IAAA,WAAW,EAAEP,UALf;AAME,IAAA,QAAQ,EAAEY,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,MAArB;AAA4B,IAAA,IAAI,EAAC,MAAjC;AAAwC,IAAA,KAAK,EAAEJ,IAA/C;AAAqD,IAAA,QAAQ,EAAEC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAC,UAArB;AAAgC,IAAA,IAAI,EAAC,UAArC;AAAgD,IAAA,KAAK,EAAEC,QAAvD;AAAiE,IAAA,QAAQ,EAAEC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CA/BD;;GAAMT,kB;;KAAAA,kB;AAiCN,eAAeA,kBAAf","sourcesContent":["import { useState } from \"react\";\nimport { ModalState } from \"../types\";\nimport plannedModApi from \"../api/planned-mod\";\nimport { updatedPersonalPlannedModules } from \"../utils/helpers\";\n\nimport FormModal from \"./FormModal\"\nimport FormModalItem from \"./FormModalItem\"\nimport { submitBlue, plannedModGreen } from \"../styles/colors\";\n\ninterface AddPlannedModModalProps extends ModalState {\n  userId: string;\n  modId: string;\n  plannedModId?: string;\n}\n\nconst AddPlannedModModal: React.FC<AddPlannedModModalProps> = ({ userId, modId, plannedModId, isModalVisible, setModalVisibility }) => {\n  const [year, setYear] = useState(1);\n  const [semester, setSemester] = useState(1);\n\n  const onSubmit = async () => {\n    const numberOfSemesters = (year - 1) * 2 + semester;\n\n    if (plannedModId) {\n      // Exists already, so update it instead\n      await plannedModApi.updatePlannedMod(plannedModId, userId, modId, numberOfSemesters);\n    } else {\n      await plannedModApi.addPlannedMod(userId, modId, numberOfSemesters);\n    }\n\n    updatedPersonalPlannedModules(userId);\n    setModalVisibility(false);\n  }\n\n  return (\n    <FormModal\n      title=\"Add to Study Planner\"\n      backgroundColor={plannedModGreen}\n      isModalVisible={isModalVisible}\n      setModalVisibility={setModalVisibility}\n      submitColor={submitBlue}\n      onSubmit={onSubmit}\n    >\n      <FormModalItem label=\"Year\" type=\"year\" value={year} setValue={setYear} />\n      <FormModalItem label=\"Semester\" type=\"semester\" value={semester} setValue={setSemester} />\n    </FormModal>\n  )\n}\n\nexport default AddPlannedModModal;"]},"metadata":{},"sourceType":"module"}