{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/search.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport modApi from \"../api/module\";\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\nimport { descriptionGreen } from \"../styles/colors\";\n\nconst Search = ({\n  initialSearchResults = []\n}) => {\n  const {\n    0: searchResults,\n    1: setSearchResults\n  } = useState(initialSearchResults);\n  const {\n    0: numberOfResults,\n    1: setNumberOfResults\n  } = useState(11); // 1 more than 10, the prescence \n\n  const searchTerm = useSelector(state => state.search.searchTerm);\n  useEffect(() => {\n    setNumberOfResults(10);\n  }, [searchTerm]);\n  useEffect(() => {\n    setSearchResults(initialSearchResults);\n  }, [initialSearchResults]);\n\n  const fetchMoreSearchResults = async () => {\n    const results = await modApi.searchModule(searchTerm, numberOfResults + 10);\n    setSearchResults(results);\n    setNumberOfResults(numberOfResults + 10);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n    title: `Search results for \"${searchTerm}\"`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(SearchModuleList, {\n    modules: searchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(SeeMoreButton, {\n    fetchMoreData: fetchMoreSearchResults,\n    style: {\n      backgroundColor: descriptionGreen\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), __jsx(SectionTitle, {\n    title: `Similar results to \"${searchTerm}\"`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), __jsx(SearchModuleList, {\n    modules: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(ModuleCompareModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};\n\nSearch.getInitialProps = async ({\n  query\n}) => {\n  const searchTerm = query.s;\n\n  try {\n    const initialSearchResults = await modApi.searchModule(searchTerm);\n    return {\n      initialSearchResults\n    };\n  } catch (err) {\n    return {\n      initialSearchResults: []\n    };\n  }\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/search.tsx"],"names":["useState","useEffect","useSelector","modApi","ModuleCompareModal","SectionTitle","SearchModuleList","SeeMoreButton","descriptionGreen","Search","initialSearchResults","searchResults","setSearchResults","numberOfResults","setNumberOfResults","searchTerm","state","search","fetchMoreSearchResults","results","searchModule","backgroundColor","getInitialProps","query","s","err"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAGA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAMA,MAAMC,MAA6B,GAAG,CAAC;AAAEC,EAAAA,oBAAoB,GAAG;AAAzB,CAAD,KAAmC;AACvE,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCZ,QAAQ,CAACU,oBAAD,CAAlD;AACA,QAAM;AAAA,OAACG,eAAD;AAAA,OAAkBC;AAAlB,MAAwCd,QAAQ,CAAC,EAAD,CAAtD,CAFuE,CAEX;;AAC5D,QAAMe,UAAU,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaF,UAAzB,CAA9B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GAFQ,EAEN,CAACC,UAAD,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,gBAAgB,CAACF,oBAAD,CAAhB;AACD,GAFQ,EAEN,CAACA,oBAAD,CAFM,CAAT;;AAIA,QAAMQ,sBAAsB,GAAG,YAAY;AACzC,UAAMC,OAAO,GAAG,MAAMhB,MAAM,CAACiB,YAAP,CAAoBL,UAApB,EAAgCF,eAAe,GAAG,EAAlD,CAAtB;AACAD,IAAAA,gBAAgB,CAACO,OAAD,CAAhB;AACAL,IAAAA,kBAAkB,CAACD,eAAe,GAAG,EAAnB,CAAlB;AACD,GAJD;;AAMA,SACE,4BACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAG,uBAAsBE,UAAW,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEJ,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,aAAD;AACE,IAAA,aAAa,EAAEO,sBADjB;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAEb;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAOE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAG,uBAAsBO,UAAW,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAhCD;;AAkCAN,MAAM,CAACa,eAAP,GAAyB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC5C,QAAMR,UAAU,GAAGQ,KAAK,CAACC,CAAzB;;AACA,MAAI;AACF,UAAMd,oBAAoB,GAAG,MAAMP,MAAM,CAACiB,YAAP,CAAoBL,UAApB,CAAnC;AACA,WAAO;AAAEL,MAAAA;AAAF,KAAP;AACD,GAHD,CAGE,OAAOe,GAAP,EAAY;AACZ,WAAO;AAAEf,MAAAA,oBAAoB,EAAE;AAAxB,KAAP;AACD;AACF,CARD;;AAUA,eAAeD,MAAf","sourcesContent":["import { NextPage } from \"next\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport modApi from \"../api/module\";\nimport { Module } from \"../types\";\n\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\nimport { descriptionGreen } from \"../styles/colors\";\n\ninterface SearchProps {\n  initialSearchResults: Module[];\n}\n\nconst Search: NextPage<SearchProps> = ({ initialSearchResults = [] }) => {\n  const [searchResults, setSearchResults] = useState(initialSearchResults);\n  const [numberOfResults, setNumberOfResults] = useState(11); // 1 more than 10, the prescence \n  const searchTerm = useSelector((state) => state.search.searchTerm);\n\n  useEffect(() => {\n    setNumberOfResults(10);\n  }, [searchTerm]);\n\n  useEffect(() => {\n    setSearchResults(initialSearchResults);\n  }, [initialSearchResults]);\n\n  const fetchMoreSearchResults = async () => {\n    const results = await modApi.searchModule(searchTerm, numberOfResults + 10);\n    setSearchResults(results);\n    setNumberOfResults(numberOfResults + 10);\n  };\n\n  return (\n    <>\n      <SectionTitle title={`Search results for \"${searchTerm}\"`} />\n      <SearchModuleList modules={searchResults} />\n      <SeeMoreButton\n        fetchMoreData={fetchMoreSearchResults}\n        style={{ backgroundColor: descriptionGreen }}\n      />\n      <SectionTitle title={`Similar results to \"${searchTerm}\"`} />\n      <SearchModuleList modules={[]} />\n      <ModuleCompareModal />\n    </>\n  );\n};\n\nSearch.getInitialProps = async ({ query }) => {\n  const searchTerm = query.s;\n  try {\n    const initialSearchResults = await modApi.searchModule(searchTerm);\n    return { initialSearchResults };\n  } catch (err) {\n    return { initialSearchResults: [] };\n  }\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}