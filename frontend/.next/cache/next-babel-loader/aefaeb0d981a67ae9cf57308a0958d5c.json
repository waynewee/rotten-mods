{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/pages/profile.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport SectionTitle from \"../components/SectionTitle\";\nimport ProfileCard from \"../components/ProfileCard\";\nimport BookmarkedModuleCard from \"../components/BookmarkedModuleCard\";\nimport StudyPlanCard from \"../components/StudyPlanCard\";\nimport ReviewedModuleCard from \"../components/ReviewedModuleCard\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport recommendationApi from \"../api/recommendations\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst Profile = () => {\n  const {\n    0: recommendedModules,\n    1: setRecommendedModules\n  } = useState([]);\n  const userId = useSelector(state => {\n    var _state$auth$user;\n\n    return (_state$auth$user = state.auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user._id;\n  });\n  const user = useSelector(state => state.auth.user);\n  useEffect(() => {\n    fetchRecommendedModules();\n  });\n\n  const fetchRecommendedModules = async () => {\n    try {\n      if (userId) {\n        const recommendedModules = await recommendationApi.getRecommendedModules(userId);\n        setRecommendedModules(recommendedModules);\n      }\n    } catch (err) {\n      console.log(\"User has insufficient activities to get recommended\");\n    }\n  };\n\n  const renderRecommendedModules = () => {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Modules you might be interested in\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }\n        }), __jsx(SearchModuleList, {\n          modules: recommendedModules,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n          title: \"Modules you might be interested in\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }\n        }), __jsx(\"p\", {\n          style: {\n            textAlign: \"center\",\n            paddingTop: \"20px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }, \"Sorry we do not have enough information about you to recommend modules for you!\"));\n      }\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ProfileCard, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(BookmarkedModuleCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(StudyPlanCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(ReviewedModuleCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), user && renderRecommendedModules());\n};\n\nconst styles = {\n  container: {\n    display: \"flex\"\n  }\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/pages/profile.tsx"],"names":["SectionTitle","ProfileCard","BookmarkedModuleCard","StudyPlanCard","ReviewedModuleCard","SearchModuleList","recommendationApi","useEffect","useState","useSelector","Profile","recommendedModules","setRecommendedModules","userId","state","auth","user","_id","fetchRecommendedModules","getRecommendedModules","err","console","log","renderRecommendedModules","length","textAlign","paddingTop","styles","container","display"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,OAAOC,iBAAP,MAA8B,wBAA9B;AAGA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,SAASC,WAAT,QAA4B,aAA5B;;AAGA,MAAMC,OAAiB,GAAG,MAAM;AAC9B,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CJ,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAMK,MAAM,GAAGJ,WAAW,CAAEK,KAAD;AAAA;;AAAA,+BAAWA,KAAK,CAACC,IAAN,CAAWC,IAAtB,qDAAW,iBAAiBC,GAA5B;AAAA,GAAD,CAA1B;AACA,QAAMD,IAAI,GAAGP,WAAW,CAAEK,KAAD,IAASA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAAxB;AACAT,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,uBAAuB;AACxB,GAFQ,CAAT;;AAIA,QAAMA,uBAAuB,GAAG,YAAY;AAC1C,QAAI;AACF,UAAIL,MAAJ,EAAY;AACV,cAAMF,kBAAkB,GAAG,MAAML,iBAAiB,CAACa,qBAAlB,CAAwCN,MAAxC,CAAjC;AACAD,QAAAA,qBAAqB,CAACD,kBAAD,CAArB;AACD;AACF,KALD,CAKE,OAAOS,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACD;AACF,GATD;;AAWA,QAAMC,wBAAwB,GAAG,MAAM;AACrC,QAAIV,MAAJ,EAAY;AACV,UAAIF,kBAAkB,CAACa,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,eACE,4BACE,MAAC,YAAD;AAAc,UAAA,KAAK,EAAC,oCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEb,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAMD,OAPD,MAOO;AACL,eACE,4BACE,MAAC,YAAD;AAAc,UAAA,KAAK,EAAC,oCAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAG,UAAA,KAAK,EAAE;AAAEc,YAAAA,SAAS,EAAE,QAAb;AAAuBC,YAAAA,UAAU,EAAE;AAAnC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FAFF,CADF;AASD;AACF;AACF,GArBD;;AAuBA,SACE,4BACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEV,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,KAAK,EAAEW,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,EAOGZ,IAAI,IAAIO,wBAAwB,EAPnC,CADF;AAWD,CArDD;;AAuDA,MAAMI,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE;AADA;AADE,CAAf;AAKA,eAAenB,OAAf","sourcesContent":["import SectionTitle from \"../components/SectionTitle\";\nimport ProfileCard from \"../components/ProfileCard\";\nimport BookmarkedModuleCard from \"../components/BookmarkedModuleCard\";\nimport StudyPlanCard from \"../components/StudyPlanCard\";\nimport { User } from \"../types\";\nimport ReviewedModuleCard from \"../components/ReviewedModuleCard\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport { Module } from \"../types\";\nimport recommendationApi from \"../api/recommendations\";\n\n\nimport { useEffect, useState } from \"react\";\n\n\nimport { useSelector } from \"react-redux\";\n\n\nconst Profile: React.FC = () => {\n  const [recommendedModules, setRecommendedModules] = useState([]);\n  const userId = useSelector((state) => state.auth.user?._id);\n  const user = useSelector((state)=>state.auth.user);\n  useEffect(() => {\n    fetchRecommendedModules();\n  });\n\n  const fetchRecommendedModules = async () => {\n    try {\n      if (userId) {\n        const recommendedModules = await recommendationApi.getRecommendedModules(userId);\n        setRecommendedModules(recommendedModules);\n      }\n    } catch (err) {\n      console.log(\"User has insufficient activities to get recommended\");\n    }\n  }\n\n  const renderRecommendedModules = () => {\n    if (userId) {\n      if (recommendedModules.length > 0) {\n        return (\n          <>\n            <SectionTitle title=\"Modules you might be interested in\" />\n            <SearchModuleList modules={recommendedModules} />\n          </>\n        );\n      } else {\n        return (\n          <>\n            <SectionTitle title=\"Modules you might be interested in\" />\n            <p style={{ textAlign: \"center\", paddingTop: \"20px\" }}>\n              Sorry we do not have enough information about you to recommend\n              modules for you!\n            </p>\n          </>\n        );\n      }\n    }\n  };\n\n  return (\n    <>\n      <ProfileCard user={user} />\n      <BookmarkedModuleCard />\n      <div style={styles.container}>\n        <StudyPlanCard />\n        <ReviewedModuleCard />\n      </div>\n      {user && renderRecommendedModules()}\n    </>\n  );\n};\n\nconst styles = {\n  container: {\n    display: \"flex\"\n  }\n}\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}