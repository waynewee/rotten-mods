{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar baseUrl = \"http://localhost:8080/api/event\";\n\nvar addEvent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId, sub, subId, type) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(baseUrl, {\n              userId: userId,\n              sub: sub,\n              subId: subId,\n              type: type\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addEvent(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default {\n  addEvent: addEvent\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/event.ts"],"names":["axios","baseUrl","addEvent","userId","sub","subId","type","post","response","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAG,iCAAhB;;AAEA,IAAMC,QAAQ;AAAA,sEAAG,iBACfC,MADe,EAEfC,GAFe,EAGfC,KAHe,EAIfC,IAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMQN,KAAK,CAACO,IAAN,CAAWN,OAAX,EAAoB;AACzCE,cAAAA,MAAM,EAANA,MADyC;AAEzCC,cAAAA,GAAG,EAAHA,GAFyC;AAGzCC,cAAAA,KAAK,EAALA,KAHyC;AAIzCC,cAAAA,IAAI,EAAJA;AAJyC,aAApB,CANR;;AAAA;AAMTE,YAAAA,QANS;AAAA,6CAaRA,QAAQ,CAACC,IAbD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARP,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAgBA,eAAe;AACbA,EAAAA,QAAQ,EAARA;AADa,CAAf","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"http://localhost:8080/api/event\";\n\nconst addEvent = async (\n  userId: string,\n  sub: \"course\" | \"mod\" | \"review\" | \"school\",\n  subId: string,\n  type: \"view\" | \"like\"\n) => {\n  const response = await axios.post(baseUrl, {\n    userId,\n    sub,\n    subId,\n    type,\n  });\n\n  return response.data;\n};\n\nexport default {\n  addEvent,\n};\n"]},"metadata":{},"sourceType":"module"}