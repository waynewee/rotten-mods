{"ast":null,"code":"var _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from \"antd\";\nimport \"../styles/antd.less\";\nimport { useSelector } from \"react-redux\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nconst {\n  0: loginModalVisible,\n  1: setLoginModalVisible\n} = useState(false);\nconst {\n  0: signupModalVisible,\n  1: setSignupModalVisible\n} = useState(false);\nconst isLoggedIn = useSelector(state => state.auth.isLoggedIn);\nconsole.log(isLoggedIn);\nuseEffect(() => {\n  console.log(\"checking if logged in\");\n  isLoggedIn ? setLoginModalVisible(false) : null;\n});\n\nconst toggleLoginModal = () => {\n  setLoginModalVisible(!loginModalVisible);\n};\n\nconst toggleSignupModal = () => {\n  setSignupModalVisible(!signupModalVisible);\n};\n\nconst switchModals = () => {\n  setSignupModalVisible(!signupModalVisible);\n  setLoginModalVisible(!loginModalVisible);\n};\n\nconst ProfileButton = ({\n  isAuthenticated\n}) => {\n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return __jsx(React.Fragment, null, __jsx(Button // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n  , {\n    type: \"text\",\n    icon: __jsx(UserOutlined, {\n      style: {\n        fontSize: 25,\n        color: \"#B9B9B9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    type: \"text\",\n    onClick: toggleLoginModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Log In\"), __jsx(Button, {\n    type: \"primary\",\n    onClick: toggleSignupModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 43\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal,\n      switchModals\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }) : null);\n};\n\nexport default ProfileButton;\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n}","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["Button","useSelector","UserOutlined","useEffect","useState","LoginModal","SignupModal","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","isLoggedIn","state","auth","console","log","toggleLoginModal","toggleSignupModal","switchModals","ProfileButton","isAuthenticated","fontSize","color"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAO,qBAAP;AAEA,SAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAqCC,YAArC,QAAyD,mBAAzD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAOA,MAAM;AAAA,KAACC,iBAAD;AAAA,KAAoBC;AAApB,IAA4CJ,QAAQ,CAAC,KAAD,CAA1D;AACA,MAAM;AAAA,KAACK,kBAAD;AAAA,KAAqBC;AAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,MAAMO,UAAmB,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,UAArB,CAAvC;AAEAG,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAR,SAAS,CAAC,MAAK;AACbW,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAJ,EAAAA,UAAU,GAAGH,oBAAoB,CAAC,KAAD,CAAvB,GAAiC,IAA3C;AACD,CAHQ,CAAT;;AAKA,MAAMQ,gBAAgB,GAAG,MAAM;AAC7BR,EAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,CAFD;;AAIA,MAAMU,iBAAiB,GAAG,MAAM;AAC9BP,EAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACD,CAFD;;AAIA,MAAMS,YAAY,GAAG,MAAM;AACzBR,EAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACAD,EAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,CAHD;;AAKA,MAAMY,aAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAC9D;AACA,SACE,4BACE,MAAC,MAAD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA,IAAA,IAAI,EAAC,MATL;AAUA,IAAA,IAAI,EAAE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEN,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAgBI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,EAoBGV,iBAAiB,IAAI,CAACI,UAAtB,GAAmC,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAEK,MAAAA,gBAAF;AAAoBE,MAAAA;AAApB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,GAAiG,IApBpG,EAqBGT,kBAAkB,GAAG,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAEQ,MAAAA,iBAAF;AAAqBC,MAAAA;AAArB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmE,IArBxF,CADF;AA0BD,CA5BD;;AA8BA,eAAeC,aAAf;AAEA;AACE;;;AAGD","sourcesContent":["import { Button } from \"antd\";\nimport \"../styles/antd.less\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MailOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { codeBlue } from \"../styles/colors\";\n\ninterface Props {\n  isAuthenticated: boolean;\n}\n\nconst [loginModalVisible, setLoginModalVisible] = useState(false);\nconst [signupModalVisible, setSignupModalVisible] = useState(false);\nconst isLoggedIn: boolean = useSelector(state => state.auth.isLoggedIn);\n\nconsole.log(isLoggedIn);\nuseEffect(()=> {\n  console.log(\"checking if logged in\");\n  isLoggedIn ? setLoginModalVisible(false) : null;\n})\n\nconst toggleLoginModal = () => {\n  setLoginModalVisible(!loginModalVisible);\n}\n\nconst toggleSignupModal = () => {\n  setSignupModalVisible(!signupModalVisible);\n}\n\nconst switchModals = () => {\n  setSignupModalVisible(!signupModalVisible);\n  setLoginModalVisible(!loginModalVisible);\n}\n\nconst ProfileButton: React.FC<Props> = ({ isAuthenticated }) => {\n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return (\n    <>\n      <Button\n      // style={{\n      //   position: \"relative\",\n      //   top: -1.5,\n      //   fontSize: 19,\n      //   borderWidth: 0,\n      //   marginLeft: 10,\n      //   backgroundColor: \"#fff\",\n      // }}\n      type=\"text\"\n      icon={<UserOutlined style={{ fontSize: 25, color: \"#B9B9B9\" }} />}\n    ></Button>\n      <Button type=\"text\" onClick={toggleLoginModal}>\n          Log In\n        </Button>\n        <Button type=\"primary\" onClick={toggleSignupModal}>\n          Sign Up\n        </Button>\n\n      {loginModalVisible && !isLoggedIn ? <LoginModal toggles={{ toggleLoginModal, switchModals }} /> : null}\n      {signupModalVisible ? <SignupModal toggles={{ toggleSignupModal, switchModals }} /> : null}\n    </>\n    \n  );\n};\n\nexport default ProfileButton;\n\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n}\n"]},"metadata":{},"sourceType":"module"}