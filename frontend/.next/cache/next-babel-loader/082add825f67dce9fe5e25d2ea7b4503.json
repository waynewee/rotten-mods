{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/search.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport modApi from \"../api/module\";\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\nimport { descriptionGreen } from \"../styles/colors\";\n\nvar Search = function Search(_ref) {\n  _s();\n\n  var _ref$initialSearchRes = _ref.initialSearchResults,\n      initialSearchResults = _ref$initialSearchRes === void 0 ? [] : _ref$initialSearchRes;\n\n  var _useState = useState(initialSearchResults),\n      searchResults = _useState[0],\n      setSearchResults = _useState[1];\n\n  var _useState2 = useState(20),\n      numberOfResults = _useState2[0],\n      setNumberOfResults = _useState2[1];\n\n  var searchTerm = useSelector(function (state) {\n    return state.search.searchTerm;\n  });\n  useEffect(function () {\n    setNumberOfResults(10);\n  }, [searchTerm]);\n  useEffect(function () {\n    setSearchResults(initialSearchResults);\n  }, [initialSearchResults]);\n\n  var fetchMoreSearchResults = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var results;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return modApi.searchModule(searchTerm, numberOfResults);\n\n            case 2:\n              results = _context.sent;\n              console.log(\"NumberofResults:\", results);\n              console.log(\"Results:\", results);\n              setSearchResults(results);\n              setNumberOfResults(numberOfResults + 10);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchMoreSearchResults() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(SectionTitle, {\n    title: \"Search results for \\\"\".concat(searchTerm, \"\\\"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), __jsx(SearchModuleList, {\n    modules: searchResults,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(SeeMoreButton, {\n    fetchMoreData: fetchMoreSearchResults,\n    style: {\n      backgroundColor: descriptionGreen\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), __jsx(SectionTitle, {\n    title: \"Similar results to \\\"\".concat(searchTerm, \"\\\"\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(SearchModuleList, {\n    modules: [],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(ModuleCompareModal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Search, \"YbR/glLIDYcEpP5wvHrXEHTi9WU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Search;\n\nSearch.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3) {\n    var query, searchTerm, initialSearchResults;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = _ref3.query;\n            searchTerm = query.s;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return modApi.searchModule(searchTerm);\n\n          case 5:\n            initialSearchResults = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              initialSearchResults: initialSearchResults\n            });\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](2);\n            return _context2.abrupt(\"return\", {\n              initialSearchResults: []\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/pages/search.tsx"],"names":["useState","useEffect","useSelector","modApi","ModuleCompareModal","SectionTitle","SearchModuleList","SeeMoreButton","descriptionGreen","Search","initialSearchResults","searchResults","setSearchResults","numberOfResults","setNumberOfResults","searchTerm","state","search","fetchMoreSearchResults","searchModule","results","console","log","backgroundColor","getInitialProps","query","s"],"mappings":"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","sourcesContent":["import { NextPage } from \"next\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport modApi from \"../api/module\";\nimport { Module } from \"../types\";\n\nimport ModuleCompareModal from \"../components/ModuleCompareModal\";\nimport SectionTitle from \"../components/SectionTitle\";\nimport SearchModuleList from \"../components/SearchModuleList\";\nimport SeeMoreButton from \"../components/SeeMoreButton\";\nimport { descriptionGreen } from \"../styles/colors\";\n\ninterface SearchProps {\n  initialSearchResults: Module[];\n}\n\nconst Search: NextPage<SearchProps> = ({ initialSearchResults = [] }) => {\n  const [searchResults, setSearchResults] = useState(initialSearchResults);\n  const [numberOfResults, setNumberOfResults] = useState(20);\n  const searchTerm = useSelector((state) => state.search.searchTerm);\n\n  useEffect(() => {\n    setNumberOfResults(10);\n  }, [searchTerm]);\n\n  useEffect(() => {\n    setSearchResults(initialSearchResults);\n  }, [initialSearchResults]);\n\n  const fetchMoreSearchResults = async () => {\n  \n    const results = await modApi.searchModule(searchTerm, numberOfResults);\n    console.log(\"NumberofResults:\", results);\n    console.log(\"Results:\", results);\n    setSearchResults(results);\n    setNumberOfResults(numberOfResults + 10);\n  };\n\n  return (\n    <>\n      <SectionTitle title={`Search results for \"${searchTerm}\"`} />\n      <SearchModuleList modules={searchResults} />\n      <SeeMoreButton\n        fetchMoreData={fetchMoreSearchResults}\n        style={{ backgroundColor: descriptionGreen }}\n      />\n      <SectionTitle title={`Similar results to \"${searchTerm}\"`} />\n      <SearchModuleList modules={[]} />\n      <ModuleCompareModal />\n    </>\n  );\n};\n\nSearch.getInitialProps = async ({ query }) => {\n  const searchTerm = query.s;\n  try {\n    const initialSearchResults = await modApi.searchModule(searchTerm);\n    return { initialSearchResults };\n  } catch (err) {\n    return { initialSearchResults: [] };\n  }\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}