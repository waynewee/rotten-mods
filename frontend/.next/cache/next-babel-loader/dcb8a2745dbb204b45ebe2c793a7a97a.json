{"ast":null,"code":"var _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/SignupModal.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, Divider, Select } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined, CalendarOutlined } from \"@ant-design/icons\";\nimport { codeBlue } from \"../styles/colors\";\nimport axios from \"axios\";\nimport authService from \"../utils/authentication\";\nimport { message } from \"antd\";\n\nconst SignupModal = toggles => {\n  const {\n    0: inputUniversityValues,\n    1: setUniversityInputValues\n  } = useState([{\n    schoolId: \"\",\n    schoolName: \"\"\n  }]);\n  const {\n    0: inputCourses,\n    1: setInputCourses\n  } = useState([{\n    courseId: \"\",\n    courseName: \"\"\n  }]);\n  const {\n    0: newSchoolName,\n    1: setSchoolName\n  } = useState(\"\");\n  const {\n    0: newCourseName,\n    1: setCourseName\n  } = useState(\"\");\n  useEffect(() => {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  const populateSchools = () => {\n    axios({\n      method: \"get\",\n      url: \"/school\",\n      baseURL: \"http://localhost:8080/api\"\n    }).then(function (response) {\n      const schoolsInDatabase = response.data.map(obj => {\n        const universityValue = {\n          schoolId: \"\",\n          schoolName: \"\"\n        };\n        universityValue.schoolId = obj._id;\n        universityValue.schoolName = obj.name;\n        return universityValue;\n      });\n      setUniversityInputValues(schoolsInDatabase);\n      console.log(\"Now uni has these values\");\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  const populateCourses = () => {\n    axios({\n      method: \"get\",\n      url: \"/course\",\n      baseURL: \"http://localhost:8080/api\"\n    }).then(function (response) {\n      const coursesInDatabase = response.data.map(obj => {\n        const course = {\n          courseId: \"\",\n          courseName: \"\"\n        };\n        course.courseId = obj._id;\n        course.courseName = obj.name;\n        return course;\n      });\n      setInputCourses(coursesInDatabase);\n    }).then(function (error) {\n      console.log(error);\n    });\n  };\n\n  const onFormFinish = signUpValues => {\n    authService.signUp(signUpValues).then(function (response) {\n      message.success(\"Successfully Signed Up\");\n      toggles.toggles.switchModals();\n    }).catch(error => {\n      message.error(\"This user has already been created. Do you mean to sign in?\");\n    });\n  };\n\n  const onUniversityChange = event => {\n    setSchoolName(event.target.value);\n  };\n\n  const onCourseChange = event => {\n    setCourseName(event.target.value);\n  };\n\n  const addUniversityItem = () => {\n    setSchoolName(\"\");\n\n    if (newSchoolName.trim() !== \"\" && !inputUniversityValues.some(e => e.schoolName === newSchoolName)) {\n      console.log(\"adduniItem\");\n      setUniversityInputValues([...inputUniversityValues, {\n        schoolId: \"userCreated\",\n        schoolName: newSchoolName\n      }]);\n    }\n  };\n\n  const addCourseItem = () => {\n    console.log(\"adduniItem\");\n    setCourseName(\"\");\n\n    if (newCourseName.trim() !== \"\" && !inputCourses.some(e => e.courseName === newCourseName)) {\n      setInputCourses([...inputCourses, {\n        courseId: \"userCreated\",\n        courseName: newCourseName\n      }]);\n    }\n  };\n\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.+-]+\\.edu$/;\n    return regex.test(email);\n  };\n\n  function renderAddition(addition) {\n    if (addition == \"university\") {\n      return __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"nowrap\",\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        style: {\n          flex: \"auto\"\n        },\n        value: newSchoolName,\n        onChange: onUniversityChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }), __jsx(\"a\", {\n        style: {\n          flex: \"none\",\n          padding: \"8px\",\n          display: \"block\",\n          cursor: \"pointer\"\n        },\n        onClick: addUniversityItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, \"ADD\"));\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"nowrap\",\n          padding: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, __jsx(Input, {\n        style: {\n          flex: \"auto\"\n        },\n        value: newCourseName,\n        onChange: onCourseChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }), __jsx(\"a\", {\n        style: {\n          flex: \"none\",\n          padding: \"8px\",\n          display: \"block\",\n          cursor: \"pointer\"\n        },\n        onClick: addCourseItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }, \"ADD\"));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    visible: true,\n    title: __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 16\n      }\n    }, \" SIGNUP \"),\n    centered: true,\n    onCancel: toggles.toggles.toggleSignupModal,\n    footer: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    name: \"normal_signup\",\n    className: \"signup-form\",\n    initialValues: {},\n    onFinish: onFormFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"fullname\",\n    rules: [{\n      required: true,\n      message: \"Please enter your full name!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Full Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"emailaddress\",\n    rules: [{\n      required: true,\n      message: \"Please enter an email address!\"\n    }, {\n      validator: (_, value) => {\n        if (!validateEmail(value)) {\n          return Promise.reject(\"Only .edu email address are allowed to sign up\");\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 28\n      }\n    }),\n    placeholder: \"Email Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    name: \"userpassword\",\n    rules: [{\n      required: true,\n      message: \"Please enter a password!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    style: {\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, __jsx(Form.Item, {\n    name: \"yearofstudy\",\n    rules: [{\n      required: true,\n      message: \"Please enter your Year of Study!\"\n    }, {\n      validator: (_, value) => {\n        if (value < 1 || value > 8) {\n          return Promise.reject(\"Your Year of Study should only be between 1 to 8\");\n        } else {\n          return Promise.resolve();\n        }\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    type: \"number\",\n    prefix: __jsx(CalendarOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }),\n    placeholder: \"Year Of Study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }))), __jsx(Form.Item, {\n    name: \"university\",\n    rules: [{\n      required: true,\n      message: \"Please enter your University!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"University\",\n    dropdownRender: menu => __jsx(React.Fragment, null, menu, __jsx(Divider, {\n      style: {\n        margin: \"4px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 19\n      }\n    }), renderAddition(\"university\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, inputUniversityValues.map(item => __jsx(Select.Option, {\n    key: item.schoolName,\n    value: item.schoolId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, item.schoolName)))), __jsx(Form.Item, {\n    name: \"course\",\n    rules: [{\n      required: true,\n      message: \"Please enter the name of the course you are enrolled in!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, __jsx(Select, {\n    style: {\n      width: \"100%\"\n    },\n    placeholder: \"Course Of Study\",\n    value: \"Default\",\n    dropdownRender: menu => __jsx(React.Fragment, null, menu, __jsx(Divider, {\n      style: {\n        margin: \"4px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }), renderAddition(\"course\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, inputCourses.map(item => __jsx(Select.Option, {\n    key: item.courseName,\n    value: item.courseId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, item.courseName)))), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: styles.loginFormButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\"))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  }, \"Already have an account? Log in\", \" \", __jsx(\"a\", {\n    onClick: () => toggles.toggles.switchModals(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, \" here\"))));\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue\n  }\n};\nexport default SignupModal;","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/SignupModal.tsx"],"names":["useState","useEffect","Modal","Button","Form","Input","Divider","Select","UserOutlined","LockOutlined","MailOutlined","CalendarOutlined","codeBlue","axios","authService","message","SignupModal","toggles","inputUniversityValues","setUniversityInputValues","schoolId","schoolName","inputCourses","setInputCourses","courseId","courseName","newSchoolName","setSchoolName","newCourseName","setCourseName","populateSchools","populateCourses","method","url","baseURL","then","response","schoolsInDatabase","data","map","obj","universityValue","_id","name","console","log","error","coursesInDatabase","course","onFormFinish","signUpValues","signUp","success","switchModals","catch","onUniversityChange","event","target","value","onCourseChange","addUniversityItem","trim","some","e","addCourseItem","validateEmail","email","regex","test","renderAddition","addition","display","flexWrap","padding","flex","cursor","textAlign","toggleSignupModal","required","validator","_","Promise","reject","resolve","marginBottom","width","menu","margin","item","styles","loginFormButton","backgroundColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { Modal, Button, Form, Input, Divider, Select, DatePicker } from \"antd\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  MailOutlined,\n  LaptopOutlined,\n  CalendarOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport { codeBlue } from \"../styles/colors\";\n\nimport axios from \"axios\";\nimport authService from \"../utils/authentication\";\n\nimport { message } from \"antd\";\n\ninterface SignupModalProps {\n  toggles: {\n    toggleSignupModal: () => void;\n    switchModals: () => void;\n  };\n}\n\nconst SignupModal: React.FC<SignupModalProps> = (toggles) => {\n  const [inputUniversityValues, setUniversityInputValues] = useState([\n    { schoolId: \"\", schoolName: \"\" },\n  ]);\n  const [inputCourses, setInputCourses] = useState([\n    { courseId: \"\", courseName: \"\" },\n  ]);\n  const [newSchoolName, setSchoolName] = useState(\"\");\n  const [newCourseName, setCourseName] = useState(\"\");\n\n  useEffect(() => {\n    populateSchools();\n    populateCourses();\n  }, []);\n\n  const populateSchools = () => {\n    axios({\n      method: \"get\",\n      url: \"/school\",\n      baseURL: \"http://localhost:8080/api\",\n    })\n      .then(function (response) {\n        const schoolsInDatabase = response.data.map((obj) => {\n          const universityValue = { schoolId: \"\", schoolName: \"\" };\n          universityValue.schoolId = obj._id;\n          universityValue.schoolName = obj.name;\n          return universityValue;\n        });\n        setUniversityInputValues(schoolsInDatabase);\n        console.log(\"Now uni has these values\");\n      })\n      .then(function (error) {\n        console.log(error);\n      });\n  };\n\n  const populateCourses = () => {\n    axios({\n      method: \"get\",\n      url: \"/course\",\n      baseURL: \"http://localhost:8080/api\",\n    })\n      .then(function (response) {\n        const coursesInDatabase = response.data.map((obj) => {\n          const course = { courseId: \"\", courseName: \"\" };\n          course.courseId = obj._id;\n          course.courseName = obj.name;\n          return course;\n        });\n        setInputCourses(coursesInDatabase);\n      })\n      .then(function (error) {\n        console.log(error);\n      });\n  };\n\n  const onFormFinish = (signUpValues) => {\n    authService\n      .signUp(signUpValues)\n      .then(function (response) {\n        message.success(\"Successfully Signed Up\");\n        toggles.toggles.switchModals();\n      })\n      .catch((error) => {\n        message.error(\n          \"This user has already been created. Do you mean to sign in?\"\n        );\n      });\n  };\n\n  const onUniversityChange = (event) => {\n    setSchoolName(event.target.value);\n  };\n\n  const onCourseChange = (event) => {\n    setCourseName(event.target.value);\n  };\n\n  const addUniversityItem = () => {\n    setSchoolName(\"\");\n    if (\n      newSchoolName.trim() !== \"\" &&\n      !inputUniversityValues.some((e) => e.schoolName === newSchoolName)\n    ) {\n      console.log(\"adduniItem\");\n      setUniversityInputValues([\n        ...inputUniversityValues,\n        { schoolId: \"userCreated\", schoolName: newSchoolName },\n      ]);\n    }\n  };\n\n  const addCourseItem = () => {\n    console.log(\"adduniItem\");\n    setCourseName(\"\");\n    if (\n      newCourseName.trim() !== \"\" &&\n      !inputCourses.some((e) => e.courseName === newCourseName)\n    ) {\n      setInputCourses([\n        ...inputCourses,\n        { courseId: \"userCreated\", courseName: newCourseName },\n      ]);\n    }\n  };\n\n  const validateEmail = (email: string): boolean => {\n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.+-]+\\.edu$/;\n\n    return regex.test(email);\n  };\n\n  function renderAddition(addition) {\n    if (addition == \"university\") {\n      return (\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}>\n          <Input\n            style={{ flex: \"auto\" }}\n            value={newSchoolName}\n            onChange={onUniversityChange}\n          />\n          <a\n            style={{\n              flex: \"none\",\n              padding: \"8px\",\n              display: \"block\",\n              cursor: \"pointer\",\n            }}\n            onClick={addUniversityItem}\n          >\n            ADD\n          </a>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ display: \"flex\", flexWrap: \"nowrap\", padding: 8 }}>\n          <Input\n            style={{ flex: \"auto\" }}\n            value={newCourseName}\n            onChange={onCourseChange}\n          />\n          <a\n            style={{\n              flex: \"none\",\n              padding: \"8px\",\n              display: \"block\",\n              cursor: \"pointer\",\n            }}\n            onClick={addCourseItem}\n          >\n            ADD\n          </a>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Modal\n        visible={true}\n        title={<div style={{ textAlign: \"center\" }}> SIGNUP </div>}\n        centered\n        onCancel={toggles.toggles.toggleSignupModal}\n        footer={null}\n      >\n        <Form\n          name=\"normal_signup\"\n          className=\"signup-form\"\n          initialValues={{}}\n          onFinish={onFormFinish}\n        >\n          <Form.Item\n            name=\"fullname\"\n            rules={[\n              { required: true, message: \"Please enter your full name!\" },\n            ]}\n          >\n            <Input prefix={<UserOutlined />} placeholder=\"Full Name\" />\n          </Form.Item>\n          <Form.Item\n            name=\"emailaddress\"\n            rules={[\n              { required: true, message: \"Please enter an email address!\" },\n              {\n                validator: (_, value) => {\n                  if (!validateEmail(value)) {\n                    return Promise.reject(\n                      \"Only .edu email address are allowed to sign up\"\n                    );\n                  } else {\n                    return Promise.resolve();\n                  }\n                },\n              },\n            ]}\n          >\n            <Input prefix={<MailOutlined />} placeholder=\"Email Address\" />\n          </Form.Item>\n          <Form.Item\n            name=\"userpassword\"\n            rules={[{ required: true, message: \"Please enter a password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item style={{ marginBottom: 0 }}>\n            <Form.Item\n              name=\"yearofstudy\"\n              rules={[\n                { required: true, message: \"Please enter your Year of Study!\" },\n                {\n                  validator: (_, value) => {\n                    if (value < 1 || value > 8) {\n                      return Promise.reject(\n                        \"Your Year of Study should only be between 1 to 8\"\n                      );\n                    } else {\n                      return Promise.resolve();\n                    }\n                  },\n                },\n              ]}\n            >\n              <Input\n                type=\"number\"\n                prefix={<CalendarOutlined />}\n                placeholder=\"Year Of Study\"\n              />\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item\n            name=\"university\"\n            rules={[\n              { required: true, message: \"Please enter your University!\" },\n            ]}\n          >\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder=\"University\"\n              dropdownRender={(menu) => (\n                <>\n                  {menu}\n                  <Divider style={{ margin: \"4px 0\" }} />\n                  {renderAddition(\"university\")}\n                </>\n              )}\n            >\n              {inputUniversityValues.map((item) => (\n                <Select.Option key={item.schoolName} value={item.schoolId}>\n                  {item.schoolName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"course\"\n            rules={[\n              {\n                required: true,\n                message:\n                  \"Please enter the name of the course you are enrolled in!\",\n              },\n            ]}\n          >\n            <Select\n              style={{ width: \"100%\" }}\n              placeholder=\"Course Of Study\"\n              value=\"Default\"\n              dropdownRender={(menu) => (\n                <>\n                  {menu}\n                  <Divider style={{ margin: \"4px 0\" }} />\n                  {renderAddition(\"course\")}\n                </>\n              )}\n            >\n              {inputCourses.map((item) => (\n                <Select.Option key={item.courseName} value={item.courseId}>\n                  {item.courseName}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={styles.loginFormButton}\n            >\n              SIGN UP\n            </Button>\n          </Form.Item>\n        </Form>\n        <Divider />\n        <div style={{ textAlign: \"center\" }}>\n          Already have an account? Log in{\" \"}\n          <a onClick={() => toggles.toggles.switchModals()}> here</a>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = {\n  loginFormButton: {\n    width: \"100%\",\n    backgroundColor: codeBlue,\n  },\n};\n\nexport default SignupModal;\n"]},"metadata":{},"sourceType":"module"}