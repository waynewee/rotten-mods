{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from \"antd\";\nimport \"../styles/antd.less\";\nimport { useSelector } from \"react-redux\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nconsole.log(isLoggedIn);\n\nvar ProfileButton = function ProfileButton(_ref) {\n  _s();\n\n  var isAuthenticated = _ref.isAuthenticated;\n\n  var _useState = useState(false),\n      loginModalVisible = _useState[0],\n      setLoginModalVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      signupModalVisible = _useState2[0],\n      setSignupModalVisible = _useState2[1];\n\n  var isLoggedIn = useSelector(function (state) {\n    return state.auth.isLoggedIn;\n  });\n  useEffect(function () {\n    console.log(\"checking if logged in\");\n    isLoggedIn ? setLoginModalVisible(false) : null;\n  });\n\n  var toggleLoginModal = function toggleLoginModal() {\n    setLoginModalVisible(!loginModalVisible);\n  };\n\n  var toggleSignupModal = function toggleSignupModal() {\n    setSignupModalVisible(!signupModalVisible);\n  };\n\n  var switchModals = function switchModals() {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }; // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n\n\n  return __jsx(React.Fragment, null, __jsx(Button // style={{\n  //   position: \"relative\",\n  //   top: -1.5,\n  //   fontSize: 19,\n  //   borderWidth: 0,\n  //   marginLeft: 10,\n  //   backgroundColor: \"#fff\",\n  // }}\n  , {\n    type: \"text\",\n    icon: __jsx(UserOutlined, {\n      style: {\n        fontSize: 25,\n        color: \"#B9B9B9\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    type: \"text\",\n    onClick: toggleLoginModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Log In\"), __jsx(Button, {\n    type: \"primary\",\n    onClick: toggleSignupModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), loginModalVisible && !isLoggedIn ? __jsx(LoginModal, {\n    toggles: {\n      toggleLoginModal: toggleLoginModal,\n      switchModals: switchModals\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 43\n    }\n  }) : null, signupModalVisible ? __jsx(SignupModal, {\n    toggles: {\n      toggleSignupModal: toggleSignupModal,\n      switchModals: switchModals\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }) : null);\n};\n\n_s(ProfileButton, \"Z5zhb5epX8FAaawgXiECeLuKyZ8=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProfileButton;\nexport default ProfileButton;\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileButton\");","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/components/ProfileButton.tsx"],"names":["Button","useSelector","UserOutlined","useEffect","useState","LoginModal","SignupModal","console","log","isLoggedIn","ProfileButton","isAuthenticated","loginModalVisible","setLoginModalVisible","signupModalVisible","setSignupModalVisible","state","auth","toggleLoginModal","toggleSignupModal","switchModals","fontSize","color"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAO,qBAAP;AAEA,SAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAqCC,YAArC,QAAyD,mBAAzD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAOAC,OAAO,CAACC,GAAR,CAAYC,UAAZ;;AAEA,IAAMC,aAA8B,GAAG,SAAjCA,aAAiC,OAAyB;AAAA;;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;;AAAA,kBACZP,QAAQ,CAAC,KAAD,CADI;AAAA,MACvDQ,iBADuD;AAAA,MACpCC,oBADoC;;AAAA,mBAEVT,QAAQ,CAAC,KAAD,CAFE;AAAA,MAEvDU,kBAFuD;AAAA,MAEnCC,qBAFmC;;AAG9D,MAAMN,UAAmB,GAAGR,WAAW,CAAC,UAAAe,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWR,UAAf;AAAA,GAAN,CAAvC;AAIAN,EAAAA,SAAS,CAAC,YAAK;AACbI,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAC,IAAAA,UAAU,GAAGI,oBAAoB,CAAC,KAAD,CAAvB,GAAiC,IAA3C;AACD,GAHQ,CAAT;;AAKA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BL,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAFD;;AAIA,MAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BJ,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACD,GAFD;;AAIA,MAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBL,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACAD,IAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,GAHD,CApB8D,CAwB9D;;;AACA,SACE,4BACE,MAAC,MAAD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AASA,IAAA,IAAI,EAAC,MATL;AAUA,IAAA,IAAI,EAAE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAES,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAEJ,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAgBI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBJ,EAoBGP,iBAAiB,IAAI,CAACH,UAAtB,GAAmC,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAES,MAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBE,MAAAA,YAAY,EAAZA;AAApB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,GAAiG,IApBpG,EAqBGN,kBAAkB,GAAG,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE;AAAEK,MAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBC,MAAAA,YAAY,EAAZA;AAArB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmE,IArBxF,CADF;AA0BD,CAnDD;;GAAMV,a;UAGwBT,W;;;KAHxBS,a;AAqDN,eAAeA,aAAf;AAEA;AACE;;;AAGD","sourcesContent":["import { Button } from \"antd\";\nimport \"../styles/antd.less\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MailOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { useEffect, useState } from 'react';\nimport LoginModal from \"./LoginModal\";\nimport SignupModal from \"./SignupModal\";\nimport { codeBlue } from \"../styles/colors\";\n\ninterface Props {\n  isAuthenticated: boolean;\n}\n\nconsole.log(isLoggedIn);\n\nconst ProfileButton: React.FC<Props> = ({ isAuthenticated }) => {\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const [signupModalVisible, setSignupModalVisible] = useState(false);\n  const isLoggedIn: boolean = useSelector(state => state.auth.isLoggedIn);\n\n\n\n  useEffect(()=> {\n    console.log(\"checking if logged in\");\n    isLoggedIn ? setLoginModalVisible(false) : null;\n  })\n  \n  const toggleLoginModal = () => {\n    setLoginModalVisible(!loginModalVisible);\n  }\n  \n  const toggleSignupModal = () => {\n    setSignupModalVisible(!signupModalVisible);\n  }\n  \n  const switchModals = () => {\n    setSignupModalVisible(!signupModalVisible);\n    setLoginModalVisible(!loginModalVisible);\n  }\n  // return isAuthenticated ? <div>Logout</div> : <button>Login</button>;\n  return (\n    <>\n      <Button\n      // style={{\n      //   position: \"relative\",\n      //   top: -1.5,\n      //   fontSize: 19,\n      //   borderWidth: 0,\n      //   marginLeft: 10,\n      //   backgroundColor: \"#fff\",\n      // }}\n      type=\"text\"\n      icon={<UserOutlined style={{ fontSize: 25, color: \"#B9B9B9\" }} />}\n    ></Button>\n      <Button type=\"text\" onClick={toggleLoginModal}>\n          Log In\n        </Button>\n        <Button type=\"primary\" onClick={toggleSignupModal}>\n          Sign Up\n        </Button>\n\n      {loginModalVisible && !isLoggedIn ? <LoginModal toggles={{ toggleLoginModal, switchModals }} /> : null}\n      {signupModalVisible ? <SignupModal toggles={{ toggleSignupModal, switchModals }} /> : null}\n    </>\n    \n  );\n};\n\nexport default ProfileButton;\n\n{\n  /* <UserOutlined\n          style={{ fontSize: 25, color: \"#B9B9B9\", marginLeft: 15 }}\n        /> */\n}\n"]},"metadata":{},"sourceType":"module"}