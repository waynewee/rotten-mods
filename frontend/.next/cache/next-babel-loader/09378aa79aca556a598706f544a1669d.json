{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/CommentCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport userApi from \"../api/user\";\nimport { commentBlue } from \"../styles/colors\";\n\nvar CommentCard = function CommentCard(_ref) {\n  _s();\n\n  var comment = _ref.comment;\n\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  useEffect(function () {\n    getUserName();\n  }, []);\n\n  var getUserName = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return userApi.getUser(comment.userId);\n\n            case 2:\n              user = _context.sent;\n              setName(user.name);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUserName() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, name), __jsx(\"div\", {\n    style: styles.comment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, comment.text));\n};\n\n_s(CommentCard, \"yFX/thdr3dMdWKRwvTuphhEy2lc=\");\n\n_c = CommentCard;\nvar styles = {\n  container: {\n    backgroundColor: commentBlue,\n    borderRadius: 10,\n    width: \"100%\",\n    padding: 15,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    marginTop: 20\n  },\n  header: {\n    marginBottom: 10\n  },\n  comment: {}\n};\nexport default CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/CommentCard.tsx"],"names":["useEffect","useState","userApi","commentBlue","CommentCard","comment","name","setName","getUserName","getUser","userId","user","styles","container","header","text","backgroundColor","borderRadius","width","padding","boxShadow","marginTop","marginBottom"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAMA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACvCJ,QAAQ,CAAC,EAAD,CAD+B;AAAA,MACxDK,IADwD;AAAA,MAClDC,OADkD;;AAG/DP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCN,OAAO,CAACO,OAAR,CAAgBJ,OAAO,CAACK,MAAxB,CADD;;AAAA;AACZC,cAAAA,IADY;AAElBJ,cAAAA,OAAO,CAACI,IAAI,CAACL,IAAN,CAAP;;AAFkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXE,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAKA,SACE;AAAK,IAAA,KAAK,EAAEI,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAED,MAAM,CAACE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IADH,CADF,EAIE;AAAK,IAAA,KAAK,EAAEM,MAAM,CAACP,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACU,IADX,CAJF,CADF;AAUD,CAtBD;;GAAMX,W;;KAAAA,W;AAwBN,IAAMQ,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTG,IAAAA,eAAe,EAAEb,WADR;AAETc,IAAAA,YAAY,EAAE,EAFL;AAGTC,IAAAA,KAAK,EAAE,MAHE;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,SAAS,EAAE,iCALF;AAMTC,IAAAA,SAAS,EAAE;AANF,GADE;AASbP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,YAAY,EAAE;AADR,GATK;AAYbjB,EAAAA,OAAO,EAAE;AAZI,CAAf;AAgBA,eAAeD,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Comment } from \"../types\";\nimport userApi from \"../api/user\";\n\nimport { commentBlue } from \"../styles/colors\";\n\ninterface CommentCardProps {\n  comment: Comment\n}\n\nconst CommentCard: React.FC<CommentCardProps> = ({ comment }) => {\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    getUserName();\n  }, [])\n\n  const getUserName = async () => {\n    const user = await userApi.getUser(comment.userId);\n    setName(user.name);\n  }\n\n  return (\n    <div style={styles.container}>\n      <div style={styles.header}>\n        {name}\n      </div>\n      <div style={styles.comment}>\n        {comment.text}\n      </div>\n    </div>\n  )\n}\n\nconst styles = {\n  container: {\n    backgroundColor: commentBlue,\n    borderRadius: 10,\n    width: \"100%\",\n    padding: 15,\n    boxShadow: \"0px 8px 8px rgba(0, 0, 0, 0.25)\",\n    marginTop: 20,\n  },\n  header: {\n    marginBottom: 10\n  },\n  comment: {\n  }\n}\n\nexport default CommentCard;"]},"metadata":{},"sourceType":"module"}