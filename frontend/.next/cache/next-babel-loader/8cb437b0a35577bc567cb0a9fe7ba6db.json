{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddModuleModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moduleApi from \"../api/module\";\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\n\nvar AddModuleModal = function AddModuleModal(_ref) {\n  _s();\n\n  var isModalVisible = _ref.isModalVisible,\n      setModalVisibility = _ref.setModalVisibility;\n\n  var _useState = useState(\"\"),\n      code = _useState[0],\n      setCode = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      description = _useState3[0],\n      setDescription = _useState3[1];\n\n  var schoolName = useSelector(function (state) {\n    return state.auth.user.schoolName;\n  });\n  console.log(\"prinitng sch name\");\n  console.log(schoolName);\n\n  var _useState4 = useState(schoolName),\n      university = _useState4[0],\n      setUniversity = _useState4[1];\n\n  var _useState5 = useState(4),\n      credit = _useState5[0],\n      setCredit = _useState5[1];\n\n  var _useState6 = useState([false, false, false, false]),\n      semesters = _useState6[0],\n      setSemesters = _useState6[1];\n\n  var _useState7 = useState(10),\n      workload = _useState7[0],\n      setWorkload = _useState7[1];\n\n  var _useState8 = useState([]),\n      modulePrereqs = _useState8[0],\n      setModulePrereqs = _useState8[1];\n\n  var _useState9 = useState([]),\n      allModules = _useState9[0],\n      setAllModules = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      prereqSearchTerm = _useState10[0],\n      setPrereqSearchTerm = _useState10[1];\n\n  var schools = useSelector(function (state) {\n    return state.schools;\n  });\n  var schoolsAutocompleteOptions = schools.map(function (school) {\n    return {\n      value: school.name\n    };\n  });\n  useEffect(function () {\n    setUniversity(schoolName);\n  }, [schoolName]);\n  useEffect(function () {\n    getAllModules();\n  }, [prereqSearchTerm]);\n\n  var getAllModules = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var modules, moduleCodes;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return moduleApi.searchModule(prereqSearchTerm, 20);\n\n            case 2:\n              modules = _context.sent;\n              moduleCodes = modules.map(function (mod) {\n                return {\n                  value: mod.code,\n                  id: mod._id\n                };\n              });\n              setAllModules(moduleCodes);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAllModules() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = function onSubmit() {\n    var _schools$find;\n\n    if (!validateForm()) {\n      message.error(\"You need to complete all fields other than Pre-requisites!\");\n      return;\n    }\n\n    var schoolId = (_schools$find = schools.find(function (school) {\n      return school.name === university;\n    })) === null || _schools$find === void 0 ? void 0 : _schools$find._id;\n    var prereqs = modulePrereqs.map(function (mod) {\n      return mod.id;\n    });\n    var semester = semesters.reduce(function (acc, sem, index) {\n      if (sem) acc.push(index + 1);\n      return acc;\n    }, []);\n    var newModule = {\n      code: code,\n      title: title,\n      schoolId: schoolId,\n      semester: semester,\n      description: description,\n      credit: credit,\n      workload: workload,\n      prereqs: prereqs\n    };\n\n    if (semester.length === 0) {\n      delete newModule.semester;\n    }\n\n    moduleApi.addModule(newModule);\n    console.log(newModule);\n    setModalVisibility(false);\n    resetState();\n    message.success(\"Successfully added module \".concat(code));\n  };\n\n  var validateForm = function validateForm() {\n    return code.trim() && title.trim() && university.trim() && description.trim() && credit && workload;\n  };\n\n  var resetState = function resetState() {\n    setCode(\"\");\n    setTitle(\"\");\n    setDescription(\"\");\n    setUniversity(\"\");\n    setCredit(4);\n    setSemesters([false, false, false, false]);\n    setWorkload(10);\n    setModulePrereqs([]);\n  };\n\n  var toggleSemester = function toggleSemester(sem) {\n    var currentBool = semesters[sem - 1];\n    var newToggledSemesters = semesters.map(function (x) {\n      return x;\n    });\n    newToggledSemesters[sem - 1] = !currentBool;\n    console.log(\"sems:\", newToggledSemesters);\n    setSemesters(newToggledSemesters);\n  };\n\n  return __jsx(FormModal, {\n    backgroundColor: codeBlue,\n    submitColor: \"#3E59B9\",\n    title: \"Add Module\",\n    isModalVisible: isModalVisible,\n    setModalVisibility: setModalVisibility,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, __jsx(FormModalItem, {\n    label: \"Module Code\",\n    type: \"input\",\n    value: code,\n    setValue: setCode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Title\",\n    type: \"input\",\n    value: title,\n    setValue: setTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Description\",\n    type: \"textarea\",\n    value: description,\n    setValue: setDescription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"University\",\n    type: \"autocomplete\",\n    options: schoolsAutocompleteOptions,\n    value: university,\n    setValue: setUniversity,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Workload/Week\",\n    type: \"number\",\n    value: workload,\n    setValue: setWorkload,\n    minNum: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Credit\",\n    type: \"number\",\n    value: credit,\n    setValue: setCredit,\n    minNum: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Semester\",\n    type: \"semesters\",\n    value: semesters,\n    setValue: toggleSemester,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), __jsx(FormModalItem, {\n    label: \"Pre-requisites\",\n    type: \"prereq\",\n    value: modulePrereqs,\n    setValue: setModulePrereqs,\n    options: allModules,\n    searchTerm: prereqSearchTerm,\n    setSearchTerm: setPrereqSearchTerm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(AddModuleModal, \"uQjaAr0w8Hp+t6hvCvSEnxM0jbI=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = AddModuleModal;\nexport default AddModuleModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddModuleModal\");","map":{"version":3,"sources":["/Users/ChesterSim/Desktop/NUS Computer Science/CS3219/cs3219-ay2021-s1-project-2020-s1-g01/frontend/components/AddModuleModal.tsx"],"names":["useState","useEffect","useSelector","moduleApi","FormModal","FormModalItem","codeBlue","message","AddModuleModal","isModalVisible","setModalVisibility","code","setCode","title","setTitle","description","setDescription","schoolName","state","auth","user","console","log","university","setUniversity","credit","setCredit","semesters","setSemesters","workload","setWorkload","modulePrereqs","setModulePrereqs","allModules","setAllModules","prereqSearchTerm","setPrereqSearchTerm","schools","schoolsAutocompleteOptions","map","school","value","name","getAllModules","searchModule","modules","moduleCodes","mod","id","_id","onSubmit","validateForm","error","schoolId","find","prereqs","semester","reduce","acc","sem","index","push","newModule","length","addModule","resetState","success","trim","toggleSemester","currentBool","newToggledSemesters","x"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,MAAxB;;AAOA,IAAMC,cAAoC,GAAG,SAAvCA,cAAuC,OAGvC;AAAA;;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,kBACI,QADJA,kBACI;;AAAA,kBACoBV,QAAQ,CAAC,EAAD,CAD5B;AAAA,MACGW,IADH;AAAA,MACSC,OADT;;AAAA,mBAEsBZ,QAAQ,CAAC,EAAD,CAF9B;AAAA,MAEGa,KAFH;AAAA,MAEUC,QAFV;;AAAA,mBAGkCd,QAAQ,CAAC,EAAD,CAH1C;AAAA,MAGGe,WAHH;AAAA,MAGgBC,cAHhB;;AAIJ,MAAMC,UAAU,GAAGf,WAAW,CAAC,UAACgB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBH,UAA3B;AAAA,GAAD,CAA9B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;;AANI,mBAOgCjB,QAAQ,CAACiB,UAAD,CAPxC;AAAA,MAOGM,UAPH;AAAA,MAOeC,aAPf;;AAAA,mBAQwBxB,QAAQ,CAAC,CAAD,CARhC;AAAA,MAQGyB,MARH;AAAA,MAQWC,SARX;;AAAA,mBAS8B1B,QAAQ,CAExC,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAFwC,CATtC;AAAA,MASG2B,SATH;AAAA,MAScC,YATd;;AAAA,mBAY4B5B,QAAQ,CAAC,EAAD,CAZpC;AAAA,MAYG6B,QAZH;AAAA,MAYaC,WAZb;;AAAA,mBAasC9B,QAAQ,CAAkB,EAAlB,CAb9C;AAAA,MAaG+B,aAbH;AAAA,MAakBC,gBAblB;;AAAA,mBAcgChC,QAAQ,CAAkB,EAAlB,CAdxC;AAAA,MAcGiC,UAdH;AAAA,MAceC,aAdf;;AAAA,oBAe4ClC,QAAQ,CAAC,EAAD,CAfpD;AAAA,MAeGmC,gBAfH;AAAA,MAeqBC,mBAfrB;;AAiBJ,MAAMC,OAAiB,GAAGnC,WAAW,CAAC,UAACgB,KAAD;AAAA,WAAWA,KAAK,CAACmB,OAAjB;AAAA,GAAD,CAArC;AACA,MAAMC,0BAA0B,GAAGD,OAAO,CAACE,GAAR,CAAY,UAACC,MAAD;AAAA,WAAa;AAC1DC,MAAAA,KAAK,EAAED,MAAM,CAACE;AAD4C,KAAb;AAAA,GAAZ,CAAnC;AAIAzC,EAAAA,SAAS,CAAC,YAAM;AACduB,IAAAA,aAAa,CAACP,UAAD,CAAb;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,YAAM;AACd0C,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACR,gBAAD,CAFM,CAAT;;AAIA,MAAMQ,aAAa;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACExC,SAAS,CAACyC,YAAV,CAAuBT,gBAAvB,EAAyC,EAAzC,CADF;;AAAA;AACdU,cAAAA,OADc;AAEdC,cAAAA,WAFc,GAEAD,OAAO,CAACN,GAAR,CAAY,UAACQ,GAAD;AAAA,uBAAU;AACxCN,kBAAAA,KAAK,EAAEM,GAAG,CAACpC,IAD6B;AAExCqC,kBAAAA,EAAE,EAAED,GAAG,CAACE;AAFgC,iBAAV;AAAA,eAAZ,CAFA;AAMpBf,cAAAA,aAAa,CAACY,WAAD,CAAb;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbH,aAAa;AAAA;AAAA;AAAA,KAAnB;;AASA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AACrB,QAAI,CAACC,YAAY,EAAjB,EAAqB;AACnB5C,MAAAA,OAAO,CAAC6C,KAAR,CACE,4DADF;AAGA;AACD;;AAED,QAAMC,QAAQ,oBAAGhB,OAAO,CAACiB,IAAR,CAAa,UAACd,MAAD;AAAA,aAAYA,MAAM,CAACE,IAAP,KAAgBnB,UAA5B;AAAA,KAAb,CAAH,kDAAG,cAAsD0B,GAAvE;AACA,QAAMM,OAAO,GAAGxB,aAAa,CAACQ,GAAd,CAAkB,UAACQ,GAAD;AAAA,aAASA,GAAG,CAACC,EAAb;AAAA,KAAlB,CAAhB;AACA,QAAMQ,QAAQ,GAAG7B,SAAS,CAAC8B,MAAV,CAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,EAAqB;AACrD,UAAID,GAAJ,EAASD,GAAG,CAACG,IAAJ,CAASD,KAAK,GAAG,CAAjB;AACT,aAAOF,GAAP;AACD,KAHgB,EAGd,EAHc,CAAjB;AAKA,QAAMI,SAAS,GAAG;AAChBnD,MAAAA,IAAI,EAAJA,IADgB;AAEhBE,MAAAA,KAAK,EAALA,KAFgB;AAGhBwC,MAAAA,QAAQ,EAARA,QAHgB;AAIhBG,MAAAA,QAAQ,EAARA,QAJgB;AAKhBzC,MAAAA,WAAW,EAAXA,WALgB;AAMhBU,MAAAA,MAAM,EAANA,MANgB;AAOhBI,MAAAA,QAAQ,EAARA,QAPgB;AAQhB0B,MAAAA,OAAO,EAAPA;AARgB,KAAlB;;AAWA,QAAIC,QAAQ,CAACO,MAAT,KAAoB,CAAxB,EAA2B;AACzB,aAAOD,SAAS,CAACN,QAAjB;AACD;;AAEDrD,IAAAA,SAAS,CAAC6D,SAAV,CAAoBF,SAApB;AACAzC,IAAAA,OAAO,CAACC,GAAR,CAAYwC,SAAZ;AACApD,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAuD,IAAAA,UAAU;AACV1D,IAAAA,OAAO,CAAC2D,OAAR,qCAA6CvD,IAA7C;AACD,GAnCD;;AAqCA,MAAMwC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOxC,IAAI,CAACwD,IAAL,MAAetD,KAAK,CAACsD,IAAN,EAAf,IAA+B5C,UAAU,CAAC4C,IAAX,EAA/B,IAAoDpD,WAAW,CAACoD,IAAZ,EAApD,IAA0E1C,MAA1E,IAAoFI,QAA3F;AACD,GAFD;;AAIA,MAAMoC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBrD,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAQ,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAE,IAAAA,YAAY,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,CAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,GATD;;AAWA,MAAMoC,cAAc,GAAG,SAAjBA,cAAiB,CAACT,GAAD,EAAS;AAC9B,QAAMU,WAAW,GAAG1C,SAAS,CAACgC,GAAG,GAAG,CAAP,CAA7B;AACA,QAAMW,mBAKL,GAAG3C,SAAS,CAACY,GAAV,CAAc,UAACgC,CAAD;AAAA,aAAOA,CAAP;AAAA,KAAd,CALJ;AAMAD,IAAAA,mBAAmB,CAACX,GAAG,GAAG,CAAP,CAAnB,GAA+B,CAACU,WAAhC;AACAhD,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBgD,mBAArB;AACA1C,IAAAA,YAAY,CAAC0C,mBAAD,CAAZ;AACD,GAXD;;AAaA,SACE,MAAC,SAAD;AACE,IAAA,eAAe,EAAEhE,QADnB;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAC,YAHR;AAIE,IAAA,cAAc,EAAEG,cAJlB;AAKE,IAAA,kBAAkB,EAAEC,kBALtB;AAME,IAAA,QAAQ,EAAEwC,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEvC,IAHT;AAIE,IAAA,QAAQ,EAAEC,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAcE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAoBE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEC,WAHT;AAIE,IAAA,QAAQ,EAAEC,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EA0BE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,OAAO,EAAEsB,0BAHX;AAIE,IAAA,KAAK,EAAEf,UAJT;AAKE,IAAA,QAAQ,EAAEC,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EAiCE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEK,QAHT;AAIE,IAAA,QAAQ,EAAEC,WAJZ;AAKE,IAAA,MAAM,EAAE,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,EAwCE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEL,MAHT;AAIE,IAAA,QAAQ,EAAEC,SAJZ;AAKE,IAAA,MAAM,EAAE,CALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,EA+CE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,KAAK,EAAEC,SAHT;AAIE,IAAA,QAAQ,EAAEyC,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CF,EAqDE,MAAC,aAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAErC,aAHT;AAIE,IAAA,QAAQ,EAAEC,gBAJZ;AAKE,IAAA,OAAO,EAAEC,UALX;AAME,IAAA,UAAU,EAAEE,gBANd;AAOE,IAAA,aAAa,EAAEC,mBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDF,CADF;AAiED,CA5KD;;GAAM5B,c;UAOeN,W,EAaOA,W;;;KApBtBM,c;AA8KN,eAAeA,cAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ModalState } from \"../types\";\nimport { useSelector } from \"react-redux\";\nimport { School } from \"../types\";\nimport moduleApi from \"../api/module\";\n\nimport FormModal from \"./FormModal\";\nimport FormModalItem from \"./FormModalItem\";\nimport { codeBlue } from \"../styles/colors\";\nimport { message } from \"antd\";\n\ninterface SearchOptions {\n  value: string;\n  id: string;\n}\n\nconst AddModuleModal: React.FC<ModalState> = ({\n  isModalVisible,\n  setModalVisibility,\n}) => {\n  const [code, setCode] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const schoolName = useSelector((state) => state.auth.user.schoolName);\n  console.log(\"prinitng sch name\");\n  console.log(schoolName);\n  const [university, setUniversity] = useState(schoolName);\n  const [credit, setCredit] = useState(4);\n  const [semesters, setSemesters] = useState<\n    [boolean, boolean, boolean, boolean]\n  >([false, false, false, false]);\n  const [workload, setWorkload] = useState(10);\n  const [modulePrereqs, setModulePrereqs] = useState<SearchOptions[]>([]);\n  const [allModules, setAllModules] = useState<SearchOptions[]>([]);\n  const [prereqSearchTerm, setPrereqSearchTerm] = useState(\"\");\n\n  const schools: School[] = useSelector((state) => state.schools);\n  const schoolsAutocompleteOptions = schools.map((school) => ({\n    value: school.name,\n  }));\n\n  useEffect(() => {\n    setUniversity(schoolName);\n  }, [schoolName]);\n\n  useEffect(() => {\n    getAllModules();\n  }, [prereqSearchTerm]);\n\n  const getAllModules = async () => {\n    const modules = await moduleApi.searchModule(prereqSearchTerm, 20);\n    const moduleCodes = modules.map((mod) => ({\n      value: mod.code,\n      id: mod._id,\n    }));\n    setAllModules(moduleCodes);\n  };\n\n  const onSubmit = () => {\n    if (!validateForm()) {\n      message.error(\n        \"You need to complete all fields other than Pre-requisites!\"\n      );\n      return;\n    }\n\n    const schoolId = schools.find((school) => school.name === university)?._id;\n    const prereqs = modulePrereqs.map((mod) => mod.id);\n    const semester = semesters.reduce((acc, sem, index) => {\n      if (sem) acc.push(index + 1);\n      return acc;\n    }, []);\n\n    const newModule = {\n      code,\n      title,\n      schoolId,\n      semester,\n      description,\n      credit,\n      workload,\n      prereqs,\n    };\n\n    if (semester.length === 0) {\n      delete newModule.semester;\n    }\n\n    moduleApi.addModule(newModule);\n    console.log(newModule);\n    setModalVisibility(false);\n    resetState();\n    message.success(`Successfully added module ${code}`);\n  };\n\n  const validateForm = () => {\n    return code.trim() && title.trim() && university.trim() && description.trim() && credit && workload;\n  };\n\n  const resetState = () => {\n    setCode(\"\");\n    setTitle(\"\");\n    setDescription(\"\");\n    setUniversity(\"\");\n    setCredit(4);\n    setSemesters([false, false, false, false]);\n    setWorkload(10);\n    setModulePrereqs([]);\n  };\n\n  const toggleSemester = (sem) => {\n    const currentBool = semesters[sem - 1];\n    const newToggledSemesters: [\n      boolean,\n      boolean,\n      boolean,\n      boolean\n    ] = semesters.map((x) => x) as [boolean, boolean, boolean, boolean];\n    newToggledSemesters[sem - 1] = !currentBool;\n    console.log(\"sems:\", newToggledSemesters);\n    setSemesters(newToggledSemesters);\n  };\n\n  return (\n    <FormModal\n      backgroundColor={codeBlue}\n      submitColor=\"#3E59B9\"\n      title=\"Add Module\"\n      isModalVisible={isModalVisible}\n      setModalVisibility={setModalVisibility}\n      onSubmit={onSubmit}\n    >\n      <FormModalItem\n        label=\"Module Code\"\n        type=\"input\"\n        value={code}\n        setValue={setCode}\n      />\n      <FormModalItem\n        label=\"Title\"\n        type=\"input\"\n        value={title}\n        setValue={setTitle}\n      />\n      <FormModalItem\n        label=\"Description\"\n        type=\"textarea\"\n        value={description}\n        setValue={setDescription}\n      />\n      <FormModalItem\n        label=\"University\"\n        type=\"autocomplete\"\n        options={schoolsAutocompleteOptions}\n        value={university}\n        setValue={setUniversity}\n      />\n      <FormModalItem\n        label=\"Workload/Week\"\n        type=\"number\"\n        value={workload}\n        setValue={setWorkload}\n        minNum={0}\n      />\n      <FormModalItem\n        label=\"Credit\"\n        type=\"number\"\n        value={credit}\n        setValue={setCredit}\n        minNum={0}\n      />\n      <FormModalItem\n        label=\"Semester\"\n        type=\"semesters\"\n        value={semesters}\n        setValue={toggleSemester}\n      />\n      <FormModalItem\n        label=\"Pre-requisites\"\n        type=\"prereq\"\n        value={modulePrereqs}\n        setValue={setModulePrereqs}\n        options={allModules}\n        searchTerm={prereqSearchTerm}\n        setSearchTerm={setPrereqSearchTerm}\n      />\n    </FormModal>\n  );\n};\n\nexport default AddModuleModal;\n"]},"metadata":{},"sourceType":"module"}