{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport queryString from \"query-string\";\nvar baseUrl = \"http://localhost:8080/api/event\";\n\nvar addEvent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId, sub, subId, type) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(baseUrl, {\n              userId: userId,\n              sub: sub,\n              subId: subId,\n              type: type\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function addEvent(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getEvent = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(subscriberType, subscriberId, userId, eventType) {\n    var query, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            query = queryString.stringify({\n              sub: subscriberType,\n              subId: subscriberId,\n              userId: userId,\n              type: eventType\n            });\n            _context2.next = 3;\n            return axios.get(\"\".concat(baseUrl, \"/find/?\").concat(query));\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getEvent(_x5, _x6, _x7, _x8) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar deleteEvent = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(subscriberType, subscriberId, userId, eventType) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios[\"delete\"](baseUrl, {\n              params: {\n                sub: subscriberType,\n                subId: subscriberId,\n                userId: userId,\n                type: eventType\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deleteEvent(_x9, _x10, _x11, _x12) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  addEvent: addEvent,\n  getEvent: getEvent,\n  deleteEvent: deleteEvent\n};","map":{"version":3,"sources":["/Users/zhangxian/Desktop/RottenMods/frontend/api/event.ts"],"names":["axios","queryString","baseUrl","addEvent","userId","sub","subId","type","post","response","data","getEvent","subscriberType","subscriberId","eventType","query","stringify","get","deleteEvent","params"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,IAAMC,OAAO,GAAG,iCAAhB;;AAEA,IAAMC,QAAQ;AAAA,sEAAG,iBACfC,MADe,EAEfC,GAFe,EAGfC,KAHe,EAIfC,IAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMQP,KAAK,CAACQ,IAAN,CAAWN,OAAX,EAAoB;AACzCE,cAAAA,MAAM,EAANA,MADyC;AAEzCC,cAAAA,GAAG,EAAHA,GAFyC;AAGzCC,cAAAA,KAAK,EAALA,KAHyC;AAIzCC,cAAAA,IAAI,EAAJA;AAJyC,aAApB,CANR;;AAAA;AAMTE,YAAAA,QANS;AAAA,6CAaRA,QAAQ,CAACC,IAbD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARP,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAgBA,IAAMQ,QAAQ;AAAA,uEAAG,kBAAOC,cAAP,EAAuBC,YAAvB,EAAqCT,MAArC,EAA6CU,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,KADS,GACDd,WAAW,CAACe,SAAZ,CAAsB;AAClCX,cAAAA,GAAG,EAAEO,cAD6B;AAElCN,cAAAA,KAAK,EAAEO,YAF2B;AAGlCT,cAAAA,MAAM,EAANA,MAHkC;AAIlCG,cAAAA,IAAI,EAAEO;AAJ4B,aAAtB,CADC;AAAA;AAAA,mBAOQd,KAAK,CAACiB,GAAN,WAAaf,OAAb,oBAA8Ba,KAA9B,EAPR;;AAAA;AAOTN,YAAAA,QAPS;AAAA,8CASRA,QAAQ,CAACC,IATD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARC,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAYA,IAAMO,WAAW;AAAA,uEAAG,kBAAON,cAAP,EAAuBC,YAAvB,EAAqCT,MAArC,EAA6CU,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZd,KAAK,UAAL,CAAaE,OAAb,EAAsB;AAC1BiB,cAAAA,MAAM,EAAE;AACNd,gBAAAA,GAAG,EAAEO,cADC;AAENN,gBAAAA,KAAK,EAAEO,YAFD;AAGNT,gBAAAA,MAAM,EAANA,MAHM;AAING,gBAAAA,IAAI,EAAEO;AAJA;AADkB,aAAtB,CADY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXI,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAWA,eAAe;AACbf,EAAAA,QAAQ,EAARA,QADa;AAEbQ,EAAAA,QAAQ,EAARA,QAFa;AAGbO,EAAAA,WAAW,EAAXA;AAHa,CAAf","sourcesContent":["import axios from \"axios\";\nimport queryString from \"query-string\";\nconst baseUrl = \"http://localhost:8080/api/event\";\n\nconst addEvent = async (\n  userId: string,\n  sub: \"course\" | \"mod\" | \"review\" | \"school\",\n  subId: string,\n  type: \"view\" | \"like\"\n) => {\n  const response = await axios.post(baseUrl, {\n    userId,\n    sub,\n    subId,\n    type,\n  });\n\n  return response.data;\n};\n\nconst getEvent = async (subscriberType, subscriberId, userId, eventType) => {\n  const query = queryString.stringify({\n    sub: subscriberType,\n    subId: subscriberId,\n    userId,\n    type: eventType,\n  });\n  const response = await axios.get(`${baseUrl}/find/?${query}`);\n\n  return response.data;\n};\n\nconst deleteEvent = async (subscriberType, subscriberId, userId, eventType) => {\n  await axios.delete(baseUrl, {\n    params: {\n      sub: subscriberType,\n      subId: subscriberId,\n      userId,\n      type: eventType,\n    },\n  });\n};\n\nexport default {\n  addEvent,\n  getEvent,\n  deleteEvent,\n};\n"]},"metadata":{},"sourceType":"module"}